{"version":3,"file":"fxmaster.js","sources":["../src/constants.js","../src/utils.js","../src/logger.js","../src/migration/helpers.js","../src/migration/world/2.js","../src/migration/world/3.js","../src/migration/world/4.js","../src/migration/world/migration.js","../src/migration/client/1.js","../src/migration/client/migration.js","../src/migration/migration.js","../src/settings.js","../src/hooks.js","../src/filter-effects/filters/mixins/filter.js","../src/filter-effects/filters/mixins/fading-filter.js","../src/filter-effects/filters/bloom.js","../src/filter-effects/filters/color.js","../src/filter-effects/filters/fog.js","../src/ease.js","../src/filter-effects/filters/lightning.js","../src/filter-effects/filters/old-film.js","../src/filter-effects/filters/predator.js","../src/filter-effects/filters/underwater.js","../src/filter-effects/filter-effects-db.js","../src/particle-effects/effects/effect.js","../src/particle-effects/effects/mixins/default-retangle-spawn.js","../src/particle-effects/effects/spiders.js","../src/particle-effects/effects/helpers/with-stepped-gradient-color.js","../src/particle-effects/effects/stars.js","../src/particle-effects/effects/leaves.js","../src/particle-effects/effects/bats.js","../src/particle-effects/effects/bubbles.js","../src/particle-effects/effects/clouds.js","../src/particle-effects/effects/crows.js","../src/particle-effects/effects/eagles.js","../src/particle-effects/effects/fog.js","../src/particle-effects/effects/rats.js","../src/particle-effects/effects/snowstorm.js","../src/particle-effects/particle-effects-db.js","../src/config.js","../src/particle-effects/effects/birds.js","../src/particle-effects/effects/embers.js","../src/particle-effects/effects/rain.js","../src/particle-effects/effects/rain-top.js","../src/particle-effects/effects/rain-simple.js","../src/particle-effects/effects/snow.js","../src/special-effects/special-effects-db.js","../src/particle-effects/particle-effects-layer.js","../src/particle-effects/drawings-mask.js","../src/filter-effects/filter-manager.js","../src/special-effects/applications/special-effect-config.js","../src/special-effects/applications/special-effects-management.js","../src/special-effects/mesh.js","../src/special-effects/special-effects-layer.js","../src/base-form.js","../src/particle-effects/applications/particle-effects-management.js","../src/filter-effects/applications/filter-effects-management.js","../src/macro.js","../src/controls.js","../src/fxmaster.js","../src/handlebars-helpers.js"],"sourcesContent":["export const packageId = \"fxmaster\";\n","import { packageId } from \"./constants.js\";\n\n/**\n * Reset a flag to a given value, replacing inner objects.\n * @param {foundry.abstract.Document} document The document on which to reset the flag\n * @param {string}                    key      The flag key\n * @param {*}                         value    The flag value\n * @return {Promise<Document>}  A Promise resolving to the updated document\n */\nexport function resetFlag(document, key, value) {\n  if (typeof value === \"object\" && !Array.isArray(value) && value !== null) {\n    const oldFlags = document.getFlag(packageId, key);\n    const keys = oldFlags ? Object.keys(oldFlags) : [];\n    keys.forEach((k) => {\n      if (value[k]) return;\n      value[`-=${k}`] = null;\n    });\n  }\n  return document.setFlag(packageId, key, value);\n}\n\n/**\n * Round a number to the given number of decimals.\n * @param {number} number   The number to round\n * @param {number} decimals The number of decimals to round to\n * @returns {number} The rounded result\n */\nexport function roundToDecimals(number, decimals) {\n  return Number(Math.round(number + \"e\" + decimals) + \"e-\" + decimals);\n}\n\n/**\n * Omit a specific key from an object.\n * @param {object} object The object from which to omit\n * @param {string|number|symbol} key The key to omit\n * @returns {object} The object without the given key.\n */\nexport function omit(object, key) {\n  const { [key]: _omitted, ...rest } = object;\n  return rest;\n}\n","const loggingContext = \"FXMaster\";\nconst loggingSeparator = \"|\";\n\n/**\n * Gets a logging function for the requested log level.\n * @typedef {'debug' | 'info' | 'warn' | 'error'} LogLevel\n * @typedef {(...args: unknown[]) => void} LoggingFunction\n * @param {LogLevel} [type = 'info'] - The log level of the requested logger\n * @returns {LoggingFunction}\n */\nfunction getLoggingFunction(type = \"info\") {\n  const log = console[type];\n  return (...data) => log(loggingContext, loggingSeparator, ...data);\n}\n\n/**\n * Format a message for logging.\n * @param {string} msg The message to format for logging.\n */\nexport function format(msg) {\n  return `${loggingContext} ${loggingSeparator} ${msg}`;\n}\n\n/**\n * A singleton logger object.\n */\nexport const logger = Object.freeze({\n  debug: getLoggingFunction(\"debug\"),\n  info: getLoggingFunction(\"info\"),\n  warn: getLoggingFunction(\"warn\"),\n  error: getLoggingFunction(\"error\"),\n  getLoggingFunction,\n});\n","import { logger } from \"../logger.js\";\n\n/**\n * Migrate a world collection.\n * @param {WorldCollection} collection The world collection to migrate\n * @param {(document: Document) => Promise<void>} migrateDocument The function to use for updating a single document\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateWorldCollection(collection, migrateDocument) {\n  let isError = false;\n\n  for (const document of collection) {\n    logger.debug(`Migrating ${collection.documentName} '${document.name}' (${document.id}).`);\n    try {\n      await migrateDocument(document);\n    } catch (e) {\n      logger.error(`Migration of ${collection.documentName} '${document.name}' (${document.id}) failed.`, e);\n      isError = true;\n    }\n  }\n\n  return isError;\n}\n\n/**\n * Migrate a compendium pack.\n * @param {CompendiumCollection} pack The compendium pack to migrate\n * @param {(document: Document) => Promise<void>} migrateDocument The function to use for updating a single document\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateCompendiumCollection(pack, migrateDocument) {\n  let isError = false;\n\n  const type = pack.metadata.type;\n\n  const wasLocked = pack.locked;\n  await pack.configure({ locked: false });\n\n  const documents = await pack.getDocuments();\n\n  for (const document of documents) {\n    logger.debug(`Migrating ${type} '${document.name}' (${document.id}) in compendium ${pack.collection}.`);\n    try {\n      await migrateDocument(document);\n    } catch (e) {\n      logger.error(\n        `Migration of ${type} '${document.name}' (${document.id}) in compendium ${pack.collection} failed.`,\n        e,\n      );\n      isError = true;\n    }\n  }\n\n  await pack.configure({ locked: wasLocked });\n\n  return isError;\n}\n\n/** @typedef {Record<string, (document: Document) => Promise<void>} MigrationConfiguration */\n\n/**\n * Migrate the given world collections according to the given migration configuration.\n * @param {Iterable<WorldCollection>} collections            The world collections to migrate\n * @param {MigrationConfiguration}    migrationConfiguration The configuration for the migration\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateWorldCollections(collections, migrationConfiguration) {\n  let isError = false;\n\n  for (const collection of collections) {\n    const type = collection.documentName;\n    if (!(type in migrationConfiguration)) {\n      continue;\n    }\n    isError |= await migrateWorldCollection(collection, migrationConfiguration[type]);\n  }\n\n  return isError;\n}\n\n/** @typedef {{migrateNonWorldPacks?: boolean}} MigrateCompendiumCollectionsOptions */\n\n/**\n * Migrate the given compoendium packs according to the given migration configuration.\n * @param {Iterable<CompendiumCollection>}      collections            The compendium packs to migrate\n * @param {MigrationConfiguration}              migrationConfiguration The configuration for the migration\n * @param {MigrateCompendiumCollectionsOptions} [options={}]           Additional options for the migration\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrateCompendiumCollections(\n  packs,\n  migrationConfiguration,\n  { migrateNonWorldPacks = false } = {},\n) {\n  let isError = false;\n\n  for (const pack of packs) {\n    const type = pack.metadata.type;\n    if ((pack.metadata.package !== \"world\" && !migrateNonWorldPacks) || !(type in migrationConfiguration)) {\n      continue;\n    }\n    isError |= await migrateCompendiumCollection(pack, migrationConfiguration[type]);\n  }\n\n  return isError;\n}\n\n/**\n * Perform a migration for the given migration configuration.\n * @param {MigrationConfiguration} migrationConfiguration The configuration for the migration\n * @returns {Promise<boolean>} Whether or not there was an error during the migration\n */\nexport async function migrate(migrationConfiguration) {\n  let isError = false;\n  isError |= await migrateWorldCollections(game.collections, migrationConfiguration);\n  isError |= await migrateCompendiumCollections(game.packs, migrationConfiguration);\n  return isError;\n}\n","import { packageId } from \"../../constants.js\";\nimport { resetFlag } from \"../../utils.js\";\nimport { migrate } from \"../helpers.js\";\n\nexport async function migrate2() {\n  return migrate(migrationConfiguration2);\n}\n\n/** @type {import('../helpers.js').MigrationConfiguration} */\nexport const migrationConfiguration2 = {\n  Scene: migrateScene,\n};\n\nasync function migrateScene(scene) {\n  const particleEffects = scene.getFlag(packageId, \"effects\") ?? {};\n  if (Object.keys(particleEffects).length > 0) {\n    const newParticleEffects = Object.fromEntries(\n      Object.entries(particleEffects).map(([id, effect]) => {\n        const particleEffectClass = CONFIG.fxmaster.particleEffects[effect.type];\n        return [id, { ...effect, options: particleEffectClass.convertOptionsToV2(effect.options, scene) }];\n      }),\n    );\n    await resetFlag(scene, \"effects\", newParticleEffects);\n  }\n}\n","import { packageId } from \"../../constants.js\";\nimport { migrate } from \"../helpers.js\";\n\nexport async function migrate3() {\n  return migrate(migrationConfiguration3);\n}\n\n/** @type {import('../helpers.js').MigrationConfiguration} */\nexport const migrationConfiguration3 = {\n  Macro: migrateMacro,\n  Scene: migrateScene,\n};\n\nasync function migrateMacro(macro) {\n  /** @type {{command: string, img: string | null}} */\n  const { command, img } = macro;\n\n  const newCommand = command\n    ?.replaceAll(`${packageId}.updateWeather`, `${packageId}.updateParticleEffects`)\n    .replaceAll(`updateWeather`, `${packageId}.updateParticleEffects`)\n    .replaceAll(`${packageId}.switchWeather`, `${packageId}.switchParticleEffect`)\n    .replaceAll(`switchWeather`, `${packageId}.switchParticleEffect`)\n    .replaceAll(\"fxmaster/assets/specialEffects\", \"fxmaster/assets/special-effects\")\n    .replaceAll(\n      \"fxmaster/assets/special-effects/fxmaster/smokeBomb.webm\",\n      \"fxmaster/assets/special-effects/fxmaster/smoke-bomb.webm\",\n    );\n\n  const newImg = img?.replaceAll(\"fxmaster/assets/weatherEffects/icons\", \"fxmaster/assets/particle-effects/icons\");\n\n  if (newCommand !== command || newImg !== img) {\n    await macro.update({ command: newCommand, img: newImg });\n  }\n}\n\nasync function migrateScene(scene) {\n  if (scene.getFlag(packageId, \"filteredLayers\") !== undefined) {\n    await scene.unsetFlag(packageId, \"filteredLayers\");\n  }\n}\n","import { migrate } from \"../helpers\";\n\nexport async function migrate4() {\n  return migrate(migrationConfiguration4);\n}\n\n/** @type {import('../helpers').MigrationConfiguration} */\nexport const migrationConfiguration4 = {\n  Scene: migrateScene,\n};\n\nasync function migrateScene(scene) {\n  const originalWeatherEffectKeys = Object.keys(CONFIG.originalWeatherEffects);\n  const weatherEffectsToMigrate = Object.keys(CONFIG.fxmaster.particleEffects).filter(\n    (effect) => !originalWeatherEffectKeys.includes(effect), // only migrate effects where we are certain they are ours\n  );\n\n  if (weatherEffectsToMigrate.includes(scene.weather)) {\n    await scene.update({ weather: `fxmaster.${scene.weather}` });\n  }\n}\n","/* eslint-disable no-fallthrough */\nimport { packageId } from \"../../constants.js\";\nimport { migrate2, migrationConfiguration2 } from \"./2.js\";\nimport { migrate3, migrationConfiguration3 } from \"./3.js\";\nimport { migrate4, migrationConfiguration4 } from \"./4.js\";\n\nexport const targetServerMigration = 4;\n\nexport async function migrateWorld() {\n  const migration = game.settings.get(packageId, \"migration\");\n  if (migration === -1) {\n    return game.settings.set(packageId, \"migration\", targetServerMigration);\n  }\n\n  if (migration < targetServerMigration) {\n    ui.notifications.info(\"FXMASTER.MigrationWorldStart\", { localize: true, permanent: true });\n    let isError = false;\n\n    switch (migration) {\n      case 0:\n      case 1:\n        isError |= await migrate2();\n      case 2:\n        isError |= await migrate3();\n      case 3:\n        isError |= await migrate4();\n    }\n\n    if (isError) {\n      await game.settings.set(packageId, \"disableAll\", true);\n      ui.notifications.error(\"FXMASTER.MigrationWorldCompletedWithErrors\", { localize: true, permanent: true });\n    } else {\n      ui.notifications.info(\"FXMASTER.MigrationWorldCompletedSuccessfully\", { localize: true, permanent: true });\n    }\n    await game.settings.set(packageId, \"migration\", targetServerMigration);\n  }\n}\n\nexport function isOnTargetWorldMigration() {\n  return game.settings.get(packageId, \"migration\") === targetServerMigration;\n}\n\nexport const worldMigrations = {\n  2: {\n    migrate: migrate2,\n    config: migrationConfiguration2,\n  },\n  3: {\n    migrate: migrate3,\n    config: migrationConfiguration3,\n  },\n  4: {\n    migrate: migrate4,\n    config: migrationConfiguration4,\n  },\n};\n","import { packageId } from \"../../constants.js\";\n\nexport async function migrate1() {\n  const effects = game.settings.get(packageId, \"specialEffects\");\n  for (let i = 0; i < effects.length; ++i) {\n    if (typeof effects[i].scale !== \"object\") {\n      effects[i].scale = {\n        x: effects[i].scale,\n        y: effects[i].scale,\n      };\n    }\n  }\n  await game.settings.set(packageId, \"specialEffects\", effects);\n  return false;\n}\n","import { packageId } from \"../../constants.js\";\nimport { migrate1 } from \"./1.js\";\n\nexport const targetClientMigration = 1;\n\nexport async function migrateClient() {\n  const migration = game.settings.get(packageId, \"clientMigration\");\n  if (migration === -1) {\n    return game.settings.set(packageId, \"clientMigration\", targetClientMigration);\n  }\n\n  if (migration < targetClientMigration) {\n    ui.notifications.info(\"FXMASTER.MigrationClientStart\", { permanent: true, localize: true });\n    let isError = false;\n\n    switch (migration) {\n      case 0:\n        isError |= await migrate1();\n    }\n\n    if (isError) {\n      ui.notifications.error(\"FXMASTER.MigrationClientCompletedWithErrors\", { localize: true, permanent: true });\n    } else {\n      ui.notifications.info(\"FXMASTER.MigrationClientCompletedSuccessfully\", { localize: true, permanent: true });\n    }\n    await game.settings.set(packageId, \"clientMigration\", targetClientMigration);\n  }\n}\n\nexport function isOnTargetClientMigration() {\n  return game.settings.get(packageId, \"clientMigration\") === targetClientMigration;\n}\n\nexport const clientMigrations = {\n  1: {\n    migrate: migrate1,\n  },\n};\n","import { isOnTargetWorldMigration, migrateWorld, worldMigrations } from \"./world/migration.js\";\nimport { clientMigrations, isOnTargetClientMigration, migrateClient } from \"./client/migration.js\";\nimport * as helpers from \"./helpers.js\";\n\nexport async function migrate() {\n  await migrateClient();\n  if (game.user.isGM) {\n    await migrateWorld();\n  }\n}\n\nexport function isOnTargetMigration() {\n  return isOnTargetWorldMigration() && isOnTargetClientMigration();\n}\n\n/**\n * Schedule a callback to be executed as soon as the world has been migrated to the target migration. If it is on the\n * latest migration already, the callback is executed immediately. Callbacks are executed in the order in that they have\n * been registered.\n * @param {() => (Promise<void> | void)} callback A callback to execute when the world is migrated\n */\nexport function executeWhenWorldIsMigratedToLatest(callback) {\n  if (!isOnTargetWorldMigration()) {\n    worldMigrationCallbacks.push(callback);\n  } else {\n    callback();\n  }\n}\n\n/** @type {Array<() => (Promise<void> | void)>} */\nconst worldMigrationCallbacks = [];\n\nexport async function onWorldMigrated() {\n  if (isOnTargetWorldMigration()) {\n    while (worldMigrationCallbacks.length > 0) {\n      const callback = worldMigrationCallbacks.shift();\n      await callback();\n    }\n  }\n}\n\nexport const migration = { client: clientMigrations, world: worldMigrations, helpers };\n","import { packageId } from \"./constants.js\";\nimport { onWorldMigrated } from \"./migration/migration.js\";\n\nexport function registerSettings() {\n  game.settings.register(packageId, \"enable\", {\n    name: \"FXMASTER.Enable\",\n    default: true,\n    scope: \"client\",\n    type: Boolean,\n    config: true,\n    requiresReload: true,\n  });\n\n  game.settings.register(packageId, \"specialEffects\", {\n    name: \"specialEffects\",\n    default: [],\n    scope: \"world\",\n    type: Array,\n    config: false,\n  });\n\n  game.settings.register(packageId, \"migration\", {\n    name: \"migration\",\n    default: -1,\n    scope: \"world\",\n    type: Number,\n    config: false,\n    onChange: onWorldMigrated,\n  });\n\n  game.settings.register(packageId, \"clientMigration\", {\n    name: \"clientMigration\",\n    default: -1,\n    scope: \"client\",\n    type: Number,\n    config: false,\n  });\n\n  game.settings.register(packageId, \"permission-create\", {\n    name: \"FXMASTER.PermissionCreate\",\n    hint: \"FXMASTER.PermissionCreateHint\",\n    scope: \"world\",\n    config: true,\n    default: foundry.CONST.USER_ROLES.ASSISTANT,\n    type: Number,\n    choices: {\n      [foundry.CONST.USER_ROLES.PLAYER]: \"USER.RolePlayer\",\n      [foundry.CONST.USER_ROLES.TRUSTED]: \"USER.RoleTrusted\",\n      [foundry.CONST.USER_ROLES.ASSISTANT]: \"USER.RoleAssistant\",\n      [foundry.CONST.USER_ROLES.GAMEMASTER]: \"USER.RoleGamemaster\",\n    },\n    requiresReload: true,\n  });\n\n  game.settings.register(packageId, \"disableAll\", {\n    name: \"FXMASTER.DisableAll\",\n    hint: \"FXMASTER.DisableAllHint\",\n    default: false,\n    scope: \"world\",\n    type: Boolean,\n    config: true,\n  });\n}\n\nexport function isEnabled() {\n  return game.settings.get(packageId, \"enable\") && !game.settings.get(packageId, \"disableAll\");\n}\n","import { packageId } from \"./constants.js\";\nimport { format } from \"./logger.js\";\nimport { omit, resetFlag } from \"./utils.js\";\n\nexport const registerHooks = function () {\n  Hooks.on(`${packageId}.switchParticleEffect`, onSwitchParticleEffects);\n  Hooks.on(`${packageId}.updateParticleEffects`, onUpdateParticleEffects);\n  Object.keys(deprecations).forEach((hook) => Hooks.on(hook, onDeprecated(hook)));\n};\n\n/**\n * Handle a request to toggle named a particle effect in the current scene.\n * @param {{name: string, type: string, options: object}} parameters The parameters that define the named particle effect\n */\nasync function onSwitchParticleEffects(parameters) {\n  if (!canvas.scene) {\n    return;\n  }\n\n  const currentEffects = canvas.scene.getFlag(packageId, \"effects\") ?? {};\n  const shouldSwitchOff = parameters.name in currentEffects;\n  const effects = shouldSwitchOff\n    ? omit(currentEffects, parameters.name)\n    : { ...currentEffects, [parameters.name]: { type: parameters.type, options: parameters.options } };\n\n  if (Object.keys(effects).length == 0) {\n    await canvas.scene.unsetFlag(packageId, \"effects\");\n  } else {\n    await resetFlag(canvas.scene, \"effects\", effects);\n  }\n}\n\n/**\n * Handle a request to set the particle effects in the current scene.\n * @param {Array<object>} parametersArray The array of parameters defining the effects to be activated\n */\nasync function onUpdateParticleEffects(parametersArray) {\n  const effects = Object.fromEntries(parametersArray.map((parameters) => [foundry.utils.randomID(), parameters]));\n  await resetFlag(canvas.scene, \"effects\", effects);\n}\n\nconst deprecations = {\n  updateWeather: {\n    replacedBy: `${packageId}.updateParticleEffects`,\n    callback: onUpdateParticleEffects,\n  },\n  switchWeather: {\n    replacedBy: `${packageId}.switchParticleEffects`,\n    callback: onSwitchParticleEffects,\n  },\n  [`${packageId}.updateWeather`]: {\n    replacedBy: `${packageId}.updateParticleEffects`,\n    callback: onUpdateParticleEffects,\n  },\n  [`${packageId}.switchWeather`]: {\n    replacedBy: `${packageId}.switchParticleEffects`,\n    callback: onSwitchParticleEffects,\n  },\n};\n\nfunction onDeprecated(hook) {\n  return function (...args) {\n    const deprecation = deprecations[hook];\n    const msg = format(`The '${hook}' hook is deprecated in favor of the '${deprecation.replacedBy}' hook`);\n    foundry.utils.logCompatibilityWarning(msg, {\n      mod: foundry.CONST.COMPATIBILITY_MODES.WARNING,\n      since: \"FXMaster v3.0.0\",\n      until: \"FXMaster v4.0.0\",\n      stack: false,\n    });\n    deprecation.callback(...args);\n  };\n}\n","/**\n * A mixin which extends {@link PIXI.Filter} with some common behavior.\n * @param {PIXI.Filter} Base The base filter class which this mixin extends\n * @returns The extended filter class\n */\nexport function FXMasterFilterEffectMixin(Base) {\n  return class extends Base {\n    /**\n     * @param {object} options Additional options to configure the filter\n     * @param {string} id The id which identifies this filter instance\n     * @param  {...any} args Additional arguments to pass to the Base constructor\n     */\n    constructor(options, id, ...args) {\n      super(...args);\n      this.id = id;\n      this.enabled = false;\n      this.configure(options);\n      this.applyOptions(this.constructor.neutral);\n    }\n\n    /**\n     * The id which identifies this filter effect instance.\n     * @type {string}\n     */\n    id;\n\n    /**\n     * The current options for this filter effect.\n     * @type {object}\n     */\n    options;\n\n    /**\n     * A human-readable label for the filter effect. This can be a localization string.\n     * @type {string}\n     */\n    static label = \"FXMASTER.FilterEffect\";\n\n    /**\n     * A Font Awesome icon to display for this filter effect in the {@link FilterEffectsManagementConfig}.\n     * @type {string}\n     */\n    static icon = \"fas fa-filter\";\n\n    /**\n     * The set of parameters the filter effect supports.\n     * @type {object}\n     */\n    static get parameters() {\n      return {};\n    }\n\n    /**\n     * The default values for the parameters of this filter effect.\n     * @type {object}\n     */\n    static get default() {\n      return Object.fromEntries(\n        Object.entries(this.parameters).map(([parameterName, parameterConfig]) => [\n          parameterName,\n          parameterConfig.value,\n        ]),\n      );\n    }\n\n    /**\n     * The set of options for this filter effect that represent a neutral state.\n     */\n    static get neutral() {\n      return {};\n    }\n\n    /**\n     * Configure the options for this filter.\n     * @param {object | undefined} options The options to use\n     */\n    configure(options) {\n      if (!options) {\n        return;\n      }\n      this.options = { ...this.constructor.default, ...options };\n    }\n\n    /**\n     * The context on which options should be applied.\n     * @type {object}\n     */\n    get optionContext() {\n      return this;\n    }\n\n    /**\n     * Apply options to this filter effect, setting the corresponding properties on this effect itself.\n     * @param {object} options The options to apply\n     */\n    applyOptions(options = this.options) {\n      const keys = Object.keys(options);\n      for (const key of keys) {\n        this.optionContext[key] = options[key];\n      }\n    }\n\n    /**\n     * Play this filter.\n     * @param {object} _options Additional options to adjust the playing behavior\n     */\n    play(_options = {}) {\n      this.applyOptions();\n      this.enabled = true;\n    }\n\n    /**\n     * Stop this filter.\n     * @param {object} _options Additional options to adjust the stopping behavior\n     * @returns {Promise<boolean>} A promise that resolves to `true` once the stop operation has concluded or `false` if\n     *                             the operation was cancelled.\n     */\n    async stop(_options = {}) {\n      this.enabled = false;\n      this.applyOptions(this.constructor.neutral);\n      return true;\n    }\n\n    /**\n     * Perform a step in any potential animation this filter effect might have. This is called periodically by ticker.\n     */\n    async step() {}\n  };\n}\n","import { packageId } from \"../../../constants.js\";\nimport { FXMasterFilterEffectMixin } from \"./filter\";\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {number} [duration=4000] The duration of the animation\n */\n\n/**\n * A mixin which extends {@link PIXI.Filter} with some common behavior and fading.\n * @param {PIXI.Filter} Base The base filter class which this mixin extends\n * @returns The extended filter class\n */\nexport function FadingFilterMixin(Base) {\n  return class extends FXMasterFilterEffectMixin(Base) {\n    /**\n     * The currently running animation, if any.\n     * @type {Promise<boolean> | undefined}\n     */\n    currentAnimation;\n\n    /** Has this filter already been initialized? */\n    initialized = false;\n\n    /**\n     * Apply options to this filter effect as an animation.\n     * @param {object} [options] The options to animate\n     * @param {AnimationOptions} [animationOptions={}] Additional options to adjust the animation behavior\n     */\n    async animateOptions(options = this.options, { duration = 4_000 } = {}) {\n      const name = `${packageId}.${this.constructor.name}.${this.id}`;\n      if (this.currentAnimation !== undefined) {\n        CanvasAnimation.terminateAnimation(name);\n        await this.currentAnimation;\n      }\n      const data = { name, duration };\n\n      const [toAnimate, toSet] = Object.entries(options)\n        .partition(([key]) => !!this.constructor.parameters[key]?.skipInitialAnimation && !this.initialized)\n        .map(Object.fromEntries);\n\n      this.applyOptions(toSet);\n\n      const anim = Object.entries(toAnimate).map(([key, value]) => ({\n        parent: this.optionContext,\n        attribute: key,\n        to: value,\n      }));\n      this.currentAnimation = CanvasAnimation.animate(anim, data).finally(() => (this.currentAnimation = undefined));\n      return this.currentAnimation;\n    }\n\n    /** @override */\n    play({ skipFading = false, ...otherOptions } = {}) {\n      if (skipFading) {\n        super.play({ skipFading, ...otherOptions });\n      } else {\n        this.enabled = true;\n        this.animateOptions();\n      }\n      this.initialized = true;\n    }\n\n    /** @override */\n    async stop({ skipFading = false, ...otherOptions } = {}) {\n      if (skipFading) {\n        return super.stop({ skipFading, ...otherOptions });\n      } else {\n        const completed = await this.animateOptions(this.constructor.neutral);\n        if (completed) {\n          this.enabled = false;\n        }\n        return completed;\n      }\n    }\n  };\n}\n","import { FadingFilterMixin } from \"./mixins/fading-filter.js\";\n\nexport class BloomFilter extends FadingFilterMixin(PIXI.filters.AdvancedBloomFilter) {\n  /** @override */\n  static label = \"FXMASTER.FilterEffectBloom\";\n\n  /** @override */\n  static icon = \"fas fa-ghost\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      blur: {\n        label: \"FXMASTER.Blur\",\n        type: \"range\",\n        max: 10.0,\n        min: 0.0,\n        step: 1.0,\n        value: 1.0,\n      },\n      bloomScale: {\n        label: \"FXMASTER.Bloom\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.1,\n      },\n      threshold: {\n        label: \"FXMASTER.Threshold\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.5,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      noise: 0.0,\n      bloomScale: 0.0,\n      threshold: 1.0,\n    };\n  }\n}\n","import { FadingFilterMixin } from \"./mixins/fading-filter.js\";\n\nexport class ColorFilter extends FadingFilterMixin(PIXI.filters.AdjustmentFilter) {\n  /** @override */\n  static label = \"FXMASTER.FilterEffectColor\";\n\n  /** @override */\n  static icon = \"fas fa-palette\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      color: {\n        label: \"FXMASTER.Tint\",\n        type: \"color\",\n        value: {\n          value: \"#FFFFFF\",\n          apply: false,\n        },\n      },\n      saturation: {\n        label: \"FXMASTER.Saturation\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n      contrast: {\n        label: \"FXMASTER.Contrast\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n      brightness: {\n        label: \"FXMASTER.Brightness\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n      gamma: {\n        label: \"FXMASTER.Gamma\",\n        type: \"range\",\n        max: 2.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.0,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      red: 1,\n      green: 1,\n      blue: 1,\n      saturation: 1,\n      gamma: 1,\n      brightness: 1,\n      contrast: 1,\n    };\n  }\n\n  /** @override */\n  configure(options) {\n    if (!options) {\n      return;\n    }\n    const { color, ...otherOptions } = options;\n    const { r: red, g: green, b: blue } = foundry.utils.Color.from(color.apply ? color.value : 0xffffff);\n    super.configure({ ...otherOptions, red, green, blue });\n  }\n}\n","import fog from \"./shaders/fog.frag\";\nimport customVertex2D from \"./shaders/custom-vertex-2d.vert\";\nimport { FadingFilterMixin } from \"./mixins/fading-filter.js\";\n\nexport class FogFilter extends FadingFilterMixin(PIXI.Filter) {\n  constructor(options, id) {\n    super(options, id, customVertex2D, fog);\n    this.uniforms.time = 0.0;\n    this.uniforms.dimensions = new Float32Array([0.0, 0.0]);\n    this.uniforms.color = new Float32Array([0.0, 0.0, 0.0, 1.0]);\n  }\n\n  /** @type {number} */\n  lastTick;\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectFog\";\n\n  /** @override */\n  static icon = \"fas fa-cloud\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      dimensions: {\n        label: \"FXMASTER.Scale\",\n        type: \"range\",\n        max: 5,\n        min: 0,\n        step: 0.1,\n        value: 1,\n        skipInitialAnimation: true,\n      },\n      speed: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        max: 5,\n        min: 0,\n        step: 0.1,\n        value: 1,\n        skipInitialAnimation: true,\n      },\n      density: {\n        label: \"FXMASTER.Density\",\n        type: \"range\",\n        max: 1,\n        min: 0,\n        step: 0.05,\n        value: 0.65,\n      },\n      color: {\n        label: \"FXMASTER.Tint\",\n        type: \"color\",\n        value: {\n          value: \"#000000\",\n          apply: false,\n        },\n        skipInitialAnimation: true,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      density: 0,\n    };\n  }\n\n  /** @type {number} */\n  get r() {\n    return this.uniforms.color[0];\n  }\n  set r(value) {\n    this.uniforms.color[0] = value;\n  }\n\n  /** @type {number} */\n  get g() {\n    return this.uniforms.color[1];\n  }\n  set g(value) {\n    this.uniforms.color[1] = value;\n  }\n\n  /** @type {number} */\n  get b() {\n    return this.uniforms.color[2];\n  }\n  set b(value) {\n    this.uniforms.color[2] = value;\n  }\n\n  /** @type {number} */\n  get density() {\n    return this.uniforms.density;\n  }\n  set density(value) {\n    this.uniforms.density = value;\n  }\n\n  /** @type {number} */\n  get dimensions() {\n    return this.uniforms.dimensions[0];\n  }\n  set dimensions(value) {\n    this.uniforms.dimensions[0] = this.uniforms.dimensions[1] = (value * 100) / (canvas?.dimensions?.size ?? 100);\n  }\n\n  /** @override */\n  configure(options) {\n    if (!options) {\n      return;\n    }\n    const { color, ...otherOptions } = options;\n    const { r, g, b } = foundry.utils.Color.from(color.apply ? color.value : 0x000000);\n    super.configure({ ...otherOptions, r, g, b });\n  }\n\n  /** @override */\n  play(options) {\n    this.lastTick = canvas.app.ticker.lastTime;\n    super.play(options);\n  }\n\n  /** @override */\n  async step() {\n    const delta = canvas.app.ticker.lastTime - this.lastTick;\n    this.lastTick = canvas.app.ticker.lastTime;\n    this.uniforms.time += delta * this.speed * 0.1;\n    await super.step();\n  }\n\n  apply(filterManager, input, output, clear, currentState) {\n    this.uniforms.filterMatrix ??= new PIXI.Matrix();\n    this.uniforms.filterMatrix.copyFrom(currentState.target.worldTransform).invert();\n    return super.apply(filterManager, input, output, clear, currentState);\n  }\n}\n","export const easeFunctions = {\n  Linear: easeLinear,\n  InSine: easeInSine,\n  OutSine: easeOutSine,\n  InOutSine: easeInOutSine,\n  InBack: easeInBack,\n  OutBack: easeOutBack,\n  InOutBack: easeInOutBack,\n  InCubic: easeInCubic,\n  OutCubic: easeOutCubic,\n  InOutCubic: easeInOutCubic,\n  InCirc: easeInCirc,\n  OutCirc: easeOutCirc,\n  InOutCirc: easeInOutCirc,\n};\n\nexport function easeLinear(x) {\n  return x;\n}\n\nexport function easeInSine(x) {\n  return 1 - Math.cos((x * Math.PI) / 2);\n}\n\nexport function easeOutSine(x) {\n  return Math.sin((x * Math.PI) / 2);\n}\n\nexport function easeInOutSine(x) {\n  return -(Math.cos(Math.PI * x) - 1) / 2;\n}\n\nexport function easeInBack(x) {\n  const c1 = 1.70158;\n  const c3 = c1 + 1;\n  return c3 * x * x * x - c1 * x * x;\n}\n\nexport function easeOutBack(x) {\n  const c1 = 1.70158;\n  const c3 = c1 + 1;\n  return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n}\n\nexport function easeInOutBack(x) {\n  const c1 = 1.70158;\n  const c2 = c1 * 1.525;\n  return x < 0.5\n    ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n    : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n}\n\nexport function easeInCubic(x) {\n  return x * x * x;\n}\n\nexport function easeOutCubic(x) {\n  return 1 - Math.pow(1 - x, 3);\n}\n\nexport function easeInOutCubic(x) {\n  return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}\n\nexport function easeInCirc(x) {\n  return 1 - Math.sqrt(1 - Math.pow(x, 2));\n}\n\nexport function easeOutCirc(x) {\n  return Math.sqrt(1 - Math.pow(x - 1, 2));\n}\n\nexport function easeInOutCirc(x) {\n  return x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n}\n","import { packageId } from \"../../constants.js\";\nimport { easeFunctions } from \"../../ease.js\";\nimport { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class LightningFilter extends FXMasterFilterEffectMixin(PIXI.filters.AdjustmentFilter) {\n  constructor(options, id) {\n    super(options, id);\n    this.nextLigthningTime = canvas.app.ticker.lastTime / 10;\n  }\n\n  /**\n   * The time when the next lightning flash should appear.\n   * @type {number}\n   */\n  nextLigthningTime;\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectLightning\";\n\n  /** @override */\n  static icon = \"fas fa-bolt-lightning\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      frequency: {\n        label: \"FXMASTER.Period\",\n        type: \"range\",\n        max: 2000,\n        min: 100,\n        step: 5,\n        value: 500,\n      },\n      spark_duration: {\n        label: \"FXMASTER.Duration\",\n        type: \"range\",\n        max: 2000,\n        min: 100,\n        step: 5,\n        value: 300,\n      },\n      brightness: {\n        label: \"FXMASTER.Brightness\",\n        type: \"range\",\n        max: 4.0,\n        min: 0.0,\n        step: 0.1,\n        value: 1.3,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      frequency: 0.0,\n      spark_duration: 0.0,\n      brightness: 1.0,\n    };\n  }\n\n  /** @override */\n  play(_options = {}) {\n    // explicitly not applying the options, since it would change the brightness immediately\n    this.enabled = true;\n  }\n\n  /** @override */\n  async step() {\n    if (canvas.app.ticker.lastTime / 10 > this.nextLigthningTime) {\n      this.nextLigthningTime = canvas.app.ticker.lastTime / 10 + 40 + this.options.frequency * Math.random();\n\n      const animate = (value) => {\n        const attributes = [\n          {\n            parent: this,\n            attribute: \"brightness\",\n            to: value,\n          },\n        ];\n        return CanvasAnimation.animate(attributes, {\n          name: `${packageId}.${this.constructor.name}.${this.id}.${foundry.utils.randomID()}`,\n          context: this,\n          duration: 100 + this.options.spark_duration * Math.random(),\n          easing: easeFunctions.InOutBack,\n        });\n      };\n\n      await animate(this.options.brightness);\n      await animate(1);\n      await super.step();\n    }\n  }\n}\n","import { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class OldFilmFilter extends FXMasterFilterEffectMixin(PIXI.filters.OldFilmFilter) {\n  constructor(options, id) {\n    super(options, id);\n    this.vignetting = 0;\n    this.vignettingAlpha = 0;\n  }\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectOldFilm\";\n\n  /** @override */\n  static icon = \"fas fa-film\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      sepia: {\n        label: \"FXMASTER.Sepia\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.3,\n      },\n      noise: {\n        label: \"FXMASTER.Noise\",\n        type: \"range\",\n        max: 1.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.1,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      sepia: 0.0,\n      noise: 0.0,\n    };\n  }\n\n  /** @override */\n  play(options = {}) {\n    this.seed = Math.random();\n    super.play(options);\n  }\n\n  /** @override */\n  async step() {\n    this.seed = Math.random();\n    await super.step();\n  }\n}\n","import { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class PredatorFilter extends FXMasterFilterEffectMixin(PIXI.filters.CRTFilter) {\n  constructor(options, id) {\n    super(options, id);\n    this.vignetting = 0;\n    this.curvature = 0;\n  }\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectPredator\";\n\n  /** @override */\n  static icon = \"fas fa-wave-square\";\n\n  /** @override */\n  static get parameters() {\n    return {\n      noise: {\n        label: \"FXMASTER.Noise\",\n        type: \"range\",\n        max: 1.0,\n        min: 0,\n        step: 0.1,\n        value: 0.1,\n      },\n      period: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        max: 0.1,\n        min: 0,\n        step: 0.001,\n        value: 0.001,\n      },\n      lineWidth: {\n        label: \"FXMASTER.LineWidth\",\n        type: \"range\",\n        max: 10,\n        min: 0,\n        step: 0.1,\n        value: 1,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      noise: 0,\n      period: 1000,\n    };\n  }\n\n  /** @override */\n  play(options = {}) {\n    this.seed = Math.random();\n    super.play(options);\n  }\n\n  /** @override */\n  async step() {\n    this.seed = Math.random();\n    const frequency = 1.0 / this.options.period;\n    this.time = canvas.app.ticker.lastTime / frequency;\n    await super.step();\n  }\n}\n","import { FXMasterFilterEffectMixin } from \"./mixins/filter.js\";\n\nexport class UnderwaterFilter extends FXMasterFilterEffectMixin(PIXI.DisplacementFilter) {\n  constructor(options, id) {\n    const displacemenntMap = PIXI.Sprite.from(\n      \"modules/fxmaster/assets/filter-effects/effects/underwater/displacement-map.png\",\n    );\n    super(options, id, displacemenntMap);\n\n    this.displacementMap = displacemenntMap;\n    this.displacementMap.texture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n    this.displacementMap.anchor.set(0.5);\n    this.displacementMap.x = canvas.scene.width / 2;\n    this.displacementMap.y = canvas.scene.height / 2;\n  }\n\n  /** @override */\n  static label = \"FXMASTER.FilterEffectUnderwater\";\n\n  /** @override */\n  static icon = \"fas fa-water\";\n\n  static get parameters() {\n    return {\n      speed: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        max: 5.0,\n        min: 0.0,\n        step: 0.1,\n        value: 0.3,\n      },\n      scale: {\n        label: \"FXMASTER.Scale\",\n        type: \"number\",\n        value: 4.0,\n      },\n    };\n  }\n\n  /** @override */\n  static get neutral() {\n    return {\n      speed: 0,\n      scale: 1.0,\n    };\n  }\n\n  /** @override */\n  applyOptions() {\n    // explicitly do nothing because setting scale / speed on this breaks the DisplacementFilter\n  }\n\n  /** @override */\n  play(options = {}) {\n    this.displacementMap.scale.x = this.options.scale;\n    this.displacementMap.scale.y = this.options.scale;\n    canvas.primary.addChild(this.displacementMap);\n    super.play(options);\n  }\n\n  /** @override */\n  async stop(options = {}) {\n    await super.stop(options);\n    canvas.primary.removeChild(this.displacementMap);\n  }\n\n  /** @override */\n  async step() {\n    this.maskSprite.x += this.options.speed;\n    await super.step();\n  }\n}\n","import { BloomFilter } from \"./filters/bloom.js\";\nimport { ColorFilter } from \"./filters/color.js\";\nimport { FogFilter } from \"./filters/fog.js\";\nimport { LightningFilter } from \"./filters/lightning.js\";\nimport { OldFilmFilter } from \"./filters/old-film.js\";\nimport { PredatorFilter } from \"./filters/predator.js\";\nimport { UnderwaterFilter } from \"./filters/underwater.js\";\n\n/** @typedef {Record<string, PIXI.Filter} FilterEffects */\n\n/** @type {FilterEffects} */\nexport const filterEffects = {\n  bloom: BloomFilter,\n  color: ColorFilter,\n  fog: FogFilter,\n  lightning: LightningFilter,\n  oldfilm: OldFilmFilter,\n  predator: PredatorFilter,\n  underwater: UnderwaterFilter,\n};\n","import { roundToDecimals } from \"../../utils.js\";\n\n/**\n * An abstract base class for defining particle-based effects\n * @param {PIXI.Container} parent     The parent container within which the effect is rendered\n * @param {object} [options]          Options passed to the getParticleEmitters method which can be used to customize\n *                                    values of the emitter configuration.\n * @abstract\n */\nexport class FXMasterParticleEffect extends ParticleEffect {\n  /**\n   * A human-readable label for the particle effect. This can be a localization string.\n   * @type {string}\n   * @override\n   */\n  static label = \"FXMASTER.ParticleEffect\";\n\n  /**\n   * The weather effect group this effect belongs to.\n   * @type {string}\n   */\n  static get group() {\n    return \"other\";\n  }\n\n  /** @type {string} */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/snow.png\";\n  }\n\n  static get parameters() {\n    return {\n      scale: {\n        label: \"FXMASTER.Scale\",\n        type: \"range\",\n        min: 0.1,\n        value: 1,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      direction: {\n        label: \"FXMASTER.Direction\",\n        type: \"range\",\n        min: 0,\n        value: this.defaultDirection,\n        max: 360,\n        step: 5,\n        decimals: 0,\n      },\n      speed: {\n        label: \"FXMASTER.Speed\",\n        type: \"range\",\n        min: 0.1,\n        value: 1,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      lifetime: {\n        label: \"FXMASTER.Lifetime\",\n        type: \"range\",\n        min: 0.1,\n        value: 1,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      density: {\n        label: \"FXMASTER.Density\",\n        type: \"range\",\n        min: 0.1,\n        value: 0.5,\n        max: 5,\n        step: 0.1,\n        decimals: 1,\n      },\n      alpha: {\n        label: \"FXMASTER.Opacity\",\n        type: \"range\",\n        min: 0,\n        value: 1,\n        max: 1,\n        step: 0.1,\n        decimals: 1,\n      },\n      tint: {\n        label: \"FXMASTER.Tint\",\n        type: \"color\",\n        value: {\n          value: \"#FFFFFF\",\n          apply: false,\n        },\n      },\n    };\n  }\n\n  /**\n   * Merge the given options with the default parameters.\n   */\n  static mergeWithDefaults(options) {\n    return foundry.utils.mergeObject(this.parameters, options, { insertKeys: false, inplace: false });\n  }\n\n  /**\n   * Return the default config for this effect.\n   * @abstract\n   * @returns {PIXI.particles.EmitterConfigV3}\n   */\n  static get defaultConfig() {\n    throw new Error(\"Subclasses of FXMasterParticleEffect must implement defaultConfig\");\n  }\n\n  static get defaultDirection() {\n    const rotationBehavior = this.defaultConfig.behaviors.find((behavior) => behavior.type === \"rotation\");\n\n    if (rotationBehavior !== undefined) {\n      return (rotationBehavior.config.minStart + rotationBehavior.config.maxStart) / 2;\n    }\n\n    const rotationStaticBehavior = this.defaultConfig.behaviors.find((behavior) => behavior.type === \"rotationStatic\");\n\n    if (rotationStaticBehavior !== undefined) {\n      return (rotationStaticBehavior.config.min + rotationStaticBehavior.config.max) / 2;\n    }\n\n    return undefined;\n  }\n\n  static get default() {\n    return Object.fromEntries(\n      Object.entries(this.parameters).map(([parameterName, parameterConfig]) => [parameterName, parameterConfig.value]),\n    );\n  }\n\n  applyOptionsToConfig(options, config) {\n    this._applyScaleToConfig(options, config);\n    this._applySpeedToConfig(options, config);\n    this._applyDirectionToConfig(options, config);\n    this._applyLifetimeToConfig(options, config);\n    this._applyTintToConfig(options, config);\n    this._applyAlphaToConfig(options, config);\n  }\n\n  /** @protected */\n  _applyFactorToValueList(valueList, factor) {\n    valueList.list = valueList.list.map((valueStep) => ({\n      ...valueStep,\n      value: valueStep.value * factor,\n    }));\n  }\n\n  /** @protected */\n  _applyFactorToRandNumber(randNumber, factor) {\n    randNumber.min = randNumber.min * factor;\n    randNumber.max = randNumber.max * factor;\n  }\n\n  /** @protected */\n  _applyScaleToConfig(options, config) {\n    const factor = (options.scale?.value ?? 1) * (canvas.dimensions.size / 100);\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"scale\")\n      .forEach(({ config }) => this._applyFactorToValueList(config.scale, factor));\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"scaleStatic\")\n      .forEach(({ config }) => this._applyFactorToRandNumber(config, factor));\n  }\n\n  /** @protected */\n  _applySpeedToConfig(options, config) {\n    const factor = (options.speed?.value ?? 1) * (canvas.dimensions.size / 100);\n\n    config.behaviors\n      .filter((behavior) => [\"moveSpeed\", \"movePath\"].includes(behavior.type))\n      .forEach(({ config }) => this._applyFactorToValueList(config.speed, factor));\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"moveSpeedStatic\")\n      .forEach(({ config }) => this._applyFactorToRandNumber(config, factor));\n\n    this._applyFactorToRandNumber(config.lifetime, 1 / factor);\n    config.frequency /= factor;\n  }\n\n  /** @protected */\n  _applyDirectionToConfig(options, config) {\n    const direction = options.direction?.value;\n    if (direction !== undefined) {\n      config.behaviors\n        .filter((behavior) => behavior.type === \"rotation\")\n        .forEach(({ config }) => {\n          const range = config.maxStart - config.minStart;\n          config.minStart = direction - range / 2;\n          config.maxStart = direction + range / 2;\n        });\n\n      config.behaviors\n        .filter((behavior) => behavior.type === \"rotationStatic\")\n        .forEach(({ config }) => {\n          const range = config.max - config.min;\n          config.min = direction - range / 2;\n          config.max = direction + range / 2;\n        });\n    }\n  }\n\n  /** @protected */\n  _applyLifetimeToConfig(options, config) {\n    const factor = options.lifetime?.value ?? 1;\n    this._applyFactorToRandNumber(config.lifetime, factor);\n    config.frequency *= factor;\n  }\n\n  /** @protected */\n  _applyTintToConfig(options, config) {\n    if (options.tint?.value.apply) {\n      const value = options.tint.value.value;\n      config.behaviors = config.behaviors\n        .filter(({ type }) => type !== \"color\" && type !== \"colorStatic\")\n        .concat({\n          type: \"colorStatic\",\n          config: {\n            color: value,\n          },\n        });\n    }\n  }\n\n  /** @protected */\n  _applyAlphaToConfig(options, config) {\n    const factor = options.alpha?.value ?? 1;\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"alpha\")\n      .forEach(({ config }) => this._applyFactorToValueList(config.alpha, factor));\n\n    config.behaviors\n      .filter((behavior) => behavior.type === \"alphaStatic\")\n      .forEach(({ config }) => {\n        config.alpha *= factor;\n      });\n  }\n\n  /** @override */\n  play({ prewarm = false } = {}) {\n    if (prewarm) {\n      this.emitters.forEach((emitter) => {\n        emitter.autoUpdate = false;\n        emitter.emit = true;\n        emitter.update(emitter.maxLifetime);\n        emitter.autoUpdate = true;\n      });\n    }\n    super.play();\n  }\n\n  /**\n   * Fade this effect out, playing it once and then stopping it.\n   * @param {{timeout?: number}} [options]         Additional options to configure the fade out\n   * @param {number}             [options.timeout] If given, the effect will be stopped after the given number in ms,\n   *                                               regardless of if it has finished playing or not.\n   * @returns {Promise<void>}                      A promise that resolves as soon as this effect has finished fading out\n   */\n  async fadeOut({ timeout } = {}) {\n    const emitterPromises = this.emitters.map(\n      (emitter) =>\n        new Promise((resolve) => {\n          emitter.emitterLifetime = 0.1;\n          emitter.playOnceAndDestroy(() => {\n            resolve();\n          });\n        }),\n    );\n    const promises = [Promise.all(emitterPromises)];\n    if (timeout !== undefined) {\n      promises.push(new Promise((resolve) => setTimeout(resolve, timeout)).then(this.destroy.bind(this)));\n    }\n\n    await Promise.race(promises);\n    this.stop();\n  }\n\n  static convertOptionsToV2(options, scene) {\n    return Object.fromEntries(\n      Object.entries(options).map(([optionKey, optionValue]) => {\n        switch (optionKey) {\n          case \"scale\": {\n            return [optionKey, this._convertScaleToV2(optionValue, scene)];\n          }\n          case \"speed\": {\n            return [optionKey, this._convertSpeedToV2(optionValue, scene)];\n          }\n          case \"density\": {\n            return [optionKey, this._convertDensityToV2(optionValue, scene)];\n          }\n          default: {\n            return [optionKey, optionValue];\n          }\n        }\n      }),\n    );\n  }\n\n  /** @protected */\n  static _convertScaleToV2(scale, scene) {\n    const decimals = this.parameters.scale?.decimals ?? 1;\n    return roundToDecimals(scale * (100 / scene.dimensions.size), decimals);\n  }\n\n  /** @protected */\n  static _convertSpeedToV2(speed, scene) {\n    const speeds = this.defaultConfig.behaviors\n      .filter(({ type }) => type === \"moveSpeed\")\n      .flatMap(({ config }) => config.speed.list.map((valueStep) => valueStep.value));\n    const maximumSpeed = Math.max(...speeds);\n\n    const decimals = this.parameters.speed?.decimals ?? 1;\n    return roundToDecimals((speed / maximumSpeed) * (100 / scene.dimensions.size), decimals);\n  }\n\n  /** @protected */\n  static _convertDensityToV2(density, scene) {\n    const d = scene.dimensions;\n    const gridUnits = (d.width / d.size) * (d.height / d.size);\n\n    const decimals = this.parameters.density?.decimals ?? 1;\n    return roundToDecimals(density / gridUnits, decimals);\n  }\n}\n","/**\n * A mixin which extends {@link FXMasterParticleEffect} with default rectangle spawing behavior.\n * @param {typeof import(\"../effect.js\").FXMasterParticleEffect} Base The base effect class which this mixin extends\n * @returns {import(\"../effect.js\").FXMasterParticleEffect} The extended effect class\n */\nexport function DefautlRectangleSpawnMixin(Base) {\n  return class extends Base {\n    /** @override */\n    getParticleEmitters(options = {}) {\n      options = this.constructor.mergeWithDefaults(options);\n      const d = canvas.dimensions;\n      const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n      const config = foundry.utils.deepClone(this.constructor.defaultConfig);\n      config.maxParticles = maxParticles;\n      config.frequency = config.lifetime.min / maxParticles;\n      config.behaviors.push({\n        type: \"spawnShape\",\n        config: {\n          type: \"rect\",\n          data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n        },\n      });\n      this.applyOptionsToConfig(options, config);\n\n      return [this.createEmitter(config)];\n    }\n  };\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders crawling spiders.\n */\nexport class SpiderParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectSpiders\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/spiders.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.3, max: 0.7, step: 0.05, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for crawling spiders\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SPIDERS_CONFIG = {\n    lifetime: { min: 5, max: 10 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 15 },\n              { time: 1, value: 25 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.05, time: 0 },\n              { value: 0.08, time: 0.05 },\n              { value: 0.08, time: 0.95 },\n              { value: 0.05, time: 1 },\n            ],\n          },\n          minMult: 0.2,\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: 30,\n            loop: true,\n            textures: Array.fromRange(25).map((n) => ({\n              count: 1,\n              texture: `modules/fxmaster/assets/particle-effects/effects/spiders/spider${String(n + 1).padStart(\n                2,\n                \"0\",\n              )}.png`,\n            })),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.SPIDERS_CONFIG;\n  }\n}\n","/**\n * Adjust the color behavior of an emitter to use a stepped gradient instead of interpolation.\n * @param {PIXI.particles.Emitter} emitter        The emitter to adjust\n * @param {PIXI.particles.EmitterConfigV3} config The emitter config containing the original value list\n * @param {number} [steps=10]                     The number of steps to use\n * @returns {PIXI.particles.Emitter}\n */\nexport function withSteppedGradientColor(emitter, config, steps = 10) {\n  const colorBehavior = emitter.getBehavior(\"color\");\n\n  if (colorBehavior) {\n    emitter\n      .getBehavior(\"color\")\n      .list.reset(\n        PIXI.particles.ParticleUtils.createSteppedGradient(\n          config.behaviors.find(({ type }) => type === \"color\").config.color.list,\n          steps,\n        ),\n      );\n  }\n\n  return emitter;\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { withSteppedGradientColor } from \"./helpers/with-stepped-gradient-color.js\";\n/**\n * A full-screen particle effect which renders drifting stars.\n */\nexport class StarsParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectStars\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/stars.png\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.3, max: 1, step: 0.05, decimals: 2 },\n        tint: { value: { value: \"#bee8ee\" } },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for drifting stars\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static STARS_CONFIG = {\n    lifetime: { min: 8, max: 15 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.9, time: 0.3 },\n              { value: 0.9, time: 0.95 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 3, max: 5 },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.05, time: 0 },\n              { value: 0.03, time: 1 },\n            ],\n          },\n          minMult: 0.85,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 20, maxSpeed: 50, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(8).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/stars/star${n + 1}.png`,\n          ),\n        },\n      },\n      {\n        type: \"color\",\n        config: {\n          color: {\n            list: [\n              { value: \"bee8ee\", time: 0 },\n              { value: \"d0e8ec\", time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"blendMode\",\n        config: {\n          blendMode: \"screen\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.STARS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.STARS_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    const emitter = withSteppedGradientColor(this.createEmitter(config), config);\n    return [emitter];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders gently falling autumn leaves.\n */\nexport class AutumnLeavesParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectLeaves\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/leaves.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.25, max: 1, step: 0.05, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for falling leaves\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static LEAF_CONFIG = {\n    lifetime: { min: 10, max: 10 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.9 },\n              { time: 1, value: 0.5 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 20 },\n              { time: 1, value: 60 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { time: 0, value: 0.2 },\n              { time: 1, value: 0.4 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 100, maxSpeed: 200, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(6).map((n) => `ui/particles/leaf${n + 1}.png`),\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.LEAF_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders flying bats.\n */\nexport class BatsParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectBats\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/bats.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.005, value: 0.05, max: 0.1, step: 0.005, decimals: 3 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying bats\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static BATS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 200 },\n              { time: 1, value: 260 },\n            ],\n          },\n          minMult: 0.8,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.02, time: 0 },\n              { value: 0.1, time: 0.05 },\n              { value: 0.1, time: 0.95 },\n              { value: 0.02, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: 30,\n            loop: true,\n            textures: [\n              { texture: 1, count: 1 },\n              { texture: 2, count: 1 },\n              { texture: 3, count: 1 },\n              { texture: 4, count: 1 },\n              { texture: 5, count: 2 },\n              { texture: 4, count: 1 },\n              { texture: 3, count: 1 },\n              { texture: 2, count: 1 },\n            ].map(({ texture, count }) => ({\n              texture: `modules/fxmaster/assets/particle-effects/effects/bats/bat${texture}.png`,\n              count,\n            })),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.BATS_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders floating bubbles.\n */\nexport class BubblesParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectBubbles\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/bubbles.png\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.01, value: 0.15, max: 0.5, step: 0.01, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for floating bubbles\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static BUBBLES_CONFIG = {\n    lifetime: { min: 8, max: 10 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.85, time: 0.05 },\n              { value: 0.85, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 20 },\n              { time: 1, value: 60 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.25, time: 0 },\n              { value: 0.5, time: 1 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 100, maxSpeed: 200, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"modules/fxmaster/assets/particle-effects/effects/bubbles/bubble.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.BUBBLES_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders drifting bubbles.\n */\nexport class CloudsParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectClouds\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/clouds.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(super.parameters, {\n      density: { min: 0.001, value: 0.03, max: 0.2, step: 0.001, decimals: 3 },\n    });\n  }\n\n  /**\n   * Configuration for the particle emitter for drifting clouds\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static CLOUDS_CONFIG = {\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.5, time: 0.05 },\n              { value: 0.5, time: 0.95 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      { type: \"moveSpeedStatic\", config: { min: 30, max: 100 } },\n      { type: \"scaleStatic\", config: { min: 0.08, max: 0.8 } },\n      { type: \"rotationStatic\", config: { min: 80, max: 100 } },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(4).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/clouds/cloud${n + 1}.png`,\n          ),\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.CLOUDS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n\n    const offsetFactor = 2 / 3;\n    const config = foundry.utils.deepClone(this.constructor.CLOUDS_CONFIG);\n    const speed = config.behaviors.find(({ type }) => type === \"moveSpeedStatic\")?.config;\n    if (speed === undefined) {\n      throw new Error(\"Expected CLOUDS_CONFIG to have a moveSpeedStatic behavior but it didn't.\");\n    }\n\n    const diagonal = Math.sqrt(d.sceneRect.width * d.sceneRect.width + d.sceneRect.height * d.sceneRect.height);\n    const averageSpeed = (speed.min + speed.max) / 2;\n    const averageDiagonalTime = diagonal / averageSpeed;\n    const minLifetime = averageDiagonalTime / offsetFactor / 2;\n    const maxLifetime = averageDiagonalTime / offsetFactor;\n\n    const angle = Math.toRadians(options.direction.value);\n    const directionVector = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n\n    config.maxParticles = maxParticles;\n    config.frequency = (minLifetime + maxLifetime) / 2 / maxParticles;\n    config.lifetime = { min: minLifetime, max: maxLifetime };\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: d.sceneRect.x - directionVector.x * d.sceneRect.width * offsetFactor,\n          y: d.sceneRect.y - directionVector.y * d.sceneRect.height * offsetFactor,\n          w: d.sceneRect.width,\n          h: d.sceneRect.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders flying crows.\n */\nexport class CrowsParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectCrows\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/crows.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.001, value: 0.006, max: 0.01, step: 0.001, decimals: 3 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying crows\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static CROWS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 90 },\n              { time: 1, value: 100 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.03, time: 0 },\n              { value: 0.12, time: 0.1 },\n              { value: 0.12, time: 0.9 },\n              { value: 0.03, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: 15,\n            loop: true,\n            textures: [\n              { texture: 1, count: 20 },\n              { texture: 2, count: 3 },\n              { texture: 3, count: 2 },\n              { texture: 4, count: 2 },\n              { texture: 3, count: 2 },\n              { texture: 2, count: 3 },\n            ].map(({ texture, count }) => ({\n              texture: `modules/fxmaster/assets/particle-effects/effects/crows/crow${texture}.png`,\n              count,\n            })),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.CROWS_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders flying eagles.\n */\nexport class EaglesParticleEffect extends FXMasterParticleEffect {\n  /**\n   * The cached textures for this weather effect.\n   * @type {PIXI.Texture[] | undefined}\n   * @private\n   */\n  static _textureCache;\n\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectEagles\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/crows.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.0005, value: 0.002, max: 0.01, step: 0.0005, decimals: 4 },\n        \"-=direction\": null,\n        animations: {\n          label: \"FXMASTER.Animations\",\n          type: \"multi-select\",\n          options: {\n            flap: \"FXMASTER.ParicleEffectBirdsAnimationsFlap\",\n            glide: \"FXMASTER.ParicleEffectBirdsAnimationsGlide\",\n          },\n          value: [\"glide\"],\n        },\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying eagles\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static EAGLES_CONFIG = {\n    lifetime: { min: 7, max: 14 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 360 },\n              { time: 1, value: 400 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.15, time: 0 },\n              { value: 0.3, time: 0.1 },\n              { value: 0.3, time: 0.9 },\n              { value: 0.15, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.EAGLES_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.EAGLES_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    config.behaviors.push({\n      type: \"animatedRandom\",\n      config: {\n        anims: this._getAnimations(options),\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n\n  /**\n   * Get the animation to use for this effect.\n   * @returns The animations to use for the effect\n   * @protected\n   */\n  _getAnimations(options) {\n    if (!this._textures) {\n      this._initializeTextures();\n    }\n\n    const flap = Array.fromRange(19).map((textureNumber) => ({\n      textureNumber,\n      count: 1,\n    }));\n\n    const glide = [\n      { textureNumber: 0, count: 30 },\n      ...Array(4).fill(flap).deepFlatten(),\n      { textureNumber: 0, count: 68 },\n    ];\n\n    const animations = {\n      glide,\n      flap,\n    };\n\n    const getAnim = (animation) => ({\n      framerate: 20,\n      loop: true,\n      textures: animation.map(({ textureNumber, count }) => ({\n        texture: this._textures[textureNumber],\n        count,\n      })),\n    });\n\n    const anims = (options.animations?.value ?? [])\n      .filter((animation) => Object.keys(animations).includes(animation))\n      .map((animation) => getAnim(animations[animation]));\n\n    if (anims.length === 0) {\n      anims.push(getAnim(animations.glide));\n    }\n\n    return anims;\n  }\n\n  /**\n   * Get the textures for this particle effect.\n   * @private\n   * @returns {PIXI.Texture[]}\n   */\n  get _textures() {\n    if (!this.constructor._textureCache) {\n      const spriteSheetTexture = PIXI.Texture.from(\"modules/fxmaster/assets/particle-effects/effects/eagles/eagle.png\");\n      const spriteSheetData = {\n        meta: {\n          scale: \"1\",\n        },\n        frames: {\n          \"eagle0000.png\": {\n            frame: { x: 0, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0001.png\": {\n            frame: { x: 512, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0002.png\": {\n            frame: { x: 0, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0003.png\": {\n            frame: { x: 512, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0004.png\": {\n            frame: { x: 1024, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0005.png\": {\n            frame: { x: 1024, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0006.png\": {\n            frame: { x: 0, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0007.png\": {\n            frame: { x: 512, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0008.png\": {\n            frame: { x: 1024, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0009.png\": {\n            frame: { x: 1536, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0010.png\": {\n            frame: { x: 1536, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0011.png\": {\n            frame: { x: 1536, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0012.png\": {\n            frame: { x: 0, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0013.png\": {\n            frame: { x: 512, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0014.png\": {\n            frame: { x: 1024, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0015.png\": {\n            frame: { x: 1536, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0016.png\": {\n            frame: { x: 2048, y: 0, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0017.png\": {\n            frame: { x: 2048, y: 512, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0018.png\": {\n            frame: { x: 2048, y: 1024, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n          \"eagle0019.png\": {\n            frame: { x: 2048, y: 1536, w: 512, h: 512 },\n            rotated: false,\n            trimmed: false,\n            spriteSourceSize: { x: 0, y: 0, w: 512, h: 512 },\n            sourceSize: { w: 512, h: 512 },\n          },\n        },\n      };\n      const spriteSheet = new PIXI.Spritesheet(spriteSheetTexture, spriteSheetData);\n      this.constructor._textureCache = parseSpriteSheetSync.call(spriteSheet);\n    }\n    return this.constructor._textureCache;\n  }\n}\n\nfunction parseSpriteSheetSync() {\n  let textures;\n  this._callback = (parsedTextures) => (textures = Object.values(parsedTextures));\n  this._batchIndex = 0;\n  this._processFrames(0);\n  this._processAnimations();\n  this._parseComplete();\n  return textures;\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders swirling fog.\n */\nexport class FogParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectFog\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/fog.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.01, value: 0.08, max: 0.15, step: 0.01, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for swirling fog\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static FOG_CONFIG = {\n    lifetime: { min: 10, max: 25 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.1, time: 0.1 },\n              { value: 0.3, time: 0.5 },\n              { value: 0.1, time: 0.9 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 15 },\n              { time: 1, value: 10 },\n            ],\n          },\n          minMult: 0.2,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 1.5, time: 0 },\n              { value: 1, time: 1 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 0.15, maxSpeed: 0.35, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(4).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/clouds/cloud${n + 1}.png`,\n          ),\n        },\n      },\n      {\n        type: \"colorStatic\",\n        config: {\n          color: \"dddddd\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.FOG_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { DefautlRectangleSpawnMixin } from \"./mixins/default-retangle-spawn.js\";\n\n/**\n * A full-screen particle effect which renders scurrying rats.\n */\nexport class RatsParticleEffect extends DefautlRectangleSpawnMixin(FXMasterParticleEffect) {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRats\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rats.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.001, value: 0.006, max: 0.1, step: 0.001, decimals: 3 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for scurrying rats\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RATS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 120, max: 200 },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.03, time: 0 },\n              { value: 0.125, time: 0.1 },\n              { value: 0.125, time: 0.9 },\n              { value: 0.03, time: 1 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n      {\n        type: \"animatedSingle\",\n        config: {\n          anim: {\n            framerate: \"10\",\n            loop: true,\n            textures: Array.fromRange(5).map(\n              (n) => `modules/fxmaster/assets/particle-effects/effects/rats/rat${n + 1}.png`,\n            ),\n          },\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RATS_CONFIG;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders heavy snow fall.\n */\nexport class SnowstormParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectSnowstorm\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/snow-storm.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(super.parameters, {\n      density: { min: 0.05, value: 0.6, max: 1, step: 0.05, decimals: 2 },\n    });\n  }\n\n  /**\n   * Configuration for the particle emitter for heavy snow fall\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SNOWSTORM_CONFIG = {\n    lifetime: { min: 2.5, max: 6 },\n    behaviors: [\n      {\n        type: \"alphaStatic\",\n        config: { alpha: 1 },\n      },\n      {\n        type: \"movePath\",\n        config: {\n          path: \"sin(x / 150) * 25\",\n          speed: {\n            list: [\n              { value: 400, time: 0 },\n              { value: 350, time: 1 },\n            ],\n          },\n          minMult: 0.2,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.2, time: 0 },\n              { value: 0.08, time: 1 },\n            ],\n          },\n          minMult: 0.8,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: -60, maxSpeed: 60, minStart: 86, maxStart: 94 },\n      },\n      {\n        type: \"textureRandom\",\n        config: {\n          textures: Array.fromRange(2).map(\n            (n) => `modules/fxmaster/assets/particle-effects/effects/snowstorm/snow${n + 1}.png`,\n          ),\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.SNOWSTORM_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.defaultConfig);\n    config.maxParticles = maxParticles;\n    config.frequency = (config.lifetime.min + config.lifetime.max) / 2 / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n}\n","import { SpiderParticleEffect } from \"./effects/spiders.js\";\nimport { StarsParticleEffect } from \"./effects/stars.js\";\nimport { AutumnLeavesParticleEffect } from \"./effects/leaves.js\";\nimport { BatsParticleEffect } from \"./effects/bats.js\";\nimport { BirdsParticleEffect } from \"./effects/birds.js\";\nimport { BubblesParticleEffect } from \"./effects/bubbles.js\";\nimport { CloudsParticleEffect } from \"./effects/clouds.js\";\nimport { CrowsParticleEffect } from \"./effects/crows.js\";\nimport { EaglesParticleEffect } from \"./effects/eagles.js\";\nimport { EmbersParticleEffect } from \"./effects/embers.js\";\nimport { FogParticleEffect } from \"./effects/fog.js\";\nimport { RainParticleEffect } from \"./effects/rain.js\";\nimport { RainSimpleParticleEffect } from \"./effects/rain-simple.js\";\nimport { RainTopParticleEffect } from \"./effects/rain-top.js\";\nimport { RatsParticleEffect } from \"./effects/rats.js\";\nimport { SnowParticleEffect } from \"./effects/snow.js\";\nimport { SnowstormParticleEffect } from \"./effects/snowstorm.js\";\n\n/** @typedef {Record<string, typeof import(\"./effects/effect.js\").FXMasterParticleEffect>} ParticleEffects */\n\n/** @type {ParticleEffects} */\nexport const particleEffects = {\n  bats: BatsParticleEffect,\n  birds: BirdsParticleEffect,\n  crows: CrowsParticleEffect,\n  eagles: EaglesParticleEffect,\n  rats: RatsParticleEffect,\n  spiders: SpiderParticleEffect,\n\n  bubbles: BubblesParticleEffect,\n  embers: EmbersParticleEffect,\n  stars: StarsParticleEffect,\n\n  leaves: AutumnLeavesParticleEffect,\n  clouds: CloudsParticleEffect,\n  fog: FogParticleEffect,\n  rain: RainParticleEffect,\n  raintop: RainTopParticleEffect,\n  rainsimple: RainSimpleParticleEffect,\n  snow: SnowParticleEffect,\n  snowstorm: SnowstormParticleEffect,\n};\n","import { filterEffects } from \"./filter-effects/filter-effects-db.js\";\nimport { particleEffects } from \"./particle-effects/particle-effects-db.js\";\nimport { specialEffects } from \"./special-effects/special-effects-db.js\";\n\nexport const FXMASTER = {\n  filterEffects,\n  particleEffects,\n  specialEffects,\n};\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen particle effect which renders flying birds.\n */\nexport class BirdsParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectBirds\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/crows.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"animals\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.001, value: 0.006, max: 0.01, step: 0.001, decimals: 3 },\n        \"-=direction\": null,\n        animations: {\n          label: \"FXMASTER.Animations\",\n          type: \"multi-select\",\n          options: {\n            glide: \"FXMASTER.ParicleEffectBirdsAnimationsGlide\",\n            flap: \"FXMASTER.ParicleEffectBirdsAnimationsFlap\",\n            mixed: \"FXMASTER.ParicleEffectBirdsAnimationsMixed\",\n          },\n          value: [\"mixed\"],\n        },\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for flying birds\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static BIRDS_CONFIG = {\n    lifetime: { min: 20, max: 40 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 1, time: 0.02 },\n              { value: 1, time: 0.98 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 90 },\n              { time: 1, value: 100 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.3, time: 0 },\n              { value: 0.7, time: 0.1 },\n              { value: 0.7, time: 0.9 },\n              { value: 0.3, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 0, max: 359 },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.BIRDS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.BIRDS_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    config.behaviors.push({\n      type: \"animatedRandom\",\n      config: {\n        anims: this._getAnimations(options),\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n\n  /**\n   * Get the animation to use for this effect.\n   * @returns The animations to use for the effect\n   * @protected\n   */\n  _getAnimations(options) {\n    const animations = {\n      glide: [\n        { textureNumber: 2, count: 30 },\n        ...Array(4)\n          .fill([\n            { texture: 1, count: 3 },\n            { texture: 2, count: 2 },\n            { texture: 3, count: 3 },\n            { texture: 2, count: 2 },\n          ])\n          .deepFlatten(),\n        { texture: 2, count: 68 },\n      ],\n      flap: [\n        { texture: 1, count: 3 },\n        { texture: 2, count: 2 },\n        { texture: 3, count: 3 },\n        { texture: 2, count: 2 },\n      ],\n      mixed: [\n        { texture: 2, count: 7 },\n        { texture: 1, count: 3 },\n        { texture: 2, count: 2 },\n        { texture: 3, count: 3 },\n        { texture: 2, count: 7 },\n      ],\n    };\n\n    const getAnim = (animation) => ({\n      framerate: 20,\n      loop: true,\n      textures: animation.map(({ texture, count }) => ({\n        texture: `modules/fxmaster/assets/particle-effects/effects/birds/bird${texture}.png`,\n        count,\n      })),\n    });\n\n    const anims = (options.animations?.value ?? [])\n      .filter((animation) => Object.keys(animations).includes(animation))\n      .map((animation) => getAnim(animations[animation]));\n\n    if (anims.length === 0) {\n      anims.push(getAnim(animations.mixed));\n    }\n\n    return anims;\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\nimport { withSteppedGradientColor } from \"./helpers/with-stepped-gradient-color.js\";\n\n/**\n * A full-screen particle effect which renders floating embers.\n */\nexport class EmbersParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectEmbers\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/embers.png\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.05, value: 0.7, max: 1.4, step: 0.05, decimals: 2 },\n        tint: { value: { value: \"#f77300\" } },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for floating embers\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static EMBERS_CONFIG = {\n    lifetime: { min: 4, max: 6 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.9, time: 0.3 },\n              { value: 0.9, time: 0.95 },\n              { value: 0, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 24, max: 40 },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 0.15, time: 0 },\n              { value: 0.01, time: 1 },\n            ],\n          },\n          minMult: 0.85,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 100, maxSpeed: 200, minStart: 0, maxStart: 365 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"modules/fxmaster/assets/particle-effects/effects/embers/ember.png\" },\n      },\n      {\n        type: \"color\",\n        config: {\n          color: {\n            list: [\n              { value: \"f77300\", time: 0 },\n              { value: \"f72100\", time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"blendMode\",\n        config: {\n          blendMode: \"screen\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.EMBERS_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.EMBERS_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: d.sceneRect.x, y: d.sceneRect.y, w: d.sceneRect.width, h: d.sceneRect.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    const emitter = withSteppedGradientColor(this.createEmitter(config), config);\n    return [emitter];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders rain drops and splashes.\n */\nexport class RainParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRain\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rain.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /**\n   * Configuration for the particle emitter for rain\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RAIN_CONFIG = {\n    lifetime: { min: 0.5, max: 0.5 },\n    pos: { x: 0, y: 0 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.7 },\n              { time: 1, value: 0.1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 2800, max: 3500 },\n      },\n      {\n        type: \"scaleStatic\",\n        config: { min: 0.8, max: 1 },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 75, max: 75 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/rain.png\" },\n      },\n    ],\n  };\n\n  /**\n   * Configuration for the particle emitter for splashes\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SPLASH_CONFIG = {\n    lifetime: { min: 0.5, max: 0.5 },\n    pos: { x: 0, y: 0 },\n    behaviors: [\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 0, max: 0 },\n      },\n      {\n        type: \"scaleStatic\",\n        config: { min: 0.48, max: 0.6 },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: -90, max: -90 },\n      },\n      {\n        type: \"noRotation\",\n        config: {},\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/drop.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RAIN_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n\n    // Create an emitter for rain drops\n    const rainConfig = foundry.utils.deepClone(this.constructor.RAIN_CONFIG);\n    rainConfig.maxParticles = maxParticles;\n    rainConfig.frequency = 1 / maxParticles;\n    rainConfig.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: -0.05 * d.width,\n          y: -0.1 * d.height,\n          w: d.width,\n          h: 0.8 * d.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, rainConfig);\n\n    // Create a second emitter for splashes\n    const splashConfig = foundry.utils.deepClone(this.constructor.SPLASH_CONFIG);\n    splashConfig.maxParticles = 0.5 * maxParticles;\n    splashConfig.frequency = 2 / maxParticles;\n    splashConfig.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: 0,\n          y: 0.25 * d.height,\n          w: d.width,\n          h: 0.75 * d.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, splashConfig);\n\n    // Return both emitters\n    return [this.createEmitter(rainConfig), this.createEmitter(splashConfig)];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders rain drops from top down.\n */\nexport class RainTopParticleEffect extends FXMasterParticleEffect {\n  /**\n   * The id of the canvasPan hook registered by this effect.\n   * @type {number|undefined}\n   * @private\n   */\n  _canvasPanHookId;\n\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRainTop\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rain.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /** @override */\n  static get parameters() {\n    return foundry.utils.mergeObject(\n      super.parameters,\n      {\n        density: { min: 0.01, value: 0.3, max: 1, step: 0.01, decimals: 2 },\n        \"-=direction\": null,\n      },\n      { performDeletions: true },\n    );\n  }\n\n  /**\n   * Configuration for the particle emitter for raindrops from top down\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RAIN_TOP_CONFIG = {\n    lifetime: { min: 0.6, max: 0.7 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { value: 0, time: 0 },\n              { value: 0.6, time: 0.8 },\n              { value: 0.23, time: 1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { value: 3, time: 0 },\n              { value: 0.4, time: 1 },\n            ],\n          },\n          minMult: 0.7,\n        },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 180, max: 180 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/rain.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RAIN_TOP_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const sceneRadius = Math.sqrt(d.sceneWidth * d.sceneWidth + d.sceneHeight * d.sceneHeight) / 2;\n    const config = foundry.utils.deepClone(this.constructor.RAIN_TOP_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = config.lifetime.min / maxParticles;\n    config.behaviors.push({\n      type: \"moveSpeed\",\n      config: {\n        speed: {\n          list: [\n            { time: 0, value: 1600 },\n            { time: 1, value: 2000 },\n          ],\n        },\n        minMult: 0.8,\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n    const moveSpeedList = config.behaviors.find(({ type }) => type === \"moveSpeed\").config.speed.list;\n    const averageSpeed = moveSpeedList.reduce((acc, cur) => acc + cur.value, 0) / moveSpeedList.length;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"torus\",\n        data: {\n          x: d.sceneRect.x + d.sceneWidth / 2,\n          y: d.sceneRect.y + d.sceneHeight / 2,\n          radius: averageSpeed * config.lifetime.max + sceneRadius * 2,\n          innerRadius: averageSpeed * config.lifetime.max,\n          affectRotation: true,\n        },\n      },\n    });\n\n    const emitter = this.createEmitter(config);\n    emitter.updateOwnerPos(\n      canvas.stage.pivot.x - d.sceneX - d.sceneWidth / 2,\n      canvas.stage.pivot.y - d.sceneY - d.sceneHeight / 2,\n    );\n    return [emitter];\n  }\n\n  /** @override */\n  play() {\n    this._unregisterCanvasPanHook();\n    this._canvasPanHookId = Hooks.on(\"canvasPan\", (_canvas, position) => {\n      const d = canvas.dimensions;\n      for (let e of this.emitters) {\n        e.updateOwnerPos(position.x - d.sceneX - d.sceneWidth / 2, position.y - d.sceneY - d.sceneHeight / 2);\n      }\n    });\n    super.play();\n  }\n\n  /** @override */\n  stop() {\n    this._unregisterCanvasPanHook();\n    super.stop();\n  }\n\n  /**\n   * Unregister the canvasPan hook used by this effect.\n   * @private\n   */\n  _unregisterCanvasPanHook() {\n    if (this._canvasPanHookId !== undefined) {\n      Hooks.off(\"canvasPan\", this._canvasPanHookId);\n      this._canvasPanHookId = undefined;\n    }\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders rain drops.\n */\nexport class RainSimpleParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectRainSimple\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/rain.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /**\n   * Configuration for the particle emitter for rain\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static RAIN_CONFIG = {\n    lifetime: { min: 0.5, max: 0.5 },\n    pos: { x: 0, y: 0 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.7 },\n              { time: 1, value: 0.1 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeedStatic\",\n        config: { min: 2800, max: 3500 },\n      },\n      {\n        type: \"scaleStatic\",\n        config: { min: 0.8, max: 1 },\n      },\n      {\n        type: \"rotationStatic\",\n        config: { min: 75, max: 75 },\n      },\n      {\n        type: \"textureSingle\",\n        config: { texture: \"ui/particles/rain.png\" },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.RAIN_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n\n    const config = foundry.utils.deepClone(this.constructor.RAIN_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = 1 / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: {\n          x: -0.05 * d.width,\n          y: -0.1 * d.height,\n          w: d.width,\n          h: 0.8 * d.height,\n        },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n\n    return [this.createEmitter(config)];\n  }\n}\n","import { FXMasterParticleEffect } from \"./effect.js\";\n\n/**\n * A full-screen weather effect which renders drifting snowflakes.\n */\nexport class SnowParticleEffect extends FXMasterParticleEffect {\n  /** @override */\n  static label = \"FXMASTER.ParticleEffectSnow\";\n\n  /** @override */\n  static get icon() {\n    return \"modules/fxmaster/assets/particle-effects/icons/snow.png\";\n  }\n\n  /** @override */\n  static get group() {\n    return \"weather\";\n  }\n\n  /**\n   * Configuration for the particle emitter for snow\n   * @type {PIXI.particles.EmitterConfigV3}\n   */\n  static SNOW_CONFIG = {\n    lifetime: { min: 4, max: 4 },\n    behaviors: [\n      {\n        type: \"alpha\",\n        config: {\n          alpha: {\n            list: [\n              { time: 0, value: 0.9 },\n              { time: 1, value: 0.5 },\n            ],\n          },\n        },\n      },\n      {\n        type: \"moveSpeed\",\n        config: {\n          speed: {\n            list: [\n              { time: 0, value: 190 },\n              { time: 1, value: 210 },\n            ],\n          },\n          minMult: 0.6,\n        },\n      },\n      {\n        type: \"scale\",\n        config: {\n          scale: {\n            list: [\n              { time: 0, value: 0.2 },\n              { time: 1, value: 0.4 },\n            ],\n          },\n          minMult: 0.5,\n        },\n      },\n      {\n        type: \"rotation\",\n        config: { accel: 0, minSpeed: 0, maxSpeed: 200, minStart: 50, maxStart: 75 },\n      },\n      {\n        type: \"textureSingle\",\n        config: {\n          texture: \"ui/particles/snow.png\",\n        },\n      },\n    ],\n  };\n\n  /** @override */\n  static get defaultConfig() {\n    return this.SNOW_CONFIG;\n  }\n\n  /** @override */\n  getParticleEmitters(options = {}) {\n    options = this.constructor.mergeWithDefaults(options);\n    const d = canvas.dimensions;\n    const maxParticles = (d.width / d.size) * (d.height / d.size) * options.density.value;\n    const config = foundry.utils.deepClone(this.constructor.SNOW_CONFIG);\n    config.maxParticles = maxParticles;\n    config.frequency = (config.lifetime.min + config.lifetime.max) / 2 / maxParticles;\n    config.behaviors.push({\n      type: \"spawnShape\",\n      config: {\n        type: \"rect\",\n        data: { x: 0, y: -0.1 * d.height, w: d.width, h: d.height },\n      },\n    });\n    this.applyOptionsToConfig(options, config);\n    return [this.createEmitter(config)];\n  }\n}\n","export const specialEffects = {\n  fxmaster: {\n    label: \"FXMaster\",\n    effects: [\n      {\n        label: \"Smoke Bomb\",\n        file: \"modules/fxmaster/assets/special-effects/fxmaster/smoke-bomb.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        speed: 0,\n        author: \"U~man\",\n      },\n      {\n        label: \"Fireball\",\n        file: \"modules/fxmaster/assets/special-effects/fxmaster/fireball.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        author: \"U~man\",\n      },\n      {\n        label: \"Blood Splatter\",\n        file: \"modules/fxmaster/assets/special-effects/fxmaster/blood.webm\",\n        scale: {\n          x: 0.7,\n          y: 0.7,\n        },\n        angle: 0,\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        author: \"U~man\",\n      },\n      {\n        label: \"Red Fire Cone\",\n        file: \"modules/fxmaster/assets/special-effects/jinker/dragonBornGold-RedFire15Cone.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0,\n          y: 0.5,\n        },\n        author: \"Jinker\",\n      },\n      {\n        label: \"Acid Line\",\n        file: \"modules/fxmaster/assets/special-effects/jinker/dragonBornBlack-CopperAcid30x5Line.webm\",\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        angle: 0,\n        anchor: {\n          x: 0,\n          y: 0.5,\n        },\n        author: \"Jinker\",\n      },\n      {\n        label: \"Witch Bolt\",\n        file: \"modules/fxmaster/assets/special-effects/jb2a/Witch_Bolt_Blue_600x200.webm\",\n        scale: {\n          x: 0.7,\n          y: 0.7,\n        },\n        angle: 0,\n        anchor: {\n          x: 0,\n          y: 0.5,\n        },\n        author: \"JB2A\",\n      },\n    ],\n  },\n};\n","import { packageId } from \"../constants.js\";\nimport { logger } from \"../logger.js\";\nimport { executeWhenWorldIsMigratedToLatest, isOnTargetMigration } from \"../migration/migration.js\";\nimport { isEnabled } from \"../settings.js\";\n\nexport class ParticleEffectsLayer extends FullCanvasObjectMixin(CanvasLayer) {\n  constructor() {\n    super();\n    this.#initializeInverseOcclusionFilter();\n    this.mask = canvas.masks.scene;\n    this.sortableChildren = true;\n    this.eventMode = \"none\";\n  }\n\n  /**\n   * Initialize the inverse occlusion filter.\n   */\n  #initializeInverseOcclusionFilter() {\n    this.occlusionFilter = WeatherOcclusionMaskFilter.create({\n      occlusionTexture: canvas.masks.depth.renderTexture,\n    });\n    this.occlusionFilter.enabled = false;\n    this.occlusionFilter.elevation = this.elevation;\n    this.occlusionFilter.blendMode = PIXI.BLEND_MODES.NORMAL;\n    this.filterArea = canvas.app.renderer.screen;\n    this.filters = [this.occlusionFilter];\n  }\n\n  /** @override */\n  static get layerOptions() {\n    return foundry.utils.mergeObject(super.layerOptions, { name: \"particle-effects\" });\n  }\n\n  /**\n   * The currently active particle effects.\n   * @type {Map<string, import('./effects/effect.js').FXMasterParticleEffect>}\n   */\n  particleEffects = new Map();\n\n  /**\n   * The inverse occlusion mask filter bound to this container.\n   * @type {WeatherOcclusionMaskFilter}\n   */\n  occlusionFilter;\n\n  /**\n   * Define an elevation property on the ParticleEffectsLayer layer.\n   * For now, it simply referenes the elevation property of the {@link WeatherEffects} provided by\n   * foundry.\n   * @type {number}\n   */\n  get elevation() {\n    return canvas.weather?.elevation ?? Infinity;\n  }\n\n  set elevation(value) {\n    const weatherEffects = canvas.weather;\n    if (weatherEffects) {\n      weatherEffects.elevation = value;\n    }\n  }\n\n  /** @override */\n  async _draw() {\n    if (!isEnabled()) {\n      return;\n    }\n    if (isOnTargetMigration()) {\n      await this.#draw();\n    } else {\n      // If migrations need to be performed, defer drawing to when they are done.\n      executeWhenWorldIsMigratedToLatest(this.#draw.bind(this));\n    }\n  }\n\n  /** @override */\n  async _tearDown() {\n    this.#destroyEffects();\n    return super._tearDown();\n  }\n\n  #destroyEffects() {\n    if (this.particleEffects.size === 0) return;\n    for (const ec of this.particleEffects.values()) {\n      ec.destroy();\n    }\n    this.particleEffects.clear();\n  }\n\n  /**\n   * Actual implementation of drawing the layer.\n   */\n  async #draw() {\n    await this.drawParticleEffects();\n  }\n\n  async drawParticleEffects({ soft = false } = {}) {\n    if (!canvas.scene) {\n      return;\n    }\n    let zIndex = 0;\n\n    const stopPromise = Promise.all(\n      [...this.particleEffects.entries()].map(async ([id, effect]) => {\n        if (soft) {\n          await effect.fadeOut({ timeout: 20000 });\n        } else {\n          effect.stop();\n        }\n        effect.destroy();\n        // The check is needed because a new effect might have been set already.\n        if (this.particleEffects.get(id) === effect) {\n          this.particleEffects.delete(id);\n        }\n      }),\n    );\n\n    const flags = canvas.scene.getFlag(packageId, \"effects\") ?? {};\n    if (Object.keys(flags).length > 0) {\n      this.occlusionFilter.enabled = true;\n    }\n    for (const [id, { type, options: flagOptions }] of Object.entries(flags)) {\n      if (!(type in CONFIG.fxmaster.particleEffects)) {\n        logger.warn(`Particle effect '${id}' is of unknown type '${flags[id].type}', skipping it.`);\n        continue;\n      }\n      const options = Object.fromEntries(\n        Object.entries(flagOptions).map(([optionName, value]) => [optionName, { value }]),\n      );\n\n      const ec = new CONFIG.fxmaster.particleEffects[type](options);\n      ec.zIndex = zIndex++;\n      ec.blendMode = PIXI.BLEND_MODES.NORMAL;\n\n      this.addChild(ec);\n      this.particleEffects.set(id, ec);\n      ec.play({ prewarm: !soft });\n    }\n\n    await stopPromise;\n\n    if (this.particleEffects.size === 0) {\n      this.occlusionFilter.enabled = false;\n    }\n  }\n}\n","import { packageId } from \"../constants.js\";\n\nexport function registeDrawingsMaskFunctionality() {\n  Hooks.on(\"canvasReady\", () => {\n    requestAnimationFrame(drawDrawingsMask);\n  });\n\n  for (const hook of [\"updateDrawing\", \"createDrawing\", \"deleteDrawing\"]) {\n    Hooks.on(hook, (drawing) => {\n      drawDrawingsMaskIfCurrentScene(drawing.parent);\n    });\n  }\n\n  Hooks.on(\"updateScene\", (scene, data) => {\n    if (\n      foundry.utils.hasProperty(data, \"flags.fxmaster.invert\") ||\n      foundry.utils.hasProperty(data, \"flags.fxmaster.-=invert\")\n    ) {\n      drawDrawingsMaskIfCurrentScene(scene);\n    }\n  });\n}\n\nfunction drawDrawingsMaskIfCurrentScene(scene) {\n  if (scene === canvas.scene) {\n    drawDrawingsMask();\n  }\n}\n\nfunction drawDrawingsMask() {\n  const msk = canvas.masks.depth;\n  if (msk.fxmasterDrawingsMask) {\n    msk.removeChild(msk.fxmasterDrawingsMask);\n    delete msk.fxmasterDrawingsMask;\n  }\n  const invert = canvas.scene.getFlag(packageId, \"invert\");\n  const mask = invert ? createInvertedMask() : createMask();\n  mask.mask = new PIXI.MaskData();\n  mask.mask.colorMask = PIXI.COLOR_MASK_BITS.BLUE;\n  msk.fxmasterDrawingsMask = msk.addChild(mask);\n}\n\nfunction createMask() {\n  const mask = new PIXI.LegacyGraphics();\n  canvas.drawings.placeables.forEach((drawing) => {\n    const isMask = drawing.document.getFlag(packageId, \"masking\");\n    if (!isMask) return;\n    mask.beginFill(0x0000ff);\n    drawShapeToMask(mask, drawing);\n    mask.endFill();\n  });\n  return mask;\n}\n\nfunction createInvertedMask() {\n  const mask = new PIXI.LegacyGraphics();\n  mask.beginFill(0x0000ff).drawShape(canvas.dimensions.rect).endFill();\n\n  canvas.drawings.placeables.forEach((drawing) => {\n    const isMask = drawing.document.getFlag(packageId, \"masking\");\n    if (!isMask) return;\n    mask.beginHole();\n    drawShapeToMask(mask, drawing);\n    mask.endHole();\n  });\n  return mask;\n}\n\n/**\n * Draw a shape to a mask.\n * @param {PIXI.Graphics} mask    The mask to draw to\n * @param {Drawing}       drawing The drawing of which to draw the dhape\n */\nfunction drawShapeToMask(mask, drawing) {\n  const shape = drawing.shape.geometry.graphicsData[0].shape.clone();\n  switch (drawing.type) {\n    case Drawing.SHAPE_TYPES.ELLIPSE: {\n      shape.x = drawing.center.x;\n      shape.y = drawing.center.y;\n      mask.drawShape(shape);\n      break;\n    }\n    case Drawing.SHAPE_TYPES.POLYGON: {\n      const points = drawing.document.shape.points.map((p, i) =>\n        i % 2 === 0 ? p + drawing.bounds.x : p + drawing.bounds.y,\n      );\n      mask.drawPolygon(points);\n      break;\n    }\n    default: {\n      const s = drawing.document.shape;\n      shape.x = drawing.center.x - s.width / 2;\n      shape.y = drawing.center.y - s.height / 2;\n      mask.drawShape(shape);\n    }\n  }\n}\n","import { packageId } from \"../constants.js\";\nimport { logger } from \"../logger.js\";\nimport { executeWhenWorldIsMigratedToLatest, isOnTargetMigration } from \"../migration/migration.js\";\nimport { isEnabled } from \"../settings.js\";\nimport { resetFlag } from \"../utils.js\";\n\nexport class FilterManager {\n  /** @private */\n  constructor() {\n    this.filters = {};\n    this._ticker = false;\n    this.#registerHooks();\n  }\n\n  /**\n   * A private reference for the global {@link FilterManager} instance.\n   * @type {FilterManager | undefined}\n   */\n  static #instance;\n\n  /**\n   * The container effects should be a pplied to.\n   * @type {PIXI.Container}\n   */\n  static get container() {\n    return canvas.environment;\n  }\n\n  /**\n   * The singleton {@link FilterManager} instance.\n   * @type {FilterManager}\n   */\n  static get instance() {\n    if (!this.#instance) {\n      this.#instance = new this();\n    }\n    return this.#instance;\n  }\n\n  /**\n   * Activate this {@link FilterManager}. This includes creating all the necessary filters, attaching them to the\n   * configured layers, starting their animations.\n   * @returns {Promise<void>} A promise that resolves as soon as filters are activated\n   */\n  async #activate() {\n    await this.#update({ skipFading: true });\n\n    if (!this._ticker) {\n      canvas.app.ticker.add(this.#animate, this);\n      this._ticker = true;\n    }\n  }\n\n  /**\n   * Update the filters to the state that is configured for the active scene.\n   * @param {{skipFading?: boolean}} [options]            Additional options to configure this update\n   * @param {boolean}                [options.skipFading] Whether or not newly created filters should skip their fading\n   * @returns {Promise<void>}                             A promise that resolves as soon as the filters have been updated\n   */\n  async #update({ skipFading = false } = {}) {\n    if (!canvas.scene) {\n      return;\n    }\n    const filterInfos = Object.fromEntries(\n      Object.entries(canvas.scene.getFlag(packageId, \"filters\") ?? {}).filter(([id, filterInfo]) => {\n        if (!(filterInfo.type in CONFIG.fxmaster.filterEffects)) {\n          logger.warn(`Filter effect '${id}' is of unknown type '${filterInfo.type}', skipping it.`);\n          return false;\n        }\n        return true;\n      }),\n    );\n\n    const filtersToCreate = Object.keys(filterInfos).filter((key) => !(key in this.filters));\n    const filtersToUpdate = Object.keys(filterInfos).filter((key) => key in this.filters);\n    const filtersToDelete = Object.keys(this.filters).filter((key) => !(key in filterInfos));\n\n    for (const key of filtersToCreate) {\n      const { type, options } = filterInfos[key];\n      this.filters[key] = new CONFIG.fxmaster.filterEffects[type](options, key);\n      this.filters[key].play({ skipFading });\n    }\n\n    for (const key of filtersToUpdate) {\n      const { options } = filterInfos[key];\n      const filter = this.filters[key];\n      filter.configure(options);\n      filter.play({ skipFading });\n    }\n\n    const deletePromises = filtersToDelete.map(async (key) => {\n      const filter = this.filters[key];\n      const completed = await filter.stop({ skipFading });\n      if (completed) {\n        delete this.filters[key];\n        FilterManager.#removeFilterFromContainer(this.constructor.container, filter);\n      }\n    });\n    await Promise.all(deletePromises);\n\n    this.#applyFilters();\n  }\n\n  /**\n   * Apply the filters to the configured canvas layers.\n   */\n  #applyFilters() {\n    const filters = Object.values(this.filters);\n    const otherFilters = this.constructor.container.filters?.filter((f) => !filters.includes(f)) ?? [];\n    this.constructor.container.filters = otherFilters.concat(filters);\n  }\n\n  /**\n   * Remove a filter from a container.\n   * @param {PIXI.container} container A container\n   * @param {PIXI.Filter} filter A filter\n   */\n  static #removeFilterFromContainer(container, filter) {\n    container.filters = container.filters?.filter((f) => f !== filter) ?? null;\n  }\n\n  /**\n   * Stop all filters and remove them from the manager.\n   * @remarks This does _not_ remove the filters from the canvas layers.\n   * @returns {Promise<void>} A promise that resolves as soon as all filters have been stopped and removed from the\n   *                          manager\n   */\n  async #clear() {\n    const promises = Object.values(this.filters).map((filter) => filter.stop());\n    this.filters = {};\n    await Promise.all(promises);\n  }\n\n  /**\n   * Add a named filter.\n   * @param {string | undefined} name The name of the filter\n   * @param {string} type             The type of the filter\n   * @param {object} options          The options for the filter\n   * @returns {Prmise<void>} A promise that resolves as soon as the filter has been added to the scene's fxmaster flags\n   */\n  async addFilter(name, type, options) {\n    name = name ?? foundry.utils.randomID();\n    await canvas.scene?.setFlag(packageId, \"filters\", { [name]: { type, options } });\n  }\n\n  /**\n   * Remove a named filter.\n   * @param {string} name     The name of the filter to remove\n   * @returns {Promise<void>} A promise that resolves when the filter has been removed from the scene's fxmaster flags\n   */\n  async removeFilter(name) {\n    await canvas.scene?.setFlag(packageId, \"filters\", { [`-=${name}`]: null });\n  }\n\n  /**\n   * Remove all filters.\n   * @returns {Promise<void>} A promise that resolves as soon as all filters have been removed from the scene's fxmaster\n   *                          flags\n   */\n  async removeAll() {\n    await canvas.scene?.unsetFlag(packageId, \"filters\");\n  }\n\n  /**\n   * Toggle a named filter on or off.\n   * @param {string} name     The name of the filter\n   * @param {string} type     The type of the filter\n   * @param {object} options  The options for the filter\n   * @returns {Promise<void>} A promise that resolves as soon as the filter has been toggled\n   */\n  async switch(name, type, options) {\n    if (!canvas.scene) {\n      return;\n    }\n    const filterInfos = canvas.scene.getFlag(packageId, \"filters\") ?? {};\n    if (filterInfos[name]) {\n      return this.removeFilter(name);\n    } else {\n      return this.addFilter(name, type, options);\n    }\n  }\n\n  async setFilters(filterInfoArray) {\n    const filterInfos = Object.fromEntries(filterInfoArray.map((filterInfo) => [foundry.utils.randomID(), filterInfo]));\n    await resetFlag(canvas.scene, \"filters\", filterInfos);\n  }\n\n  #animate() {\n    for (const key in this.filters) {\n      this.filters[key].step();\n    }\n  }\n\n  #registerHooks() {\n    Hooks.on(\"canvasInit\", () => {\n      if (isEnabled()) {\n        this.#clear();\n      }\n    });\n\n    Hooks.on(\"canvasReady\", () => {\n      executeWhenWorldIsMigratedToLatest(async () => {\n        if (isEnabled()) {\n          await this.#activate();\n        }\n      });\n    });\n\n    Hooks.on(\"updateScene\", (scene, data) => {\n      if (!isEnabled() || !isOnTargetMigration() || scene !== canvas.scene) {\n        return;\n      }\n      if (\n        foundry.utils.hasProperty(data, \"flags.fxmaster.filters\") ||\n        foundry.utils.hasProperty(data, \"flags.fxmaster.-=filters\")\n      ) {\n        this.#update();\n      }\n    });\n  }\n}\n","import { easeFunctions } from \"../../ease.js\";\nimport { packageId } from \"../../constants.js\";\n\nexport class SpecialEffectConfig extends FormApplication {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"form\"],\n      closeOnSubmit: true,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 320,\n      height: \"auto\",\n      template: \"modules/fxmaster/templates/special-effect-config.hbs\",\n      id: \"add-effect\",\n      title: game.i18n.localize(\"FXMASTER.AddSpecialEffect\"),\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  setDefault(object) {\n    this.default = object;\n  }\n\n  /**\n   * Obtain module metadata and merge it with game settings which track current module visibility\n   * @return {Object}   The data provided to the template when rendering the form\n   */\n  getData() {\n    const eases = easeFunctions;\n    const values = foundry.utils.mergeObject(\n      {\n        folder: \"Custom\",\n        angle: 0,\n        position: {\n          x: 0,\n          y: 0,\n        },\n        anchor: {\n          x: 0.5,\n          y: 0.5,\n        },\n        scale: {\n          x: 1.0,\n          y: 1.0,\n        },\n        speed: 0,\n        animationDelay: {\n          start: 0,\n          end: 0,\n        },\n        ease: \"Linear\",\n        author: \"\",\n        preset: false,\n      },\n      this.default,\n    );\n\n    // Return data to the template\n    return {\n      default: values,\n      ease: Object.keys(eases),\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find('input[type=\"range\"]').on(\"input\", (event) => this._onChangeRange(event));\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated\n   * @param event {Event}       The initial triggering submission event\n   * @param formData {object}   The object of validated form data with which to update the object\n   * @protected\n   */\n  async _updateObject(_, formData) {\n    const fxs = game.settings.get(packageId, \"specialEffects\");\n\n    const newData = {\n      folder: formData[\"folder\"],\n      label: formData[\"label\"],\n      file: formData[\"file\"],\n      scale: {\n        x: parseFloat(formData[\"scaleX\"]),\n        y: parseFloat(formData[\"scaleY\"]),\n      },\n      angle: parseFloat(formData[\"angle\"]),\n      anchor: {\n        x: formData[\"anchorX\"],\n        y: formData[\"anchorY\"],\n      },\n      speed: parseFloat(formData[\"speed\"]),\n      animationDelay: {\n        start: parseFloat(formData[\"animationDelayStart\"]),\n        end: parseFloat(formData[\"animationDelayEnd\"]),\n      },\n      ease: formData[\"ease\"],\n      preset: false,\n      author: \"\",\n    };\n    const fx = fxs.filter((f) => f.label == newData.label);\n    if (fx.length > 0) {\n      fx[0] = foundry.utils.mergeObject(fx[0], newData);\n    } else {\n      fxs.push(newData);\n    }\n    await game.settings.set(packageId, \"specialEffects\", fxs);\n  }\n}\n","import { SpecialEffectConfig } from \"./special-effect-config.js\";\nimport { packageId } from \"../../constants.js\";\n\nimport \"../../../css/specials-config.css\";\n\nexport class SpecialEffectsManagement extends Application {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"fxmaster\", \"specials\", \"sidebar-popout\"],\n      closeOnSubmit: true,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 120,\n      height: 200,\n      resizable: true,\n      dragDrop: [{ dragSelector: \".special-effects\" }],\n      template: \"modules/fxmaster/templates/special-effects-management.hbs\",\n      id: \"specials-config\",\n      title: game.i18n.localize(\"FXMASTER.SpecialEffectsManagementTitle\"),\n    });\n  }\n\n  /** @override */\n  getData() {\n    return {\n      folders: CONFIG.fxmaster.userSpecials,\n    };\n  }\n\n  /** @override */\n  activateListeners(html) {\n    html.find(\".special-effects .description\").click((event) => {\n      let list = event.currentTarget.closest(\".directory-list\");\n      let items = $(list).find(\".directory-item\");\n      for (let i = 0; i < items.length; i++) {\n        items[i].classList.remove(\"active\");\n      }\n      event.currentTarget.parentElement.classList.add(\"active\");\n    });\n\n    // Dialog\n    html.find(\"a[data-action=add-effect]\").click(async () => {\n      new SpecialEffectConfig().render(true);\n    });\n\n    html.find(\".preview video\").hover((ev) => {\n      ev.currentTarget.play();\n    });\n\n    html.find(\".del-effect\").click((ev) => {\n      const folderId = ev.currentTarget.closest(\".folder\").dataset[\"folderId\"];\n      const effectId = ev.currentTarget.closest(\".special-effects\").dataset[\"effectId\"];\n      const data = CONFIG.fxmaster.userSpecials[folderId].effects[effectId];\n      const settings = game.settings.get(packageId, \"specialEffects\");\n      const id = settings.findIndex((v) => {\n        return v.label === data.label && v.folder === data.folder;\n      });\n      if (id === -1) {\n        return;\n      }\n      settings.splice(id, 1);\n      game.settings.set(packageId, \"specialEffects\", settings);\n    });\n\n    html.find(\".edit-effect\").click((ev) => {\n      const folderId = ev.currentTarget.closest(\".folder\").dataset[\"folderId\"];\n      const effectId = ev.currentTarget.closest(\".special-effects\").dataset[\"effectId\"];\n      const d = new SpecialEffectConfig();\n      d.setDefault(CONFIG.fxmaster.userSpecials[folderId].effects[effectId]);\n      d.render(true);\n    });\n\n    html.find(\".action-toggle\").click((ev) => {\n      for (const c of ev.currentTarget.parentElement.children) {\n        c.classList.remove(\"active\");\n      }\n      ev.currentTarget.classList.add(\"active\");\n    });\n\n    const directory = html.find(\".directory-list\");\n    directory.on(\"click\", \".folder-header\", this._toggleFolder.bind(this));\n  }\n\n  _toggleFolder(event) {\n    let folder = $(event.currentTarget.parentElement);\n    let collapsed = folder.hasClass(\"collapsed\");\n\n    // Expand\n    if (collapsed) folder.removeClass(\"collapsed\");\n    // Collapse\n    else {\n      folder.addClass(\"collapsed\");\n      folder.find(\".folder\").addClass(\"collapsed\");\n    }\n  }\n\n  /** @override */\n  _onDragStart(event) {\n    const effectId = event.currentTarget.closest(\".special-effects\").dataset.effectId;\n    const folderId = event.currentTarget.closest(\".folder\").dataset.folderId;\n    const effectData = CONFIG.fxmaster.userSpecials[folderId].effects[effectId];\n    effectData.type = \"SpecialEffect\";\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(effectData));\n  }\n}\n","/**\n * A SpriteMesh which visualizes a special effect object in the PrimaryCanvasGroup.\n */\nexport class SpecialEffectMesh extends SpriteMesh {\n  /** @type {number} */\n  get elevation() {\n    return this.#elevation;\n  }\n\n  set elevation(value) {\n    this.#elevation = value;\n  }\n\n  #elevation = 0;\n}\n","import { packageId } from \"../constants.js\";\nimport { easeFunctions } from \"../ease.js\";\nimport { SpecialEffectMesh } from \"./mesh.js\";\n\nexport class SpecialEffectsLayer extends InteractionLayer {\n  constructor() {\n    super();\n    this.videos = [];\n    this._dragging = false;\n    this.ruler = null;\n    this.windowVisible = false;\n    // Listen to the socket\n    game.socket.on(`module.${packageId}`, (data) => {\n      this.playVideo(data);\n    });\n  }\n\n  static get layerOptions() {\n    return foundry.utils.mergeObject(super.layerOptions, {\n      name: \"specials\",\n      zIndex: 245,\n    });\n  }\n\n  /** @override */\n  async _draw() {\n    await super._draw();\n    this.ruler = this.addChild(new PIXI.Graphics());\n  }\n\n  /** @inheritdoc */\n  async _tearDown() {\n    this.ruler = null;\n    for (const video of this.videos) {\n      video.remove();\n    }\n    this.videos = [];\n    return super._tearDown();\n  }\n\n  _configureProjectile(mesh, data) {\n    if (data.distance && (!data.speed || data.speed == \"auto\")) {\n      data.speed = data.distance / data.duration;\n    }\n    // Compute final position\n    const delta = data.duration * data.speed;\n    const deltaX = delta * Math.cos(data.rotation);\n    const deltaY = delta * Math.sin(data.rotation);\n\n    // Move the sprite\n    const attributes = [\n      {\n        parent: mesh,\n        attribute: \"x\",\n        to: data.position.x + deltaX,\n      },\n      {\n        parent: mesh,\n        attribute: \"y\",\n        to: data.position.y + deltaY,\n      },\n    ];\n\n    let animationDuration = data.duration * 1000;\n    if (foundry.utils.hasProperty(data, \"animationDelay\")) {\n      animationDuration -= Math.max(0, 1000 * (data.animationDelay.end + data.animationDelay.start));\n    }\n    const animationName = `${packageId}.video.${foundry.utils.randomID()}.move`;\n    const animate = function () {\n      CanvasAnimation.animate(attributes, {\n        name: animationName,\n        context: this,\n        duration: animationDuration,\n        easing: easeFunctions[data.ease],\n      });\n    };\n    if (foundry.utils.hasProperty(data, \"animationDelay.start\")) {\n      setTimeout(animate, data.animationDelay.start * 1000.0);\n    } else {\n      animate();\n    }\n    return () => CanvasAnimation.terminateAnimation(animationName);\n  }\n\n  _configureRotate(mesh, data) {\n    const attributes = [\n      {\n        parent: mesh,\n        attribute: \"angle\",\n        to: 90 * data.rotationSpeed,\n      },\n    ];\n    let animationDuration = data.duration * 1000;\n    if (foundry.utils.hasProperty(data, \"animationDelay\")) {\n      animationDuration -= Math.max(0, 1000 * (data.animationDelay.end + data.animationDelay.start));\n    }\n    const animationName = `${packageId}.video.${foundry.utils.randomID()}.rotate`;\n\n    const animate = function () {\n      CanvasAnimation.animate(attributes, {\n        name: animationName,\n        context: this,\n        duration: animationDuration,\n        easing: easeFunctions[data.ease],\n      });\n    };\n    if (foundry.utils.hasProperty(data, \"animationDelay.start\")) {\n      setTimeout(animate, data.animationDelay.start * 1000.0);\n    } else {\n      animate();\n    }\n    return () => CanvasAnimation.terminateAnimation(animationName);\n  }\n\n  #configureSpecialEffectMesh(mesh, data) {\n    mesh.anchor.set(data.anchor.x, data.anchor.y);\n    mesh.rotation = Math.normalizeRadians(data.rotation - Math.toRadians(data.angle));\n    mesh.scale.set(data.scale.x, data.scale.y);\n    mesh.position.set(data.position.x, data.position.y);\n    mesh.elevation = data.elevation ?? 1;\n\n    if (data.width) {\n      if (data.keepAspect) {\n        const aspectRatio = mesh.height / mesh.width;\n        mesh.height = data.width * aspectRatio;\n      }\n      mesh.width = data.width;\n    }\n\n    /** @type {(() => void) | undefined} */\n    let terminateMovementAnimation;\n    if (data.speed || data.distance) {\n      terminateMovementAnimation = this._configureProjectile(mesh, data);\n    }\n    /** @type {(() => void) | undefined} */\n    let terminateRotationtAnimation;\n    if (data.rotationSpeed) {\n      terminateRotationtAnimation = this._configureRotate(mesh, data);\n    }\n\n    return () => {\n      terminateMovementAnimation?.();\n      terminateRotationtAnimation?.();\n    };\n  }\n\n  playVideo(data) {\n    return new Promise((resolve) => {\n      // Set default values\n      data = foundry.utils.mergeObject(\n        {\n          anchor: { x: 0.5, y: 0.5 },\n          rotation: 0,\n          scale: { x: 1.0, y: 1.0 },\n          position: { x: 0, y: 0 },\n          playbackRate: 1.0,\n          ease: \"Linear\",\n        },\n        data,\n      );\n\n      // Create video\n      const video = document.createElement(\"video\");\n      video.preload = \"auto\";\n      video.crossOrigin = \"anonymous\";\n      video.src = data.file;\n      video.playbackRate = data.playbackRate;\n      this.videos.push(video);\n\n      /** @type {SpriteMesh | undefined} */\n      let mesh;\n      /** @type {(() => void) | undefined} */\n      let terminateAnimation;\n\n      const onCanPlay = () => {\n        mesh = new SpecialEffectMesh(PIXI.Texture.from(video));\n\n        data.dimensions = { w: video.videoWidth, h: video.videoHeight };\n        data.duration = video.duration;\n        terminateAnimation = this.#configureSpecialEffectMesh(mesh, data);\n\n        canvas.primary.addChild(mesh);\n        canvas.primary.videoMeshes.add(mesh);\n      };\n\n      const onEnd = () => {\n        terminateAnimation?.();\n        canvas.primary.removeChild(mesh);\n        canvas.primary.videoMeshes.delete(mesh);\n        resolve();\n        if (!mesh?._destroyed) mesh?.destroy({ children: true });\n      };\n\n      video.oncanplay = onCanPlay;\n      video.onerror = onEnd;\n      video.onended = onEnd;\n    });\n  }\n\n  static _createMacro(effectData) {\n    return `\n      const data = {\n        file: \"${effectData.file}\",\n        position: {\n          x: canvas.scene.dimensions.width / 2,\n          y: canvas.scene.dimensions.height / 2\n        },\n        anchor : {\n          x: ${effectData.anchor.x},\n          y: ${effectData.anchor.y}\n        },\n        angle: ${effectData.angle},\n        speed: ${effectData.speed},\n        scale: {\n          x: ${effectData.scale.x},\n          y: ${effectData.scale.y}\n        }\n      };\n      const tokens = canvas.tokens.controlled;\n      // No tokens are selected, play in a random position\n      if (tokens.length === 0) {\n        canvas.specials.playVideo(data);\n        game.socket.emit(\"module.${packageId}\", data);\n        return;\n      }\n      const targets = game.user.targets;\n      if (targets.size !== 0) {\n        tokens.forEach(t1 => {\n          targets.forEach(t2 => {\n            canvas.specials.drawFacing(data, t1, t2);\n          })\n        })\n        return;\n      }\n      // Play effect on each token\n      tokens.forEach(t => {\n        data.position = {\n          x: t.position.x + t.w / 2,\n          y: t.position.y + t.h / 2\n        };\n        canvas.specials.playVideo(data);\n        game.socket.emit(\"module.${packageId}\", data);\n      })\n\n    `;\n  }\n\n  drawSpecialToward(effect, tok1, tok2) {\n    const origin = {\n      x: tok1.position.x + tok1.w / 2,\n      y: tok1.position.y + tok1.h / 2,\n    };\n    const effectData = foundry.utils.mergeObject(effect, {\n      position: {\n        x: origin.x,\n        y: origin.y,\n      },\n    });\n    const target = {\n      x: tok2.position.x + tok2.w / 2,\n      y: tok2.position.y + tok2.h / 2,\n    };\n    // Compute angle\n    const ray = new Ray(origin, target);\n    effectData.distance = ray.distance;\n    effectData.rotation = ray.angle;\n    // Play to other clients\n    game.socket.emit(`module.${packageId}`, effectData);\n    // Play effect locally\n    return this.playVideo(effectData);\n  }\n\n  drawFacing(effect, tok1, tok2) {\n    const origin = {\n      x: tok1.position.x + tok1.w / 2,\n      y: tok1.position.y + tok1.h / 2,\n    };\n    const effectData = foundry.utils.mergeObject(effect, {\n      position: {\n        x: origin.x,\n        y: origin.y,\n      },\n    });\n    const target = {\n      x: tok2.position.x + tok2.w / 2,\n      y: tok2.position.y + tok2.h / 2,\n    };\n    // Compute angle\n    const ray = new Ray(origin, target);\n    effectData.rotation = ray.angle;\n    // Play to other clients\n    game.socket.emit(`module.${packageId}`, effectData);\n    // Play effect locally\n    return this.playVideo(effectData);\n  }\n\n  /**\n   * Draw a special effect.\n   * @param {PIXI.InteractionEvent} event         The event that triggered the drawing of the special effect\n   * @param {PIXI.Point}            [savedOrigin] The point that was originally clicked on\n   * @returns {Promise<void>}\n   * @remarks\n   * The savedOrigin parameter is required for regular click events because for some reason, the origin has been removed\n   * from the event's data by the time the event is handled.\n   * TODO: investigate further.\n   */\n  _drawSpecial(event, savedOrigin) {\n    event.stopPropagation();\n\n    const windows = Object.values(ui.windows);\n    const effectConfig = windows.find((w) => w.id == \"specials-config\");\n    if (!effectConfig) return;\n    const active = effectConfig.element.find(\".special-effects.active\");\n    if (active.length == 0) return;\n\n    const id = active[0].dataset.effectId;\n    const folder = active[0].closest(\".folder\").dataset.folderId;\n    const effect = CONFIG.fxmaster.userSpecials[folder].effects[id];\n\n    const effectData = foundry.utils.deepClone(effect);\n    const { x, y } = event.interactionData.origin ?? savedOrigin;\n    const data = {\n      ...effectData,\n      position: { x, y },\n      rotation: event.interactionData.rotation,\n      elevation: this.#elevation,\n    };\n\n    if (!event.interactionData.destination) {\n      game.socket.emit(`module.${packageId}`, data);\n      return this.playVideo(data);\n    }\n\n    // Handling different casting modes\n    const actionToggle = effectConfig.element.find(\".action-toggle.active a\");\n    const mode = actionToggle[0].dataset.action;\n    const ray = new Ray(event.interactionData.origin, event.interactionData.destination);\n    switch (mode) {\n      case \"cast-throw\":\n        data.distance = ray.distance;\n        data.speed = \"auto\";\n        break;\n      case \"cast-extend\":\n        data.width = ray.distance || data.width;\n        data.speed = 0;\n        break;\n      case \"cast-expand\":\n        data.width = ray.distance || data.width;\n        data.keepAspect = true;\n        data.speed = 0;\n        break;\n      case \"cast-rotate\":\n        data.rotationSpeed = ray.distance / canvas.grid[game.release.generation >= 12 ? \"sizeX\" : \"w\"];\n        data.speed = 0;\n        break;\n      case \"cast-static\":\n        break;\n    }\n\n    game.socket.emit(`module.${packageId}`, data);\n    return this.playVideo(data);\n  }\n\n  /** @override */\n  _onDragLeftDrop(event) {\n    const u = {\n      x: event.interactionData.destination.x - event.interactionData.origin.x,\n      y: event.interactionData.destination.y - event.interactionData.origin.y,\n    };\n    const cos = u.x / Math.hypot(u.x, u.y);\n    event.interactionData.rotation = u.y > 0 ? Math.acos(cos) : -Math.acos(cos);\n    this._drawSpecial(event);\n    this.ruler.clear();\n  }\n\n  /** @override */\n  _onDragLeftStart() {\n    this.windowVisible = this._isWindowVisible();\n    if (!this.windowVisible) return;\n    this._dragging = true;\n  }\n\n  /** @override */\n  _onDragLeftMove(event) {\n    if (!this.windowVisible) return;\n    const ray = new Ray(event.interactionData.origin, event.interactionData.destination);\n    this.ruler.clear();\n    this.ruler\n      .lineStyle(3, 0xaa0033, 0.6)\n      .drawCircle(ray.A.x, ray.A.y, 2)\n      .moveTo(ray.A.x, ray.A.y)\n      .lineTo(ray.B.x, ray.B.y)\n      .drawCircle(ray.B.x, ray.B.y, 2);\n  }\n\n  _isWindowVisible() {\n    const windows = Object.values(ui.windows);\n    const effectConfig = windows.find((w) => w.id == \"specials-config\");\n    if (!effectConfig) return false;\n    return true;\n  }\n\n  /** @override */\n  _onClickLeft(event) {\n    this._dragging = false;\n    const origin = event.interactionData.origin;\n    setTimeout(() => {\n      if (!this._dragging) {\n        event.interactionData.rotation = 0;\n        event.interactionData.destination = undefined;\n        this._drawSpecial(event, origin);\n      }\n      this._dragging = false;\n    }, 400);\n  }\n\n  get #elevation() {\n    const effectConfig = Object.values(ui.windows).find((w) => w.id == \"specials-config\");\n    const elevationString = effectConfig?.element.find(\"input[name='elevation']\").val();\n    const elevation = Number.parseFloat(elevationString);\n    if (Number.isNaN(elevation) || !Number.isFinite(elevation)) return 1;\n    return elevation;\n  }\n}\n","/**\n * An abstract FormApplication that handles functionality common to multiple FXMaster forms.\n * In particular, it provides the following functionality:\n * * Handling of collapsible elements\n * * Making slider changes for range inputs update the accompanying text box immediately\n * * Handling the disabled state of the submission button\n *\n * @extends FormApplication\n * @abstract\n * @interface\n *\n * @param {Object} object                     Some object which is the target data structure to be be updated by the form.\n * @param {FormApplicationOptions} [options]  Additional options which modify the rendering of the sheet.\n */\nexport class FXMasterBaseForm extends FormApplication {\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html\n      .find(\".fxmaster-groups-list__collapse\")\n      .click((event) =>\n        this._onClickCollapse(\n          event,\n          \"fxmaster-groups-list__item\",\n          \"fxmaster-groups-list__collapsible\",\n          \"fxmaster-groups-list__collapse-icon\",\n        ),\n      );\n    html\n      .find(\".fxmaster-list__collapse\")\n      .click((event) =>\n        this._onClickCollapse(\n          event,\n          \"fxmaster-list__item\",\n          \"fxmaster-list__collapsible\",\n          \"fxmaster-list__collapse-icon\",\n        ),\n      );\n    html.find(\".fxmaster-range-input\").on(\"input\", this._onChangeRange.bind(this));\n  }\n\n  /**\n   * Handle toggling a a collapsible. To collapse the collapsible, the class `${collapsibleClass}--collapsed` is\n   * added to it.\n   *\n   * @param {JQuery.ClickEvent} event            The originating click event\n   * @param {string}            parentClass      The CSS class for selecting the parent that contains both the collapse\n   *                                             \"button\" and the collapsible\n   * @param {string}            collapsibleClass The CSS class for selecting the collapsible inside the parent\n   * @param {string}            [iconClass]      An optional CSS class to select an up/down arrow icon to be toggled\n   * @private\n   */\n  _onClickCollapse(event, parentClass, collapsibleClass, iconClass) {\n    const parentItem = $(event.currentTarget).parents(`.${parentClass}`);\n    const collapsible = parentItem.children(`.${collapsibleClass}`);\n    const icon = iconClass !== undefined ? parentItem.find(`.${iconClass}`) : undefined;\n    this._collapse(collapsible, icon, `${collapsibleClass}--collapsed`);\n  }\n\n  /**\n   * Toggle the collapsed state of an element.\n   * @param {JQuery}      collapsible                 The element to collapse\n   * @param {JQuery|null} [icon]                      An up/down arrow icon to be toggled\n   * @param {string}      [collapsedClass=\"collaped\"] The CSS clas to use to mark the element as collapsed\n   * @param {number}      [speed=250]                 The speed for sliding the element in and out, in milliseconds\n   * @private\n   */\n  _collapse(collapsible, icon, collapsedClass = \"collapsed\", speed = 250) {\n    const shouldCollapse = !collapsible.hasClass(collapsedClass);\n\n    if (shouldCollapse) {\n      collapsible.slideUp(speed, () => {\n        collapsible.addClass(collapsedClass);\n        icon?.removeClass(\"fa-angle-down\").addClass(\"fa-angle-up\");\n      });\n    } else {\n      collapsible.slideDown(speed, () => {\n        collapsible.removeClass(collapsedClass);\n        icon?.removeClass(\"fa-angle-up\").addClass(\"fa-angle-down\");\n      });\n    }\n  }\n\n  /** @override */\n  async _onChangeInput(...args) {\n    this.element.find('button[type=\"submit\"]').prop(\"disabled\", false);\n    return super._onChangeInput(...args);\n  }\n\n  /** @override */\n  async _onSubmit(...args) {\n    this.element.find('button[type=\"submit\"]').prop(\"disabled\", true);\n    return super._onSubmit(...args);\n  }\n}\n","import \"../../../css/particle-effects-config.css\";\n\nimport { packageId } from \"../../constants.js\";\nimport { FXMasterBaseForm } from \"../../base-form.js\";\nimport { resetFlag } from \"../../utils.js\";\n\nexport class ParticleEffectsManagement extends FXMasterBaseForm {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"form\", \"fxmaster\", \"particle-effects\", \"sidebar-popout\"],\n      closeOnSubmit: false,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 300,\n      height: \"auto\",\n      template: \"modules/fxmaster/templates/particle-effects-management.hbs\",\n      id: \"effects-config\",\n      title: game.i18n.localize(\"FXMASTER.ParticleEffectsManagementTitle\"),\n    });\n  }\n\n  /** @override */\n  getData() {\n    const currentParticleEffects = canvas.scene?.getFlag(packageId, \"effects\") ?? {};\n\n    const activeParticleEffects = Object.fromEntries(\n      Object.values(currentParticleEffects).map((effect) => [effect.type, effect.options]),\n    );\n\n    /** @type {import(\"../particle-effects-db.js\").ParticleEffects} */\n    const { particleEffects } = CONFIG.fxmaster;\n\n    /** @type {Record<string, {label: string, expanded: boolean, effects: import(\"../particle-effects-db.js\").ParticleEffects}>}} */\n    const initialParticleEffectGroups = {};\n\n    const particleEffectGroups = Object.entries(particleEffects)\n      .sort(([, clsA], [, clsB]) => clsA.group.localeCompare(clsB.group) || clsA.label.localeCompare(clsB.label))\n      .reduce((groups, [type, cls]) => {\n        const group = cls.group;\n        return {\n          ...groups,\n          [group]: {\n            label: `FXMASTER.ParticleEffectsGroup${group.titleCase()}`,\n            expanded: groups[group]?.expanded || Object.keys(activeParticleEffects).includes(type),\n            effects: {\n              ...groups[group]?.effects,\n              [type]: cls,\n            },\n          },\n        };\n      }, initialParticleEffectGroups);\n\n    return {\n      particleEffectGroups,\n      effects: particleEffects,\n      activeEffects: activeParticleEffects,\n    };\n  }\n\n  /** @override */\n  async _updateObject(_, formData) {\n    /** @type {import(\"../particle-effects-db.js\").ParticleEffects} */\n    const { particleEffects } = CONFIG.fxmaster;\n    const effects = Object.fromEntries(\n      Object.entries(particleEffects)\n        .filter(([type]) => !!formData[type])\n        .map(([type, particleEffectCls]) => {\n          const label = particleEffectCls.label;\n\n          const options = Object.fromEntries(\n            Object.entries(particleEffectCls.parameters).map(([key, parameter]) => {\n              const optionValue =\n                parameter.type === \"color\"\n                  ? { apply: formData[`${label}_${key}_apply`], value: formData[`${label}_${key}`] }\n                  : formData[`${label}_${key}`];\n\n              return [key, optionValue];\n            }),\n          );\n\n          const particleEffect = {\n            type,\n            options,\n          };\n          return [`core_${type}`, particleEffect];\n        }),\n    );\n    resetFlag(canvas.scene, \"effects\", effects);\n  }\n}\n","import \"../../../css/filters-config.css\";\n\nimport { packageId } from \"../../constants.js\";\nimport { FXMasterBaseForm } from \"../../base-form.js\";\nimport { resetFlag } from \"../../utils.js\";\n\nexport class FilterEffectsManagementConfig extends FXMasterBaseForm {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"form\", \"fxmaster\", \"filters\", \"sidebar-popout\"],\n      closeOnSubmit: false,\n      submitOnChange: false,\n      submitOnClose: false,\n      popOut: true,\n      editable: game.user.isGM,\n      width: 300,\n      height: \"auto\",\n      template: \"modules/fxmaster/templates/filter-effects-management.hbs\",\n      id: \"filters-config\",\n      title: game.i18n.localize(\"FXMASTER.FilterEffectsManagementTitle\"),\n    });\n  }\n\n  /** @override */\n  getData() {\n    const currentFilters = canvas.scene?.getFlag(packageId, \"filters\") ?? {};\n    const activeFilters = Object.fromEntries(\n      Object.values(currentFilters).map((filter) => [filter.type, filter.options]),\n    );\n\n    const filters = Object.fromEntries(\n      Object.entries(CONFIG.fxmaster.filterEffects).sort(([, clsA], [, clsB]) => clsA.label.localeCompare(clsB.label)),\n    );\n\n    return {\n      filters,\n      activeFilters,\n    };\n  }\n\n  /** @override */\n  async _updateObject(_, formData) {\n    if (!canvas.scene) {\n      return;\n    }\n    const filtersDB = CONFIG.fxmaster.filterEffects;\n\n    const filters = Object.fromEntries(\n      Object.entries(filtersDB)\n        .filter(([type]) => !!formData[type])\n        .map(([filterName, filterCls]) => {\n          const label = filterCls.label;\n\n          const options = Object.fromEntries(\n            Object.entries(filterCls.parameters).map(([key, parameter]) => {\n              const optionValue =\n                parameter.type === \"color\"\n                  ? { apply: formData[`${label}_${key}_apply`], value: formData[`${label}_${key}`] }\n                  : formData[`${label}_${key}`];\n\n              return [key, optionValue];\n            }),\n          );\n\n          const filter = {\n            type: filterName,\n            options,\n          };\n          return [`core_${filterName}`, filter];\n        }),\n    );\n\n    resetFlag(canvas.scene, \"filters\", filters);\n  }\n}\n","import { logger } from \"./logger.js\";\nimport { packageId } from \"./constants.js\";\n\nconst defaultMacroImg = \"icons/svg/windmill.svg\";\n\nexport async function saveParticleAndFilterEffectsAsMacro() {\n  const particleEffectFlags = canvas.scene?.getFlag(packageId, \"effects\") ?? {};\n  const particleEffects = Object.values(particleEffectFlags);\n\n  const filterFlags = canvas.scene?.getFlag(packageId, \"filters\") ?? {};\n  const filterEffects = Object.values(filterFlags);\n\n  const { name, img } = getMacroNameAndImg(particleEffects, filterEffects);\n\n  const commands = [];\n  if (particleEffects.length > 0) {\n    commands.push(`Hooks.call('${packageId}.updateParticleEffects', ${JSON.stringify(particleEffects)});`);\n  }\n  if (filterEffects.length > 0) {\n    commands.push(`FXMASTER.filters.setFilters(${JSON.stringify(filterEffects)});`);\n  }\n  const command = commands.join(\"\\n\");\n\n  await Macro.create({ type: \"script\", name, command, img });\n  ui.notifications.info(`Macro '${name}' has been saved in the macro directory`);\n}\n\nfunction getMacroNameAndImg(particleEffects, filterEffects) {\n  const particleEffectLabelsAndIcons = particleEffects.flatMap(({ type }) => {\n    const particleEffectCls = CONFIG.fxmaster.particleEffects[type];\n    if (!particleEffectCls) {\n      logger.warn(`Encountered unknown particle effect type '${type}' during macro creation, skipping it.`);\n      return [];\n    }\n    return [{ label: game.i18n.localize(particleEffectCls.label), icon: particleEffectCls.icon }];\n  });\n  const filterLabels = filterEffects.flatMap(({ type }) => {\n    const filterEffectCls = CONFIG.fxmaster.filterEffects[type];\n    if (!filterEffectCls) {\n      logger.warn(`Encountered unknown filter effect type '${type}' during macro creation, skipping it.`);\n      return [];\n    }\n    return [{ label: game.i18n.localize(filterEffectCls.label) }];\n  });\n\n  if (filterLabels.length === 0) {\n    return particleEffectLabelsAndIcons.length === 1\n      ? {\n          name: `Particle Effect: ${particleEffectLabelsAndIcons[0].label}`,\n          img: particleEffectLabelsAndIcons[0].icon,\n        }\n      : { name: \"Particle Effects\", img: defaultMacroImg };\n  } else if (particleEffectLabelsAndIcons.length === 0) {\n    return filterLabels.length === 1\n      ? {\n          name: `Filter Effect: ${filterLabels[0].label}`,\n          img: defaultMacroImg,\n        }\n      : { name: \"Filter Effects\", img: defaultMacroImg };\n  } else {\n    return { name: `Particle & Filter Effects`, img: defaultMacroImg };\n  }\n}\n","import { packageId } from \"./constants.js\";\nimport { FilterManager } from \"./filter-effects/filter-manager.js\";\nimport { ParticleEffectsManagement } from \"./particle-effects/applications/particle-effects-management.js\";\nimport { SpecialEffectsManagement } from \"./special-effects/applications/special-effects-management.js\";\nimport { FilterEffectsManagementConfig } from \"./filter-effects/applications/filter-effects-management.js\";\nimport { saveParticleAndFilterEffectsAsMacro } from \"./macro.js\";\n\nexport function registerGetSceneControlButtonsHook() {\n  Hooks.on(\"getSceneControlButtons\", getSceneControlButtons);\n}\n\nfunction getSceneControlButtons(controls) {\n  if (canvas == null) {\n    return;\n  }\n  controls.push({\n    name: \"effects\",\n    title: \"CONTROLS.Effects\",\n    icon: \"fas fa-wand-magic-sparkles\",\n    layer: \"specials\",\n    visible: game.user.role >= game.settings.get(packageId, \"permission-create\"),\n    tools: [\n      {\n        name: \"specials\",\n        title: \"CONTROLS.SpecialFX\",\n        icon: \"fas fa-hat-wizard\",\n        onClick: () => {\n          new SpecialEffectsManagement().render(true);\n        },\n        button: true,\n      },\n      {\n        name: \"particle-effects\",\n        title: \"CONTROLS.ParticleEffects\",\n        icon: \"fas fa-cloud-rain\",\n        onClick: () => {\n          new ParticleEffectsManagement().render(true);\n        },\n        visible: game.user.isGM,\n        button: true,\n      },\n      {\n        name: \"invertmask\",\n        title: \"CONTROLS.InvertMask\",\n        icon: \"fas fa-mask\",\n        onClick: () => {\n          if (canvas.scene) {\n            const invert = canvas.scene.getFlag(packageId, \"invert\") ?? false;\n            canvas.scene.setFlag(packageId, \"invert\", !invert);\n          }\n        },\n        visible: game.user.isGM,\n        active: canvas.scene?.getFlag(packageId, \"invert\") ?? false,\n        toggle: true,\n      },\n      {\n        name: \"filters\",\n        title: \"CONTROLS.Filters\",\n        icon: \"fas fa-filter\",\n        onClick: () => {\n          new FilterEffectsManagementConfig().render(true);\n        },\n        visible: game.user.isGM,\n        button: true,\n      },\n      {\n        name: \"save\",\n        title: \"CONTROLS.SaveMacro\",\n        icon: \"fas fa-floppy-disk\",\n        onClick: saveParticleAndFilterEffectsAsMacro,\n        visible: game.user.isGM,\n        button: true,\n      },\n      {\n        name: \"clearfx\",\n        title: \"CONTROLS.ClearFX\",\n        icon: \"fas fa-trash\",\n        onClick: () => {\n          Dialog.confirm({\n            title: game.i18n.localize(\"FXMASTER.ClearParticleAndFilterEffectsTitle\"),\n            content: game.i18n.localize(\"FXMASTER.ClearParticleAndFilterEffectsContent\"),\n            yes: () => {\n              if (canvas.scene) {\n                FilterManager.instance.removeAll();\n                canvas.scene.unsetFlag(packageId, \"effects\");\n              }\n            },\n            defaultYes: true,\n          });\n        },\n        visible: game.user.isGM,\n        button: true,\n      },\n    ],\n    activeTool: \"effect\",\n  });\n}\n","import { isEnabled, registerSettings } from \"./settings.js\";\nimport { registerHooks } from \"./hooks.js\";\nimport { FXMASTER } from \"./config.js\";\nimport { ParticleEffectsLayer } from \"./particle-effects/particle-effects-layer.js\";\nimport { registeDrawingsMaskFunctionality } from \"./particle-effects/drawings-mask.js\";\nimport { FilterManager } from \"./filter-effects/filter-manager.js\";\nimport { isOnTargetMigration, migrate, migration } from \"./migration/migration.js\";\nimport { SpecialEffectsManagement } from \"./special-effects/applications/special-effects-management.js\";\nimport { SpecialEffectsLayer } from \"./special-effects/special-effects-layer.js\";\nimport { registerHandlebarsHelpers } from \"./handlebars-helpers.js\";\nimport { registerGetSceneControlButtonsHook } from \"./controls.js\";\nimport { format } from \"./logger.js\";\n\nimport \"../css/common.css\";\n\nwindow.FXMASTER = {\n  filters: FilterManager.instance,\n  migration,\n};\n\nfunction registerLayers() {\n  CONFIG.Canvas.layers.fxmaster = { layerClass: ParticleEffectsLayer, group: \"primary\" };\n  CONFIG.Canvas.layers.specials = { layerClass: SpecialEffectsLayer, group: \"interface\" };\n}\n\nfunction parseSpecialEffects() {\n  const effectData = game.settings.get(\"fxmaster\", \"specialEffects\");\n  const specialEffects = foundry.utils.deepClone(CONFIG.fxmaster.specialEffects);\n  effectData.reduce((acc, cur) => {\n    if (!cur.folder) cur.folder = \"Custom\";\n    const normalizedFolder = cur.folder.toLowerCase().replace(/ /g, \"\");\n    if (!acc[normalizedFolder]) acc[normalizedFolder] = { label: cur.folder, effects: [] };\n    acc[normalizedFolder].effects.push(cur);\n    return acc;\n  }, specialEffects);\n  Object.keys(specialEffects).forEach((k) => {\n    specialEffects[k].effects.sort((a, b) => (\"\" + a.label).localeCompare(b.label));\n  });\n  CONFIG.fxmaster.userSpecials = specialEffects;\n}\n\nHooks.once(\"init\", function () {\n  registerSettings();\n  registerHooks();\n  registerLayers();\n  registerHandlebarsHelpers();\n\n  if (!CONFIG.fxmaster) CONFIG.fxmaster = {};\n\n  const configDeprecations = {\n    weather: \"particleEffects\",\n    filters: \"filterEffects\",\n    specials: \"specialEffects\",\n  };\n\n  const getConfigDeprecationMessage = (old, replacement) =>\n    format(`CONFIG#fxmaster#${old} is deprecated in favor of CONFIG#fxmaster#${replacement}'`);\n\n  for (const [old, replacement] of Object.entries(configDeprecations)) {\n    if (CONFIG.fxmaster[old]) {\n      CONFIG.fxmaster[replacement] = CONFIG.fxmaster[old];\n      delete CONFIG.fxmaster[old];\n      const msg = getConfigDeprecationMessage(old, replacement);\n      foundry.utils.logCompatibilityWarning(msg, {\n        mod: foundry.CONST.COMPATIBILITY_MODES.WARNING,\n        since: \"FXMaster v3.0.0\",\n        until: \"FXMaster v4.0.0\",\n        stack: false,\n      });\n    }\n  }\n\n  foundry.utils.mergeObject(CONFIG.fxmaster, {\n    filterEffects: FXMASTER.filterEffects,\n    particleEffects: FXMASTER.particleEffects,\n    specialEffects: FXMASTER.specialEffects,\n  });\n\n  for (const [old, replacement] of Object.entries(configDeprecations)) {\n    Object.defineProperty(CONFIG.fxmaster, old, {\n      get: () => {\n        const msg = getConfigDeprecationMessage(old, replacement);\n        foundry.utils.logCompatibilityWarning(msg, {\n          mod: foundry.CONST.COMPATIBILITY_MODES.WARNING,\n          since: \"FXMaster v3.0.0\",\n          until: \"FXMaster v4.0.0\",\n          stack: false,\n        });\n        return CONFIG.fxmaster[replacement];\n      },\n    });\n  }\n\n  const weatherEffects = Object.fromEntries(\n    Object.entries(CONFIG.fxmaster.particleEffects).map(([id, effectClass]) => [\n      `fxmaster.${id}`,\n      {\n        id: `fxmaster.${id}`,\n        label: `${effectClass.label}WeatherEffectsConfig`,\n        effects: [{ id: `${id}Particles`, effectClass }],\n      },\n    ]),\n  );\n\n  CONFIG.originalWeatherEffects = CONFIG.weatherEffects;\n  CONFIG.weatherEffects = { ...CONFIG.weatherEffects, ...weatherEffects };\n});\n\nHooks.once(\"ready\", () => {\n  migrate();\n});\n\nHooks.on(\"canvasInit\", () => {\n  if (isEnabled()) {\n    parseSpecialEffects();\n  }\n});\n\nHooks.on(\"updateScene\", (scene, data) => {\n  if (!isEnabled() || !isOnTargetMigration() || scene !== canvas.scene) {\n    return;\n  }\n  if (\n    foundry.utils.hasProperty(data, \"flags.fxmaster.effects\") ||\n    foundry.utils.hasProperty(data, \"flags.fxmaster.-=effects\")\n  ) {\n    canvas.fxmaster.drawParticleEffects({ soft: true });\n  }\n});\n\nHooks.on(\"dropCanvasData\", async (canvas, data) => {\n  if (!(canvas.activeLayer instanceof SpecialEffectsLayer) || !canvas.scene) return;\n  if (data.type !== \"SpecialEffect\") return;\n\n  await new Promise((resolve) => {\n    const vid = document.createElement(\"video\");\n    vid.addEventListener(\n      \"loadedmetadata\",\n      () => {\n        data.width = vid.videoWidth * data.scale.x;\n        data.height = vid.videoHeight * data.scale.y;\n        resolve();\n      },\n      false,\n    );\n    vid.src = data.file;\n  });\n\n  const tileData = {\n    alpha: 1,\n    flags: {},\n    height: data.height,\n    hidden: false,\n    texture: { src: data.file },\n    locked: false,\n    occlusion: { mode: 1, alpha: 0 },\n    overHead: false,\n    rotation: 0,\n    tileSize: 100,\n    video: { loop: true, autoplay: true, volume: 0 },\n    width: data.width,\n    x: data.x - data.anchor.x * data.width,\n    y: data.y - data.anchor.y * data.height,\n    z: 100,\n  };\n  ui.notifications.info(`A new Tile was created for effect ${data.label}`);\n  canvas.scene.createEmbeddedDocuments(\"Tile\", [tileData]).then(() => {});\n});\n\nHooks.on(\"hotbarDrop\", (hotbar, data) => {\n  if (data.type !== \"SpecialEffect\") return;\n  const macroCommand = SpecialEffectsLayer._createMacro(data);\n  data.type = \"Macro\";\n  data.data = {\n    command: macroCommand,\n    name: data.label,\n    type: \"script\",\n    author: game.user.id,\n  };\n});\n\nHooks.on(\"updateSetting\", (setting) => {\n  if (setting.key === \"fxmaster.specialEffects\") {\n    parseSpecialEffects();\n    Object.values(ui.windows).forEach((w) => {\n      if (w instanceof SpecialEffectsManagement) {\n        w.render(false);\n      }\n    });\n  }\n});\n\nHooks.on(\"renderDrawingHUD\", (hud, html) => {\n  const maskToggle = document.createElement(\"div\");\n  maskToggle.classList.add(\"control-icon\");\n  if (hud.object.document.flags?.fxmaster?.masking) {\n    maskToggle.classList.add(\"active\");\n  }\n  maskToggle.setAttribute(\"title\", game.i18n.localize(\"FXMASTER.MaskParticleEffects\"));\n  maskToggle.dataset.action = \"mask\";\n  maskToggle.innerHTML = `<i class=\"fas fa-cloud\"></i>`;\n  html.find(\".col.left\").append(maskToggle);\n\n  html.find(\".control-icon[data-action='mask']\").on(\"click\", (event) => {\n    event.preventDefault();\n\n    const isMask = hud.object.document.flags?.fxmaster?.masking;\n    const updates = hud.layer.controlled.map((object) => {\n      return { _id: object.id, \"flags.fxmaster.masking\": !isMask };\n    });\n\n    event.currentTarget.classList.toggle(\"active\", !isMask);\n    canvas.scene.updateEmbeddedDocuments(hud.object.document.documentName, updates);\n  });\n});\n\nregisterGetSceneControlButtonsHook();\nregisteDrawingsMaskFunctionality();\n","export function registerHandlebarsHelpers() {\n  Handlebars.registerHelper(\"fxmasterParameter\", (effectCls, parameterConfig, parameterName, options = {}) => {\n    const _default = options[parameterName] ?? effectCls.default[parameterName];\n\n    switch (parameterConfig.type) {\n      case \"color\":\n        return `\n              <input type=\"checkbox\" name=\"${effectCls.label}_${parameterName}_apply\" ${\n          _default.apply ? \"checked\" : \"\"\n        }/>\n              <input type=\"color\" name=\"${effectCls.label}_${parameterName}\" value=\"${_default.value}\">\n              `;\n      case \"range\":\n        return `\n              <input class=\"fxmaster-range-input\" type=\"range\" step=\"${parameterConfig.step}\" min=\"${parameterConfig.min}\" max=\"${parameterConfig.max}\" name=\"${effectCls.label}_${parameterName}\" value=\"${_default}\">\n              <span class=\"range-value\">${_default}</span>\n              `;\n      case \"number\":\n        return `\n              <input class=\"fxmaster-text-input\" type=\"text\" data-dtype=\"Number\" name=\"${effectCls.label}_${parameterName}\" value=\"${_default}\">\n              `;\n      case \"multi-select\":\n        return `<select class=\"fxmaster-multi-select\" multiple name=\"${\n          effectCls.label\n        }_${parameterName}\">${Object.entries(parameterConfig.options).map(\n          ([key, name]) =>\n            `<option class=\"fxmaster-multi-select__option\" value=\"${key}\"${\n              _default.includes(key) ? \" selected\" : \"\"\n            }>${game.i18n.localize(name)}</option>`,\n        )}</select>`;\n    }\n    return \"\";\n  });\n}\n"],"names":["packageId","resetFlag","document","key","value","Array","isArray","oldFlags","getFlag","Object","keys","forEach","k","setFlag","roundToDecimals","number","decimals","Number","Math","round","loggingContext","loggingSeparator","getLoggingFunction","type","log","console","data","format","msg","logger","freeze","debug","info","warn","error","async","migrateWorldCollection","collection","migrateDocument","isError","documentName","name","id","e","migrateCompendiumCollection","pack","metadata","wasLocked","locked","configure","documents","getDocuments","migrateWorldCollections","collections","migrationConfiguration","migrateCompendiumCollections","packs","migrateNonWorldPacks","package","migrate","game","migrate2","migrationConfiguration2","Scene","migrateScene","scene","particleEffects","length","newParticleEffects","fromEntries","entries","map","effect","particleEffectClass","CONFIG","fxmaster","options","convertOptionsToV2","migrate3","migrationConfiguration3","Macro","migrateMacro","macro","command","img","newCommand","replaceAll","newImg","update","undefined","unsetFlag","migrate4","migrationConfiguration4","originalWeatherEffectKeys","originalWeatherEffects","filter","includes","weather","targetServerMigration","isOnTargetWorldMigration","settings","get","migrate1","effects","i","scale","x","y","set","targetClientMigration","migrateClient","migration","ui","notifications","permanent","localize","user","isGM","migrateWorld","isOnTargetMigration","isOnTargetClientMigration","executeWhenWorldIsMigratedToLatest","callback","worldMigrationCallbacks","push","onWorldMigrated","shift","client","world","config","helpers","isEnabled","registerHooks","Hooks","on","onSwitchParticleEffects","onUpdateParticleEffects","deprecations","hook","onDeprecated","args","deprecation","replacedBy","foundry","utils","logCompatibilityWarning","mod","CONST","COMPATIBILITY_MODES","WARNING","since","until","stack","parameters","canvas","currentEffects","omit","object","_omitted","rest","parametersArray","randomID","updateWeather","switchWeather","FXMasterFilterEffectMixin","Base","constructor","super","this","enabled","applyOptions","neutral","static","parameterName","parameterConfig","default","optionContext","play","_options","stop","step","FadingFilterMixin","currentAnimation","initialized","animateOptions","duration","CanvasAnimation","terminateAnimation","toAnimate","toSet","partition","skipInitialAnimation","anim","parent","attribute","to","animate","finally","skipFading","otherOptions","completed","BloomFilter","PIXI","filters","AdvancedBloomFilter","blur","label","max","min","bloomScale","threshold","noise","ColorFilter","AdjustmentFilter","color","apply","saturation","contrast","brightness","gamma","red","green","blue","r","g","b","Color","from","FogFilter","Filter","uniforms","time","dimensions","Float32Array","lastTick","speed","density","size","app","ticker","lastTime","delta","filterManager","input","output","clear","currentState","filterMatrix","Matrix","copyFrom","target","worldTransform","invert","easeFunctions","Linear","easeLinear","InSine","easeInSine","cos","PI","OutSine","easeOutSine","sin","InOutSine","easeInOutSine","InBack","easeInBack","c1","OutBack","easeOutBack","pow","InOutBack","easeInOutBack","c2","InCubic","easeInCubic","OutCubic","easeOutCubic","InOutCubic","easeInOutCubic","InCirc","easeInCirc","sqrt","OutCirc","easeOutCirc","InOutCirc","easeInOutCirc","LightningFilter","nextLigthningTime","frequency","spark_duration","random","attributes","context","easing","OldFilmFilter","vignetting","vignettingAlpha","sepia","seed","PredatorFilter","CRTFilter","curvature","period","lineWidth","UnderwaterFilter","DisplacementFilter","displacemenntMap","Sprite","displacementMap","texture","baseTexture","wrapMode","WRAP_MODES","REPEAT","anchor","width","height","primary","addChild","removeChild","maskSprite","filterEffects","bloom","fog","lightning","oldfilm","predator","underwater","FXMasterParticleEffect","ParticleEffect","group","icon","direction","defaultDirection","lifetime","alpha","tint","mergeWithDefaults","mergeObject","insertKeys","inplace","defaultConfig","Error","rotationBehavior","behaviors","find","behavior","minStart","maxStart","rotationStaticBehavior","applyOptionsToConfig","_applyScaleToConfig","_applySpeedToConfig","_applyDirectionToConfig","_applyLifetimeToConfig","_applyTintToConfig","_applyAlphaToConfig","_applyFactorToValueList","valueList","factor","list","valueStep","_applyFactorToRandNumber","randNumber","range","concat","prewarm","emitters","emitter","autoUpdate","emit","maxLifetime","fadeOut","timeout","emitterPromises","Promise","resolve","emitterLifetime","playOnceAndDestroy","promises","all","setTimeout","then","destroy","bind","race","optionKey","optionValue","_convertScaleToV2","_convertSpeedToV2","_convertDensityToV2","speeds","flatMap","maximumSpeed","d","DefautlRectangleSpawnMixin","getParticleEmitters","maxParticles","deepClone","sceneRect","w","h","createEmitter","SpiderParticleEffect","performDeletions","minMult","framerate","loop","textures","fromRange","n","count","String","padStart","SPIDERS_CONFIG","withSteppedGradientColor","steps","getBehavior","reset","particles","ParticleUtils","createSteppedGradient","StarsParticleEffect","accel","minSpeed","maxSpeed","blendMode","STARS_CONFIG","AutumnLeavesParticleEffect","LEAF_CONFIG","BatsParticleEffect","BATS_CONFIG","BubblesParticleEffect","BUBBLES_CONFIG","CloudsParticleEffect","CLOUDS_CONFIG","offsetFactor","averageDiagonalTime","minLifetime","angle","toRadians","directionVector","CrowsParticleEffect","CROWS_CONFIG","parseSpriteSheetSync","_callback","parsedTextures","values","_batchIndex","_processFrames","_processAnimations","_parseComplete","FogParticleEffect","FOG_CONFIG","RatsParticleEffect","RATS_CONFIG","SnowstormParticleEffect","path","SNOWSTORM_CONFIG","FXMASTER","bats","birds","BirdsParticleEffect","animations","glide","flap","mixed","BIRDS_CONFIG","anims","_getAnimations","textureNumber","fill","deepFlatten","getAnim","animation","crows","eagles","EaglesParticleEffect","EAGLES_CONFIG","_textures","_initializeTextures","_textureCache","spriteSheetTexture","Texture","spriteSheetData","meta","frames","frame","rotated","trimmed","spriteSourceSize","sourceSize","spriteSheet","Spritesheet","call","rats","spiders","bubbles","embers","EmbersParticleEffect","EMBERS_CONFIG","stars","leaves","clouds","rain","RainParticleEffect","pos","RAIN_CONFIG","rainConfig","splashConfig","SPLASH_CONFIG","raintop","RainTopParticleEffect","_canvasPanHookId","RAIN_TOP_CONFIG","sceneRadius","sceneWidth","sceneHeight","moveSpeedList","averageSpeed","reduce","acc","cur","radius","innerRadius","affectRotation","updateOwnerPos","stage","pivot","sceneX","sceneY","_unregisterCanvasPanHook","_canvas","position","off","rainsimple","RainSimpleParticleEffect","snow","SnowParticleEffect","SNOW_CONFIG","snowstorm","specialEffects","file","author","ParticleEffectsLayer","FullCanvasObjectMixin","CanvasLayer","initializeInverseOcclusionFilter","mask","masks","sortableChildren","eventMode","occlusionFilter","WeatherOcclusionMaskFilter","create","occlusionTexture","depth","renderTexture","elevation","BLEND_MODES","NORMAL","filterArea","renderer","screen","layerOptions","Map","Infinity","weatherEffects","_draw","draw","_tearDown","destroyEffects","ec","drawParticleEffects","soft","zIndex","stopPromise","delete","flags","flagOptions","optionName","drawDrawingsMaskIfCurrentScene","drawDrawingsMask","msk","fxmasterDrawingsMask","createInvertedMask","LegacyGraphics","beginFill","drawShape","rect","endFill","drawings","placeables","drawing","beginHole","drawShapeToMask","endHole","createMask","MaskData","colorMask","COLOR_MASK_BITS","BLUE","shape","geometry","graphicsData","clone","Drawing","SHAPE_TYPES","ELLIPSE","center","POLYGON","points","p","bounds","drawPolygon","s","FilterManager","_ticker","container","environment","instance","activate","add","filterInfos","filterInfo","filtersToCreate","filtersToUpdate","filtersToDelete","deletePromises","removeFilterFromContainer","applyFilters","otherFilters","f","addFilter","removeFilter","removeAll","setFilters","filterInfoArray","hasProperty","SpecialEffectConfig","FormApplication","defaultOptions","classes","closeOnSubmit","submitOnChange","submitOnClose","popOut","editable","template","title","i18n","setDefault","getData","eases","folder","animationDelay","start","end","ease","preset","activateListeners","html","event","_onChangeRange","_updateObject","_","formData","fxs","newData","parseFloat","fx","SpecialEffectsManagement","Application","resizable","dragDrop","dragSelector","folders","userSpecials","click","currentTarget","closest","items","$","classList","remove","parentElement","render","hover","ev","folderId","dataset","effectId","findIndex","v","splice","c","children","_toggleFolder","hasClass","removeClass","addClass","_onDragStart","effectData","dataTransfer","setData","JSON","stringify","SpecialEffectMesh","SpriteMesh","SpecialEffectsLayer","InteractionLayer","videos","_dragging","ruler","windowVisible","socket","playVideo","Graphics","video","_configureProjectile","mesh","distance","deltaX","rotation","deltaY","animationDuration","animationName","_configureRotate","rotationSpeed","configureSpecialEffectMesh","normalizeRadians","keepAspect","aspectRatio","terminateMovementAnimation","terminateRotationtAnimation","playbackRate","createElement","preload","crossOrigin","src","onEnd","videoMeshes","_destroyed","oncanplay","videoWidth","videoHeight","onerror","onended","_createMacro","drawSpecialToward","tok1","tok2","origin","ray","Ray","drawFacing","_drawSpecial","savedOrigin","stopPropagation","effectConfig","windows","active","element","interactionData","destination","mode","action","grid","release","generation","_onDragLeftDrop","u","hypot","acos","_onDragLeftStart","_isWindowVisible","_onDragLeftMove","lineStyle","drawCircle","A","moveTo","lineTo","B","_onClickLeft","elevationString","val","isNaN","isFinite","FXMasterBaseForm","_onClickCollapse","parentClass","collapsibleClass","iconClass","parentItem","parents","collapsible","_collapse","collapsedClass","slideUp","slideDown","_onChangeInput","prop","_onSubmit","ParticleEffectsManagement","currentParticleEffects","activeParticleEffects","particleEffectGroups","sort","clsA","clsB","localeCompare","groups","cls","titleCase","expanded","activeEffects","particleEffectCls","parameter","FilterEffectsManagementConfig","currentFilters","activeFilters","filtersDB","filterName","filterCls","defaultMacroImg","saveParticleAndFilterEffectsAsMacro","particleEffectFlags","filterFlags","getMacroNameAndImg","particleEffectLabelsAndIcons","filterLabels","filterEffectCls","commands","join","getSceneControlButtons","controls","layer","visible","role","tools","onClick","button","toggle","Dialog","confirm","content","yes","defaultYes","activeTool","parseSpecialEffects","normalizedFolder","toLowerCase","replace","a","window","once","registerSettings","register","scope","Boolean","requiresReload","onChange","hint","USER_ROLES","ASSISTANT","choices","PLAYER","TRUSTED","GAMEMASTER","registerLayers","Canvas","layers","layerClass","specials","registerHandlebarsHelpers","Handlebars","registerHelper","effectCls","_default","configDeprecations","getConfigDeprecationMessage","old","replacement","defineProperty","effectClass","activeLayer","vid","addEventListener","tileData","hidden","occlusion","overHead","tileSize","autoplay","volume","z","createEmbeddedDocuments","hotbar","macroCommand","setting","hud","maskToggle","masking","setAttribute","innerHTML","append","preventDefault","isMask","updates","controlled","_id","updateEmbeddedDocuments","registerGetSceneControlButtonsHook","registeDrawingsMaskFunctionality","requestAnimationFrame"],"mappings":"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"}
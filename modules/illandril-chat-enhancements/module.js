const moduleMetadata = {"id":"illandril-chat-enhancements","version":"3.1.0","title":"Illandril's Chat Enhancements","bugs":"https://github.com/illandril/FoundryVTT-chat-enhancements/issues"};

const validationPattern=/^[a-z_][a-z0-9\-_]*[a-z0-9_]$/i,assertValidPrefixSection=a=>{if(!validationPattern.test(a))throw new Error("CSS prefixes must be at least two characters, start and end with a letter or \"_\", and contain only letters, numbers, \"_\", or \"-\"")};class CSSPrefix{#prefix;constructor(a){assertValidPrefixSection(a),this.#prefix=`${a}--`;}child(a){return assertValidPrefixSection(a),`${this.#prefix}${a}`}childPrefix(a){return assertValidPrefixSection(a),new CSSPrefix(this.child(a))}}

class Logger{#logName;#logColor;#logPrefix;#logStyle;#logLevel;constructor(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:"#4f0104";this.#logName=a,this.#logLevel=b,this.#logColor=c,this.#logPrefix=`%c${a}`,this.#logStyle=`background-color: ${c}; color: #fff; padding: 0.1em 0.5em;`;}child(a){let b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:this.#logColor;return new Logger(`${this.#logName} - ${a}`,this.#logLevel,b)}debug(){if(this.#logLevel.debug){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.debug(this.#logPrefix,this.#logStyle,...b);}}info(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.info(this.#logPrefix,this.#logStyle,...b);}warn(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.warn(this.#logPrefix,this.#logStyle,...b);}error(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.error(this.#logPrefix,this.#logStyle,...b);}}

const isChoicesArray=Array.isArray;let canRegister=!1;const pendingRegistrations=[];let pendingDebugRegistration;Hooks.once("init",()=>{canRegister=!0;for(const a of pendingRegistrations)a();pendingDebugRegistration?.();});class ModuleSettings{#namespace;#localize;constructor(a,b){this.#namespace=a,this.#localize=b;}registerMenu(a,b){const c={...b,name:`${this.#namespace}.setting.menu.${a}.name`,label:`${this.#namespace}.setting.menu.${a}.label`,hint:`${this.#namespace}.setting.menu.${a}.hint`},d=()=>{game.settings.registerMenu(this.#namespace,a,c);};return canRegister?d():pendingRegistrations.push(d),{id:`${this.#namespace}--menu--${a}`,title:`${this.#namespace}.setting.menu.${a}.title`,template:`modules/${this.#namespace}/templates/menu-${a}.html`}}#mapChoices(a,b){let c;return b&&(isChoicesArray(b)?c={choices:Object.fromEntries(b.map(b=>[b,this.#localize(`setting.${a}.choice.${b}`)]))}:c={choices:Object.fromEntries(Object.entries(b).map(a=>[a[0],"function"==typeof a[1]?a[1]():a[1]]))}),c}register(a,b,c){let{scope:i="world",hasHint:d,config:j=!0,requiresReload:k=!1,choices:e,callOnChangeOnInit:f,onChange:g,...h}=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};const l={set:b=>{game.settings.set(this.#namespace,a,b);},get:()=>game.settings.get(this.#namespace,a)},m=()=>{const m=this.#mapChoices(a,e);game.settings.register(this.#namespace,a,{name:this.#localize(`setting.${a}.label`),hint:d?this.#localize(`setting.${a}.hint`):void 0,config:"function"==typeof j?j():j,scope:i,type:b,default:c,requiresReload:k,onChange:g,...m,...h}),f&&g?.(l.get());};return canRegister?m():"debug"===a?pendingDebugRegistration=m:pendingRegistrations.push(m),l}registerKeybinding(a,b,c){let{hasHint:d,defaultKeybindings:e,precedence:g=foundry.CONST.KEYBINDING_PRECEDENCE.NORMAL,...f}=3<arguments.length&&arguments[3]!==void 0?arguments[3]:{};const h=()=>{game.keybindings.register(this.#namespace,a,{name:this.#localize(`hotkey.${a}.label`),hint:d?this.#localize(`hotkey.${a}.hint`):void 0,editable:e??[],onDown:b,onUp:c,precedence:g,...f});};canRegister?h():pendingRegistrations.push(h);}}

class ModuleSocket{#socketKey;constructor(a){this.#socketKey=`module.${a}`;}emit(a){if(!game.socket)throw new Error("emit was called before game.socket was initialized or after it was torn down");game.socket.emit(this.#socketKey,a);}on(a){if(!game.socket)throw new Error("on was called before game.socket was initialized or after it was torn down");game.socket.on(this.#socketKey,a);}}

class Template{#path;constructor(a,b){this.#path=`modules/${a}/templates/${b}`,Hooks.on("init",()=>{void getTemplate(this.#path);});}async render(a){return await renderTemplate(this.#path,a)}}

class ModuleUtils{#id;#logger;#settings;#cssPrefix;#socketInitialized=!1;constructor(a){let{id:b,title:c,version:d,bugs:e,color:f}=a;const g=this.localize.bind(this);this.localize=g,this.#id=b,this.#settings=new ModuleSettings(b,g);const h={debug:!1};this.#settings.register("debug",Boolean,!1,{scope:"client",hasHint:!0,callOnChangeOnInit:!0,onChange:a=>{h.debug=a;}}),this.#logger=new Logger(`${c} v${d}`,h,f),e?this.logger.info(`Started. To report bugs, go to: ${e}`):this.logger.info("Started");}get id(){return this.#id}get logger(){return this.#logger}get cssPrefix(){return this.#cssPrefix||(this.#cssPrefix=new CSSPrefix(this.#id)),this.#cssPrefix}get settings(){return this.#settings}localize(a,b){let c=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];const d=`${this.#id}.${a}`;return !0!==c||game.i18n.has(d)?b?game.i18n.format(d,b):game.i18n.localize(d):void 0}registerTemplate(a){return new Template(this.#id,a)}initializeSocket(){if(this.#socketInitialized)throw new Error("Socket should only be initialized once (to ensure the same generic type is used for all socket messages sent by this module, since they will all use the same message key)");return this.#socketInitialized=!0,new ModuleSocket(this.#id)}}

const module=new ModuleUtils(moduleMetadata);

const cssPrefix=module.cssPrefix.childPrefix("clear-chat"),confirmMessage=cssPrefix.child("confirm-message");const CheckOnLoad=module.settings.register("clear-chat.enabled",Boolean,!1,{hasHint:!0});const Confirm=module.settings.register("clear-chat.confirm",Boolean,!0,{hasHint:!0});const CheckEveryMessage=module.settings.register("clear-chat.check-every-message",Boolean,!1,{hasHint:!0});const Trigger=module.settings.register("clear-chat.trigger",Number,1e3,{hasHint:!0});const Target=module.settings.register("clear-chat.target",Number,500,{hasHint:!0});Hooks.on("ready",()=>game.user?.isGM?CheckOnLoad.get()?void cleanupIfNecessary(!1):void module.logger.debug("clear-chat disabled"):void 0),Hooks.on("createChatMessage",()=>{!game.user?.isGM||CheckEveryMessage.get()&&cleanupIfNecessary(!0);});const cleanupIfNecessary=foundry.utils.debounce(a=>{const b=Target.get();if(0>b)return void module.logger.error("Chat Log not cleared - Clear Target cannot be negative",b);const c=Trigger.get();return c<b?void module.logger.error("Chat Log not cleared - Clear Trigger cannot be less than the Clear Target",c,b):void(module.logger.debug("clear-chat enabled",c,b),sweepChatLog(c,b,a))},100),sweepChatLog=(a,b,c)=>{if(game.messages.size<=a)return void module.logger.debug("Chat Log not cleared - fewer (or equal) messages than the trigger",game.messages.size,a);const d=getMessagesToDelete(b);module.logger.info("Deleting",d.length,"of",game.messages.size,"messages",d);const e=async()=>{module.logger.warn("Deleting",d.length,"messages"),await ChatMessage.deleteDocuments(d),module.logger.warn("Deleted",d.length,"messages"),ui.notifications.info(module.localize("clear-chat.notification.deleted",{count:d.length.toString()}));};return c||!Confirm.get()?(module.logger.warn("Cleaning up Chat - confirmation disabled or skipped"),void void e()):void cleanupOnConfirm(a,b,d,e)},getMessagesToDelete=a=>{const b=game.messages.size-a;return game.messages.reduce((a,c,d)=>(d<b&&a.push(c.id),a),[])},cleanupOnConfirm=(a,b,c,d)=>{const e=document.createElement("div");e.appendChild(document.createTextNode(module.localize("clear-chat.confirm.message",{count:c.length.toString(),total:game.messages.size.toString(),trigger:a.toString(),target:b.toString()}))),e.classList.add(confirmMessage),void Dialog.confirm({title:module.localize("clear-chat.confirm.title"),content:e.outerHTML,yes:()=>{module.logger.warn("Cleaning up Chat - cleanup confirmed"),void d();},no:()=>{module.logger.warn("Not cleaning up Chat - cleanup not confirmed");},defaultYes:!1});};

const getTokenFromSpeaker=a=>{if(!game.canvas.ready)return void module.logger.info("getTokenFromSpeaker bailed - canvas is not ready yet");let b;return a.token&&(b=getTokenFromID(a.token)),!b&&a.actor&&(b=getTokenByActorID(a.actor)),b},getTokenByActorID=a=>game.canvas.tokens?.placeables.find(b=>b.document?.actorLink&&b.actor?.id===a),getTokenFromID=a=>game.canvas.tokens?.get(a);

let lastHoveredToken=null;const hoverIn=(a,b)=>{const c=getTokenFromSpeaker(b);c&&fireMouseEvent(c,"hoverIn",a)&&(lastHoveredToken=c);};const hoverOut=a=>{lastHoveredToken&&(fireMouseEvent(lastHoveredToken,"hoverOut",a),lastHoveredToken=null);};const fireMouseEvent=(a,b,c)=>!!a?.mouseInteractionManager.can(b,c)&&(a.mouseInteractionManager.callback(b,c),!0);

const panToSpeaker=a=>{panToToken(getTokenFromSpeaker(a));};const panToToken=a=>{a?.isVisible&&void game.canvas.animatePan({...a.center,duration:250});};

const is5e3OrNewer=()=>"dnd5e"===game.system.id&&!foundry.utils.isNewerVersion("3.0.0",game.system.version);

const senderNameSetting=module.settings.register("sender-name",Boolean,!0,{hasHint:!0,requiresReload:!0}),speakerFocusSetting=module.settings.register("speaker-focus",Boolean,!0,{hasHint:!0,requiresReload:!0}),cssPlayerName=module.cssPrefix.child("player-name"),createPlayerNameElem=a=>{const b=a.author.name,c=document.createElement("span");return c.classList.add(cssPlayerName),c.appendChild(document.createTextNode("[")),c.appendChild(document.createTextNode(b)),c.appendChild(document.createTextNode("]")),c},addSpeakerMouseListeners=(a,b)=>{a.addEventListener("mouseenter",a=>{hoverIn(a,b);}),a.addEventListener("mouseleave",a=>{hoverOut(a);}),a.addEventListener("dblclick",()=>{panToSpeaker(b);});};Hooks.on("renderChatMessage",(a,b)=>{if(a.isContentVisible&&a.speaker?.actor){const c=b.get(0)?.querySelector(".message-sender");return c?void(!is5e3OrNewer()&&senderNameSetting.get()&&(c.append(document.createTextNode(" ")),c.append(createPlayerNameElem(a))),speakerFocusSetting.get()&&addSpeakerMouseListeners(c,a.speaker)):void module.logger.error(`Could not update Chat Message sender for ${a.id} - .message-sender was not where it was expected`)}}),Hooks.on("dnd5e.renderChatMessage",(a,b)=>{if(is5e3OrNewer()&&!senderNameSetting.get()){const c=b.querySelector(".message-sender .name-stacked .subtitle");c?c.style.display="none":module.logger.warn("Could not find .name-stacked .subtitle in dnd5e ChatMessage element",a,b);}});

const cssTokenThumbnail=module.cssPrefix.child("token-thumbnail"),getSpeakerImage=a=>{const b=document.createElement("img");return b.src=a||foundry.CONST.DEFAULT_TOKEN,b.classList.add(cssTokenThumbnail),b.outerHTML};

const releaseAllTokens=()=>{if(game.canvas.tokens?.controlled)for(const a of game.canvas.tokens.controlled)a.release();};

const sortByName=(a,b)=>a.name.localeCompare(b.name);

const getSpeakerOptions=()=>{const a=[],b=game.canvas.tokens?.ownedTokens||[];for(const c of b)a.push({name:c.name||"Unknown",icon:getSpeakerImage(c.document.texture.src),callback:()=>{c.control(),panToToken(c);}});return a.sort(sortByName),game.user&&!game.user.character&&a.unshift({name:game.user.name,icon:getSpeakerImage(game.user.avatar),callback:releaseAllTokens}),a};

const speakingAsSetting=module.settings.register("speaking-as",Boolean,!0,{hasHint:!0,requiresReload:!0}),selectorSetting=module.settings.register("speaking-as-selector",Boolean,!0,{hasHint:!0,requiresReload:!0}),focusSetting=module.settings.register("speaking-as-focus",Boolean,!0,{hasHint:!0,requiresReload:!0}),cssCurrentSpeaker=module.cssPrefix.child("current-speaker"),currentSpeakerDisplay=document.createElement("div");currentSpeakerDisplay.classList.add(cssCurrentSpeaker);const updateSpeaker=()=>{const a=ChatMessage.getSpeaker().alias||"???";currentSpeakerDisplay.innerText=module.localize("currentSpeaker",{name:a});};Hooks.once("renderChatLog",(a,b)=>{if(!speakingAsSetting.get())return;const c=b.get(0),d=c?.querySelector("#chat-controls");if(!d||d.parentElement!==c)return void module.logger.error("Could not render Current Speaker Display - #chat-controls was not where it was expected");if(c.insertBefore(currentSpeakerDisplay,d),selectorSetting.get()){const a=new ContextMenu($(c),`.${cssCurrentSpeaker}`,[],{onOpen:()=>{a.menuItems=getSpeakerOptions();}});}updateSpeaker(),focusSetting.get()&&(currentSpeakerDisplay.addEventListener("mouseenter",a=>{hoverIn(a,ChatMessage.getSpeaker());}),currentSpeakerDisplay.addEventListener("mouseleave",a=>{hoverOut(a);}),currentSpeakerDisplay.addEventListener("dblclick",()=>{panToSpeaker(ChatMessage.getSpeaker());}));}),Hooks.on("controlToken",updateSpeaker);

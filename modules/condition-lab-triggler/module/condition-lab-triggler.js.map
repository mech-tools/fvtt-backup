{"version":3,"file":"condition-lab-triggler.js","sources":["../../src/module/libWrapper.js","../../src/module/sidekick.js","../../src/module/enhanced-conditions/enhanced-conditions.js","../../src/module/triggler/triggler.js","../../src/module/triggler/triggler-form.js","../../src/module/enhanced-conditions/enhanced-condition-macro.js","../../src/module/enhanced-conditions/enhanced-condition-option.js","../../src/module/enhanced-conditions/enhanced-condition-trigger.js","../../src/module/enhanced-conditions/enhanced-effect-config.js","../../src/module/enhanced-conditions/condition-lab.js","../../src/module/settings.js","../../src/module/condition-lab-triggler.js"],"sourcesContent":["// SPDX-License-Identifier: MIT\n// Copyright Â© 2021 fvtt-lib-wrapper Rui Pinheiro\n\n\"use strict\";\n\n// A shim for the libWrapper library\nexport let libWrapper = undefined;\n\nexport const VERSIONS = [1, 12, 2];\nexport const TGT_SPLIT_RE = new RegExp(\"([^.[]+|\\\\[('([^'\\\\\\\\]|\\\\\\\\.)+?'|\\\"([^\\\"\\\\\\\\]|\\\\\\\\.)+?\\\")\\\\])\", \"g\");\nexport const TGT_CLEANUP_RE = new RegExp(\"(^\\\\['|'\\\\]$|^\\\\[\\\"|\\\"\\\\]$)\", \"g\");\n\n// Main shim code\nHooks.once(\"init\", () => {\n\t// Check if the real module is already loaded - if so, use it\n\tif (globalThis.libWrapper && !(globalThis.libWrapper.is_fallback ?? true)) {\n\t\tlibWrapper = globalThis.libWrapper;\n\t\treturn;\n\t}\n\n\t// Fallback implementation\n\tlibWrapper = class {\n\t\tstatic get is_fallback() {\n\t\t\treturn true;\n\t\t}\n\n\t\tstatic get WRAPPER() {\n\t\t\treturn \"WRAPPER\";\n\t\t}\n\t\tstatic get MIXED() {\n\t\t\treturn \"MIXED\";\n\t\t}\n\t\tstatic get OVERRIDE() {\n\t\t\treturn \"OVERRIDE\";\n\t\t}\n\n\t\tstatic register(package_id, target, fn, type = \"MIXED\", { chain = undefined, bind = [] } = {}) {\n\t\t\tconst is_setter = target.endsWith(\"#set\");\n\t\t\ttarget = !is_setter ? target : target.slice(0, -4);\n\t\t\tconst split = target.match(TGT_SPLIT_RE).map((x) => x.replace(/\\\\(.)/g, \"$1\").replace(TGT_CLEANUP_RE, \"\"));\n\t\t\tconst root_nm = split.splice(0, 1)[0];\n\n\t\t\tlet obj, fn_name;\n\t\t\tif (split.length == 0) {\n\t\t\t\tobj = globalThis;\n\t\t\t\tfn_name = root_nm;\n\t\t\t} else {\n\t\t\t\tconst _eval = eval;\n\t\t\t\tfn_name = split.pop();\n\t\t\t\tobj = split.reduce((x, y) => x[y], globalThis[root_nm] ?? _eval(root_nm));\n\t\t\t}\n\n\t\t\tlet iObj = obj;\n\t\t\tlet descriptor = null;\n\t\t\twhile (iObj) {\n\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(iObj, fn_name);\n\t\t\t\tif (descriptor) break;\n\t\t\t\tiObj = Object.getPrototypeOf(iObj);\n\t\t\t}\n\t\t\tif (!descriptor || descriptor?.configurable === false)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`libWrapper Shim: '${target}' does not exist, could not be found, or has a non-configurable descriptor.`,\n\t\t\t\t);\n\n\t\t\tlet original = null;\n\t\t\tconst wrapper =\n\t\t\t\tchain ?? (type.toUpperCase?.() != \"OVERRIDE\" && type != 3)\n\t\t\t\t\t? function (...args) {\n\t\t\t\t\t\t\treturn fn.call(this, original.bind(this), ...bind, ...args);\n\t\t\t\t\t  }\n\t\t\t\t\t: function (...args) {\n\t\t\t\t\t\t\treturn fn.call(this, ...bind, ...args);\n\t\t\t\t\t  };\n\t\t\tif (!is_setter) {\n\t\t\t\tif (descriptor.value) {\n\t\t\t\t\toriginal = descriptor.value;\n\t\t\t\t\tdescriptor.value = wrapper;\n\t\t\t\t} else {\n\t\t\t\t\toriginal = descriptor.get;\n\t\t\t\t\tdescriptor.get = wrapper;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!descriptor.set) throw new Error(`libWrapper Shim: '${target}' does not have a setter`);\n\t\t\t\toriginal = descriptor.set;\n\t\t\t\tdescriptor.set = wrapper;\n\t\t\t}\n\n\t\t\tdescriptor.configurable = true;\n\t\t\tObject.defineProperty(obj, fn_name, descriptor);\n\t\t}\n\t};\n});\n","/**\n * Provides helper methods for use elsewhere in the module (and has your back in a melee)\n */\nexport class Sidekick {\n\t/**\n\t * Use FilePicker to browse then Fetch one or more JSONs and return them\n\t * @param {string} source\n\t * @param {string} path\n\t * @returns {Promise<JSON[]>}\n\t */\n\tstatic async fetchJsons(source, path) {\n\t\tconst extensions = [\".json\"];\n\t\tconst fp = await FilePicker.browse(source, path, { extensions });\n\t\tconst fetchedJsons = fp?.files?.length ? await Promise.all(fp.files.map((f) => Sidekick.fetchJson(f))) : [];\n\t\tconst jsons = fetchedJsons.filter((j) => !!j);\n\n\t\treturn jsons;\n\t}\n\n\t/**\n\t * Fetch a JSON from a given file\n\t * @param {File} file\n\t * @returns {Promise<JSON> | null}\n\t */\n\tstatic async fetchJson(file) {\n\t\ttry {\n\t\t\tconst jsonFile = await fetch(file);\n\t\t\tconst json = await jsonFile.json();\n\t\t\tif (!(json instanceof Object)) throw new Error(\"Not a valid JSON!\");\n\t\t\treturn json;\n\t\t} catch(e) {\n\t\t\tconsole.warn(e.message);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Attempts to coerce a target value into the exemplar's type\n\t * @param {string} value\n\t * @param {string} type\n\t * @returns {number | string | boolean} coercedValue\n\t */\n\tstatic coerceType(value, type) {\n\t\tswitch (type) {\n\t\t\tcase \"number\":\n\t\t\t\treturn Number(value);\n\n\t\t\tcase \"string\":\n\t\t\t\treturn value.toString();\n\n\t\t\tcase \"boolean\":\n\t\t\t\treturn value.toString().toLowerCase() === \"true\"\n\t\t\t\t\t? true\n\t\t\t\t\t: value.toString().toLowerCase() === \"false\"\n\t\t\t\t\t\t? false\n\t\t\t\t\t\t: value;\n\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n\n\t/**\n\t * Get a random unique Id, checking an optional supplied array of ids for a match\n\t * @param {string[]} existingIds\n\t * @param {object} root0\n\t * @param {number} root0.iterations\n\t * @param {number} root0.length\n\t * @returns {string}\n\t */\n\tstatic createId(existingIds = [], { iterations = 10000, length = 16 } = {}) {\n\t\tfor (let attempt = 0; attempt < iterations; attempt++) {\n\t\t\tconst id = foundry.utils.randomID(length);\n\t\t\tif (!existingIds.includes(id)) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\n\t\t\t`Combat Utility Belt - Sidekick | Tried to create a unique id over ${iterations} iterations and failed.`\n\t\t);\n\t}\n\n\t/**\n\t * For a given string generate a slug, optionally checking a list of existing Ids for uniqueness\n\t * @param {string} string\n\t * @param {string[]} idList\n\t * @returns {string}\n\t */\n\tstatic generateUniqueSlugId(string, idList = []) {\n\t\tlet slug = string.slugify();\n\n\t\tconst existingIds = idList.filter((id) => id === slug);\n\n\t\tif (!existingIds.length) return slug;\n\n\t\tconst uniqueIndex = existingIds.length > 1 ? Math.max(...existingIds.map((id) => id.match(/\\d+/g)[0])) + 1 : 1;\n\t\tslug = slug.replace(/\\d+$/g, uniqueIndex);\n\n\t\treturn slug;\n\t}\n\n\t/**\n\t * For a given file path, find the filename and then apply title case\n\t * @param {string} path\n\t * @returns {string}\n\t */\n\tstatic getNameFromFilePath(path) {\n\t\tif (!path) return null;\n\n\t\tconst file = path.split(\"\\\\\").pop()\n\t\t\t.split(\"/\")\n\t\t\t.pop();\n\n\t\tif (!file) return null;\n\n\t\tconst filename = file.replace(/\\.[^/.]+$/, \"\");\n\n\t\tif (!filename) return null;\n\n\t\tconst name = filename.titleCase();\n\t\treturn name;\n\t}\n\n\t/**\n\t * Loads templates for partials\n\t */\n\tstatic async loadTemplates() {\n\t\tconst templates = [\n\t\t\t\"modules/condition-lab-triggler/templates/partials/chat-card-condition-list.hbs\",\n\t\t\t\"modules/condition-lab-triggler/templates/partials/condition-lab-row.hbs\",\n\t\t\t\"modules/condition-lab-triggler/templates/partials/triggler-icon.hbs\"\n\t\t];\n\t\tawait loadTemplates(templates);\n\t}\n\n\t/**\n\t * Converts the given string to camelCase using the provided delimiter to break up words\n\t * @param {string} string\n\t * @param {string} delimiter\n\t * @returns {string} the converted string\n\t * @example Sidekick.toCamelCase(\"my-cool-string\", \"-\") // returns \"myCoolString\"\n\t */\n\tstatic toCamelCase(string, delimiter) {\n\t\tconst stringParts = string.split(delimiter);\n\t\treturn stringParts instanceof Array\n\t\t\t? stringParts.reduce((camelString, part, index) => {\n\t\t\t\treturn (camelString += index > 0 ? part.titleCase() : part);\n\t\t\t}, \"\")\n\t\t\t: stringParts;\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\n\n/**\n * Builds a mapping between status icons and journal entries that represent conditions\n */\nexport class EnhancedConditions {\n\tconditions = null;\n\n\tconditionMapType = \"default\";\n\n\tget enhancedConditions() {\n\t\treturn this;\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                    Workers                   */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Process the addition/removal of an Active Effect\n\t * @param {ActiveEffect} effect  the effect\n\t * @param {string} type  the type of change to process. \"create\" or \"delete\"\n\t */\n\tstatic _processActiveEffectChange(effect, type = \"create\") {\n\t\tif (!(effect instanceof ActiveEffect)) return;\n\n\t\tconst conditionId = effect.getFlag(\"condition-lab-triggler\", \"conditionId\");\n\t\tconst isDefault = !conditionId;\n\t\tconst effectIds = conditionId ? [conditionId] : Array.from(effect.statuses);\n\n\t\tconst conditions = effectIds.map((effectId) => ({\n\t\t\t...EnhancedConditions.lookupEntryMapping(effectId),\n\t\t\teffectId\n\t\t}));\n\n\t\tconst toOutput = conditions.filter((condition) => (isDefault && game.settings.get(\"condition-lab-triggler\", \"defaultConditionsOutputToChat\"))\n\t\t\t|| (game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\") && condition?.options?.outputChat));\n\t\tconst actor = effect.parent;\n\n\t\tif (toOutput.length) {\n\t\t\tEnhancedConditions.outputChatMessage(actor, toOutput, { type: type === \"delete\" ? \"removed\" : \"added\" });\n\t\t}\n\n\t\tif (isDefault) return;\n\t\t// If not default we only have one condition.\n\t\tconst condition = conditions[0];\n\t\tlet macros = [];\n\n\t\tswitch (type) {\n\t\t\tcase \"create\":\n\t\t\t\tmacros = condition.macros?.filter((m) => m.type === \"apply\");\n\t\t\t\tif (condition.options?.removeOthers) EnhancedConditions._removeOtherConditions(actor, condition.id);\n\t\t\t\tif (condition.options?.markDefeated) EnhancedConditions._toggleDefeated(actor, { markDefeated: true });\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"delete\":\n\t\t\t\tmacros = condition.macros?.filter((m) => m.type === \"remove\");\n\t\t\t\tif (condition.options?.markDefeated) EnhancedConditions._toggleDefeated(actor, { markDefeated: false });\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst macroIds = macros?.length ? macros.filter((m) => m.id).map((m) => m.id) : null;\n\n\t\tif (macroIds?.length) EnhancedConditions._processMacros(macroIds, actor);\n\t}\n\n\t/**\n\t * Checks statusEffect icons against map and returns matching condition mappings\n\t * @param {string[] | string} effectIds  A list of effectIds, or a single effectId to check\n\t * @returns {string[] | string | undefined}\n\t */\n\tstatic lookupEntryMapping(effectIds) {\n\t\tif (!(effectIds instanceof Array)) {\n\t\t\teffectIds = [effectIds];\n\t\t}\n\n\t\tconst conditionEntries = EnhancedConditions.getConditionsMap().filter((row) =>\n\t\t\teffectIds.includes(row.id ?? Sidekick.generateUniqueSlugId(row.name))\n\t\t);\n\n\t\tif (conditionEntries.length === 0) return;\n\n\t\treturn conditionEntries.length > 1 ? conditionEntries : conditionEntries.shift();\n\t}\n\n\t/**\n\t * Output one or more condition entries to chat\n\t * @param {Actor|Token} entity\n\t * @param {Array<Condition>} entries\n\t * @param {object} options\n\t * @param {string} options.type\t\"added\", \"removed\", or \"active\"\n\t * @todo refactor to use actor or token\n\t */\n\tstatic async outputChatMessage(entity, entries, options = { type: \"active\" }) {\n\t\tconst isActorEntity = entity instanceof Actor;\n\t\t// Turn a single condition mapping entry into an array\n\t\tentries = entries instanceof Array ? entries : [entries];\n\n\t\tif (!entity || !entries.length) return;\n\n\t\tconst type = {};\n\n\t\tswitch (options.type) {\n\t\t\tcase \"added\":\n\t\t\t\ttype.added = true;\n\t\t\t\ttype.title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ChatCard.Title.Added\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"removed\":\n\t\t\t\ttype.removed = true;\n\t\t\t\ttype.title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ChatCard.Title.Removed\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"active\":\n\t\t\tdefault:\n\t\t\t\ttype.active = true;\n\t\t\t\ttype.title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ChatCard.Title.Active\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst chatUser = game.userId;\n\t\t// const token = token || this.currentToken;\n\t\tconst chatType = CONST.CHAT_MESSAGE_STYLES.OTHER;\n\t\tconst speaker = isActorEntity\n\t\t\t? ChatMessage.getSpeaker({ actor: entity })\n\t\t\t: ChatMessage.getSpeaker({ token: entity });\n\t\tconst timestamp = type.active ? null : Date.now();\n\n\t\t// iterate over the entries and mark any with references and flags for use in the template\n\t\tconst conditions = entries.map(({ reference, referenceId: rId, ...e }) => {\n\t\t\tlet referenceId = rId;\n\t\t\tif (!rId && reference) {\n\t\t\t\treferenceId = `@UUID[${reference}]`;\n\t\t\t}\n\t\t\tif (referenceId && !referenceId.match(/\\{.+\\}/)) {\n\t\t\t\treferenceId = `${referenceId}{${e.name}}`;\n\t\t\t}\n\t\t\tconst isDefault = !e.options;\n\t\t\treturn ({\n\t\t\t\t...e,\n\t\t\t\treferenceId,\n\t\t\t\thasReference: !!referenceId,\n\t\t\t\thasButtons: !isDefault\n\t\t\t\t\t&& game.user.isGM\n\t\t\t});\n\t\t});\n\n\t\t// if the last message Enhanced conditions, append instead of making a new one\n\t\tconst lastMessage = game.messages.contents[game.messages.contents.length - 1];\n\t\tconst lastMessageSpeaker = lastMessage?.speaker;\n\t\tconst sameSpeaker = isActorEntity\n\t\t\t? lastMessageSpeaker?.actor === speaker.actor\n\t\t\t: lastMessageSpeaker?.token === speaker.token;\n\n\t\t// hard code the recent timestamp to 30s for now\n\t\tconst recentTimestamp = Date.now() <= (lastMessage?.timestamp ?? 0) + 30000;\n\t\tconst enhancedConditionsDiv = lastMessage?.content.match(\"enhanced-conditions\");\n\n\t\tif (!type.active && enhancedConditionsDiv && sameSpeaker && recentTimestamp) {\n\t\t\tlet newContent = \"\";\n\t\t\tfor (const condition of conditions) {\n\t\t\t\tcondition.name = game.i18n.localize(condition.name);\n\t\t\t\tconst newRow = await renderTemplate(\n\t\t\t\t\t\"modules/condition-lab-triggler/templates/partials/chat-card-condition-list.hbs\",\n\t\t\t\t\t{ condition, type, timestamp }\n\t\t\t\t);\n\t\t\t\tnewContent += newRow;\n\t\t\t}\n\t\t\tconst existingContent = lastMessage.content;\n\t\t\tconst ulEnd = existingContent?.indexOf(\"</ul>\");\n\t\t\tif (!ulEnd) return;\n\t\t\tconst content = existingContent.slice(0, ulEnd) + newContent + existingContent.slice(ulEnd);\n\t\t\tawait lastMessage.update({ content });\n\t\t\tEnhancedConditions.updateConditionTimestamps();\n\t\t\tui.chat.scrollBottom();\n\t\t} else {\n\t\t\tconst chatCardHeading = game.i18n.localize(\n\t\t\t\ttype.active ? \"CLT.ENHANCED_CONDITIONS.ChatCard.HeadingActive\" : \"CLT.ENHANCED_CONDITIONS.ChatCard.Heading\"\n\t\t\t);\n\n\t\t\tconst templateData = {\n\t\t\t\tchatCardHeading,\n\t\t\t\ttype,\n\t\t\t\ttimestamp,\n\t\t\t\tentityId: entity.id,\n\t\t\t\talias: speaker.alias,\n\t\t\t\tconditions,\n\t\t\t\tisOwner: entity.isOwner || game.user.isGM\n\t\t\t};\n\n\t\t\tconst content = await renderTemplate(\n\t\t\t\t\"modules/condition-lab-triggler/templates/chat-conditions.hbs\",\n\t\t\t\ttemplateData\n\t\t\t);\n\n\t\t\tawait ChatMessage.create({\n\t\t\t\tspeaker,\n\t\t\t\tcontent,\n\t\t\t\ttype: chatType,\n\t\t\t\tuser: chatUser\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Marks a Combatants for a particular entity as defeated\n\t * @param {Actor | Token} entities  the entity to mark defeated\n\t * @param {object} options\n\t * @param {boolean} options.markDefeated  an optional state flag (default=true)\n\t */\n\tstatic _toggleDefeated(entities, { markDefeated = true } = {}) {\n\t\tconst combat = game.combat;\n\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\treturn;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tconst tokens = entities.flatMap((e) =>\n\t\t\te instanceof Token || e instanceof TokenDocument ? e : e instanceof Actor ? e.getActiveTokens() : null\n\t\t);\n\n\t\tconst updates = [];\n\n\t\t// loop through tokens, and if there's matching combatants, add them to the update\n\t\tfor (const token of tokens) {\n\t\t\tconst combatants = combat\n\t\t\t\t? combat.combatants?.contents?.filter((c) => c.tokenId === token.id && c.defeated !== markDefeated)\n\t\t\t\t: [];\n\n\t\t\tif (!combatants.length) return;\n\n\t\t\tconst update = combatants.map((c) => {\n\t\t\t\treturn {\n\t\t\t\t\t_id: c.id,\n\t\t\t\t\tdefeated: markDefeated\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tupdates.push(update);\n\t\t}\n\n\t\tif (!updates.length) return;\n\n\t\t// update all combatants at once\n\t\tcombat.updateEmbeddedDocuments(\"Combatant\", updates.length > 1 ? updates : updates.shift());\n\t}\n\n\t/**\n\t * For a given entity, removes conditions other than the one supplied\n\t * @param {*} entity\n\t * @param {*} conditionId\n\t */\n\tstatic async _removeOtherConditions(entity, conditionId) {\n\t\tconst entityConditions = EnhancedConditions.getConditions(entity, { warn: false });\n\t\tlet conditions = entityConditions ? entityConditions.conditions : [];\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\n\t\tif (!conditions.length) return;\n\n\t\tconst removeConditions = conditions.filter((c) => c.id !== conditionId);\n\n\t\tif (!removeConditions.length) return;\n\n\t\tfor (const c of removeConditions) await EnhancedConditions.removeCondition(c.name, entity, { warn: true });\n\t}\n\n\t/**\n\t * Process macros based on given Ids\n\t * @param {*} macroIds\n\t * @param {*} entity\n\t */\n\tstatic async _processMacros(macroIds, entity = null) {\n\t\tconst scope = {};\n\t\tif (entity instanceof Token || entity instanceof TokenDocument) {\n\t\t\tscope.token = entity;\n\t\t} else if (entity instanceof Actor) {\n\t\t\tscope.actor = entity;\n\t\t}\n\n\t\tfor (const macroId of macroIds) {\n\t\t\tconst macro = game.macros.get(macroId);\n\t\t\tif (!macro) continue;\n\n\t\t\tawait macro.execute(scope);\n\t\t}\n\t}\n\n\t/**\n\t * Update condition added/removed timestamps\n\t */\n\tstatic updateConditionTimestamps() {\n\t\tconst conditionRows = document.querySelectorAll(\"ol#chat-log ul.condition-list li\");\n\t\tfor (const li of conditionRows) {\n\t\t\tconst timestamp =\n\t\t\t\ttypeof li.dataset.timestamp === \"string\" ? parseInt(li.dataset.timestamp) : li.dataset.timestamp;\n\t\t\tconst iconSpanWrapper = li.querySelector(\"span.add-remove-icon\");\n\n\t\t\tif (!timestamp || !iconSpanWrapper) continue;\n\n\t\t\tconst type = li.dataset.changeType;\n\t\t\ticonSpanWrapper.title = `${type} ${foundry.utils.timeSince(timestamp)}`;\n\t\t}\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                    Helpers                   */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Returns the default maps supplied with the module\n\t * @todo: map to entryId and then rebuild on import\n\t * @returns {Promise<object[]>}\n\t */\n\tstatic async _loadDefaultMaps() {\n\t\tconst path = \"modules/condition-lab-triggler/condition-maps\";\n\t\tconst jsons = await Sidekick.fetchJsons(\"data\", path);\n\n\t\tconst defaultMaps = jsons\n\t\t\t.filter((j) => !j.system.includes(\"example\"))\n\t\t\t.reduce((obj, current) => {\n\t\t\t\tobj[current.system] = current.map;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\treturn defaultMaps;\n\t}\n\n\t/**\n\t * Parse the provided Condition Map and prepare it for storage, validating and correcting bad or missing data where possible\n\t * @param {*} conditionMap\n\t * @returns {object[]}\n\t */\n\tstatic _prepareMap(conditionMap) {\n\t\tconst preparedMap = [];\n\n\t\tif (!conditionMap || !conditionMap?.length) {\n\t\t\treturn preparedMap;\n\t\t}\n\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\t\tconditionMap = conditionMap.filter((c) => c.name && c.id);\n\n\t\t// Iterate through the map validating/preparing the data\n\t\tfor (const condition of conditionMap) {\n\t\t\tcondition.options = condition.options || {};\n\t\t\tif (condition.options.outputChat === undefined) condition.options.outputChat = outputChatSetting;\n\t\t\tpreparedMap.push(condition);\n\t\t}\n\n\t\treturn preparedMap;\n\t}\n\n\t/**\n\t * Creates journal entries for any conditions that don't have one\n\t * @param {string} condition the condition being evaluated\n\t * @returns {*}\n\t */\n\tstatic async _createJournalEntry(condition) {\n\t\treturn await JournalEntry.create(\n\t\t\t{\n\t\t\t\tname: condition,\n\t\t\t\tpermission: {\n\t\t\t\t\tdefault: CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplaySheet: false\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic getConditionsMap() {\n\t\tlet conditions = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tif (!game.settings.get(\"condition-lab-triggler\", \"removeDefaultEffects\")) {\n\t\t\tconditions = conditions.concat(game.clt.CoreStatusEffects);\n\t\t}\n\t\treturn conditions;\n\t}\n\n\t/**\n\t * Gets one or more conditions from the map by their name\n\t * @param {string} conditionName  the condition to get\n\t * @returns {string[] | string | undefined}\n\t */\n\tstatic _lookupConditionByName(conditionName) {\n\t\tif (!conditionName) return;\n\n\t\tconditionName = conditionName instanceof Array ? conditionName : [conditionName];\n\n\t\tconst conditions = EnhancedConditions.getConditionsMap().filter((c) => conditionName.includes(c.name)) ?? [];\n\t\tif (!conditions.length) return;\n\n\t\treturn conditions.length > 1 ? conditions : conditions.shift();\n\t}\n\n\t/**\n\t * Updates the CONFIG.statusEffect effects with Condition Map ones\n\t * @param {*} conditionMap\n\t */\n\tstatic _updateStatusEffects(conditionMap) {\n\t\tconst removeDefaultEffects = game.settings.get(\"condition-lab-triggler\", \"removeDefaultEffects\");\n\t\tconst activeConditionMap = conditionMap || game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!removeDefaultEffects && !activeConditionMap) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeConditionEffects = EnhancedConditions._prepareStatusEffects(activeConditionMap);\n\n\t\tif (removeDefaultEffects) {\n\t\t\tCONFIG.statusEffects = activeConditionEffects ?? [];\n\t\t} else if (activeConditionMap instanceof Array) {\n\t\t\t// add the icons from the condition map to the status effects array\n\t\t\tconst coreEffects =\n\t\t\t\tCONFIG.defaultStatusEffects || game.clt.CoreStatusEffects;\n\n\t\t\t// Create a Set based on the core status effects and the Enhanced Condition effects. Using a Set ensures unique icons only\n\t\t\tCONFIG.statusEffects = coreEffects.concat(activeConditionEffects);\n\t\t}\n\t}\n\n\t/**\n\t * Converts the given Condition Map (one or more Conditions) into a Status Effects array or object\n\t * @param {object[] | object} conditionMap\n\t * @returns {object[]} statusEffects\n\t */\n\tstatic _prepareStatusEffects(conditionMap) {\n\t\tconditionMap = conditionMap instanceof Array ? conditionMap : [conditionMap];\n\t\tif (!conditionMap.length) return [];\n\n\t\tconst existingIds = conditionMap.filter((c) => c.id).map((c) => c.id);\n\n\t\tconst statusEffects = conditionMap.map((c) => {\n\t\t\tconst id = c.id || Sidekick.createId(existingIds);\n\t\t\tconst { activeEffect, duration, img, name, options } = c;\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tstatuses: [id],\n\t\t\t\tname,\n\t\t\t\timg,\n\t\t\t\tchanges: activeEffect?.changes || [],\n\t\t\t\tdescription: activeEffect?.description || \"\",\n\t\t\t\tduration: duration || activeEffect?.duration || {},\n\t\t\t\tflags: {\n\t\t\t\t\t...activeEffect?.flags,\n\t\t\t\t\tcore: {\n\t\t\t\t\t\toverlay: options?.overlay ?? false\n\t\t\t\t\t},\n\t\t\t\t\t\"condition-lab-triggler\": {\n\t\t\t\t\t\tconditionId: id\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget icon() {\n\t\t\t\t\treturn this.img;\n\t\t\t\t},\n\t\t\t\tget label() {\n\t\t\t\t\treturn this.name;\n\t\t\t\t},\n\t\t\t\tset label(value) {\n\t\t\t\t\tthis.name = value;\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\treturn statusEffects;\n\t}\n\n\t/**\n\t * Prepares one or more ActiveEffects from Conditions for placement on an actor\n\t * @param {object[] | object} effects  a single ActiveEffect data object or an array of ActiveEffect data objects\n\t * @returns {object[]}\n\t */\n\tstatic _prepareActiveEffects(effects) {\n\t\teffects = effects instanceof Array ? effects : [effects];\n\t\tif (!effects) return [];\n\n\t\tfor (const effect of effects) {\n\t\t\tconst overlay = foundry.utils.getProperty(effect, \"flags.condition-lab-triggler.core.overlay\");\n\t\t\t// If the parent Condition for the ActiveEffect defines it as an overlay, mark the ActiveEffect as an overlay\n\t\t\tif (overlay) {\n\t\t\t\teffect.flags.core.overlay = overlay;\n\t\t\t}\n\t\t}\n\n\t\treturn effects;\n\t}\n\n\t/**\n\t * Retrieves a condition name by its mapped icon\n\t * @param {*} icon\n\t * @returns {string[]}\n\t */\n\tstatic getConditionsByIcon(icon) {\n\t\tconst conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!conditionMap || !icon) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (conditionMap instanceof Array && conditionMap.length) {\n\t\t\tconst filteredIcons = conditionMap.filter((c) => c.icon === icon).map((c) => c.name);\n\t\t\tif (!filteredIcons.length) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn filteredIcons;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Parses a condition map JSON and returns a map\n\t * @param {*} json\n\t * @returns {object[]}\n\t */\n\tstatic mapFromJson(json) {\n\t\tif (json.system !== game.system.id) {\n\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.MapMismatch\"));\n\t\t}\n\n\t\tconst map = json.map ? EnhancedConditions._prepareMap(json.map) : [];\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * Returns the default condition map for a given system\n\t * @param {object} defaultMaps\n\t * @returns {object}}\n\t */\n\tstatic getDefaultMap(defaultMaps = null) {\n\t\tconst system = game.system.id;\n\t\tdefaultMaps =\n\t\t\tdefaultMaps instanceof Object\n\t\t\t\t? defaultMaps\n\t\t\t\t: game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\tlet defaultMap = defaultMaps[system] || [];\n\n\t\tif (!defaultMap.length) {\n\t\t\tdefaultMap = EnhancedConditions.buildDefaultMap();\n\t\t}\n\n\t\treturn defaultMap;\n\t}\n\n\t/**\n\t * Builds a default map for a given system\n\t * @todo #281 update for active effects\n\t * @returns {object[]}\n\t */\n\tstatic buildDefaultMap() {\n\t\tconst coreEffectsSetting = game.clt.CoreStatusEffects;\n\t\tconst coreEffects = coreEffectsSetting && coreEffectsSetting.length\n\t\t\t? coreEffectsSetting\n\t\t\t: foundry.utils.duplicate(CONFIG.statusEffects);\n\t\treturn EnhancedConditions._prepareMap(coreEffects);\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                      API                     */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Apply the named condition to the provided entities (Actors or Tokens)\n\t * @deprecated\n\t * @param  {...any} params\n\t * @returns {*}\n\t * @see EnhancedConditions#addCondition\n\t */\n\tstatic async applyCondition(...params) {\n\t\treturn await EnhancedConditions.addCondition(...params);\n\t}\n\n\t/**\n\t * Applies the named condition to the provided entities (Actors or Tokens)\n\t * @param {string[] | string} conditionName  the name of the condition to add\n\t * @param {(Actor[] | Token[] | Actor | Token)} [entities=null] one or more Actors or Tokens to apply the Condition to\n\t * @param {object} options\n\t * @param {boolean} [options.allowDuplicates=false]  if one or more of the Conditions specified is already active on the Entity, this will still add the Condition. Use in conjunction with `replaceExisting` to determine how duplicates are handled\n\t * @param {boolean} [options.replaceExisting=false]  whether or not to replace existing Conditions with any duplicates in the `conditionName` parameter. If `allowDuplicates` is true and `replaceExisting` is false then a duplicate condition is created. Has no effect is `keepDuplicates` is `false`\n\t * @example\n\t * // Add the Condition \"Blinded\" to an Actor named \"Bob\". Duplicates will not be created.\n\t * game.clt.addCondition(\"Blinded\", game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Add the Condition \"Charmed\" to the currently controlled Token/s. Duplicates will not be created.\n\t * game.clt.addCondition(\"Charmed\");\n\t * @example\n\t * // Add the Conditions \"Blinded\" and \"Charmed\" to the targeted Token/s and create duplicates, replacing any existing Conditions of the same names.\n\t * game.clt.addCondition([\"Blinded\", \"Charmed\"], [...game.user.targets], {allowDuplicates: true, replaceExisting: true});\n\t */\n\tstatic async addCondition(\n\t\tconditionName,\n\t\tentities = null,\n\t\t{ allowDuplicates = false, replaceExisting = false } = {}\n\t) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tlet conditions = EnhancedConditions._lookupConditionByName(conditionName);\n\n\t\tif (!conditions) {\n\t\t\tui.notifications.error(\n\t\t\t\t`${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoCondition\")} ${conditionName}`\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.NoCondition\"\n\t\t\t\t)}`,\n\t\t\t\tconditionName\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\t\tconst conditionNames = conditions.map((c) => c.name);\n\n\t\tlet effects = EnhancedConditions.getActiveEffects(conditions);\n\n\t\tif (!effects) {\n\t\t\tui.notifications.error(\n\t\t\t\t`${game.i18n.localize(\"CLT.ENHANCED_CONDTIONS.ApplyCondition.Failed.NoEffect\")} ${conditions}`\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Condition Lab & Triggler | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDTIONS.ApplyCondition.Failed.NoEffect\"\n\t\t\t\t)}`,\n\t\t\t\tconditions\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\teffects = EnhancedConditions._prepareActiveEffects(effects);\n\n\t\tif (entities && !(entities instanceof Array)) {\n\t\t\tentities = [entities];\n\t\t}\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tif (!actor) continue;\n\n\t\t\tconst hasDuplicates = EnhancedConditions.hasCondition(conditionNames, actor, { warn: false });\n\t\t\tconst newEffects = [];\n\t\t\tconst updateEffects = [];\n\n\t\t\t// If there are duplicate Condition effects on the Actor take extra steps\n\t\t\tif (hasDuplicates) {\n\t\t\t\t// @todo #348 determine the best way to raise warnings in this scenario\n\t\t\t\t/*\n\t\t\t\tif (warn) {\n\t\t\t\t\tui.notifications.warn(`${entity.name}: ${conditionName} ${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.AlreadyActive\")}`);\n\t\t\t\t\tconsole.log(`Combat Utility Belt - Enhanced Conditions | ${entity.name}: ${conditionName} ${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ApplyCondition.Failed.AlreadyActive\")}`);\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\t// Get the existing conditions on the actor\n\t\t\t\tlet existingConditionEffects = EnhancedConditions.getConditionEffects(actor, { warn: false });\n\t\t\t\texistingConditionEffects =\n\t\t\t\t\texistingConditionEffects instanceof Array ? existingConditionEffects : [existingConditionEffects];\n\n\t\t\t\t// Loop through the effects sorting them into either existing or new effects\n\t\t\t\tfor (const effect of effects) {\n\t\t\t\t\t// Scenario 1: if duplicates are allowed, but existing conditions are not replaced, everything is new\n\t\t\t\t\tif (allowDuplicates && !replaceExisting) {\n\t\t\t\t\t\tnewEffects.push(effect);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst conditionId = foundry.utils.getProperty(effect, `flags.condition-lab-triggler.${\"conditionId\"}`);\n\t\t\t\t\tconst matchedConditionEffects = existingConditionEffects.filter(\n\t\t\t\t\t\t(e) => e.getFlag(\"condition-lab-triggler\", \"conditionId\") === conditionId\n\t\t\t\t\t);\n\n\t\t\t\t\t// Scenario 2: if duplicates are allowed, and existing conditions should be replaced, add any existing conditions to update\n\t\t\t\t\tif (replaceExisting) {\n\t\t\t\t\t\tfor (const matchedCondition of matchedConditionEffects) {\n\t\t\t\t\t\t\tupdateEffects.push({ id: matchedCondition.id, ...effect });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Scenario 2 cont'd: if the condition is not matched, it must be new, so add to the new effects\n\t\t\t\t\t// Scenario 3: if duplicates are not allowed, and existing conditions are not replaced, just add the new conditions\n\t\t\t\t\tif (!matchedConditionEffects.length) newEffects.push(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the any of the conditions remove others, remove all conditions\n\t\t\t// @todo maybe add this to the logic above?\n\t\t\tif (conditions.some((c) => c?.options?.removeOthers)) {\n\t\t\t\tawait EnhancedConditions.removeAllConditions(actor, { warn: false });\n\t\t\t}\n\n\t\t\tconst createData = hasDuplicates ? newEffects : effects;\n\t\t\tconst updateData = updateEffects;\n\t\t\t// If system is dnd3.5e, then prevent upstream updates to avoid condition being immediately removed\n\t\t\tconst stopUpdates = game.system.id === \"D35E\";\n\n\t\t\tif (createData.length) await actor.createEmbeddedDocuments(\"ActiveEffect\", createData, { stopUpdates });\n\t\t\tif (updateData.length) await actor.updateEmbeddedDocuments(\"ActiveEffect\", updateData, { stopUpdates });\n\t\t}\n\t}\n\n\t/**\n\t * Gets a condition by name from the Condition Map\n\t * @param {*} conditionName\n\t * @param {*} map\n\t * @param {object} options\n\t * @param {*} options.warn\n\t * @returns {string[] | string | undefined}\n\t */\n\tstatic getCondition(conditionName, map = null, { warn = false } = {}) {\n\t\tif (!conditionName) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetCondition.Failed.NoCondition\"));\n\t\t}\n\n\t\treturn EnhancedConditions._lookupConditionByName(conditionName);\n\t}\n\n\t/**\n\t * Retrieves all active conditions for one or more given entities (Actors or Tokens)\n\t * @param {Actor | Token} entities  one or more Actors or Tokens to get Conditions from\n\t * @param {object} options\n\t * @param {boolean} options.warn  output notifications\n\t * @returns {string[] | string | undefined}\n\t * @example\n\t * // Get conditions for an Actor named \"Bob\"\n\t * game.clt.getConditions(game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Get conditions for the currently controlled Token\n\t * game.clt.getConditions();\n\t */\n\tstatic getConditions(entities = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\t// Then check if the user has an assigned character\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst map = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tif (!map || !map.length) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoCondition\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoCondition\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(entities instanceof Array)) {\n\t\t\tentities = [entities];\n\t\t}\n\n\t\tconst results = [];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tconst effects = actor?.effects.contents;\n\n\t\t\tif (!effects) continue;\n\n\t\t\tconst effectIds =\n\t\t\t\teffects instanceof Array\n\t\t\t\t\t? effects.map((e) => e.getFlag(\"condition-lab-triggler\", \"conditionId\"))\n\t\t\t\t\t: effects.getFlag(\"condition-lab-triggler\", \"conditionId\");\n\n\t\t\tif (!effectIds.length) continue;\n\n\t\t\tconst entityConditions = {\n\t\t\t\tentity: entity,\n\t\t\t\tconditions: EnhancedConditions.lookupEntryMapping(effectIds)\n\t\t\t};\n\n\t\t\tresults.push(entityConditions);\n\t\t}\n\n\t\tif (!results.length) {\n\t\t\tif (warn) ui.notifications.notify(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoResults\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.GetConditions.Failed.NoResults\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn results.length > 1 ? results : results.shift();\n\t}\n\n\t/**\n\t * Gets the Active Effect data (if any) for the given conditions\n\t * @param {Array} conditions\n\t * @returns {Array} statusEffects\n\t */\n\tstatic getActiveEffects(conditions) {\n\t\treturn EnhancedConditions._prepareStatusEffects(conditions);\n\t}\n\n\t/**\n\t * Gets any Active Effect instances present on the entities (Actor/s or Token/s) that are mapped Conditions\n\t * @param {string} entities  the entities to check\n\t * @param {Array} map  the Condition map to check (optional)\n\t * @param {boolean} warn  output notifications\n\t * @returns {Map | object | undefined} A Map containing the Actor Id and the Condition Active Effect instances if any\n\t */\n\tstatic getConditionEffects(entities, map = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(\n\t\t\t\tgame.i18n.localize(\"CLT.ENHANCED_CONDITIONS.GetConditionEffects.Failed.NoEntity\")\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tif (!map) map = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\tlet results = new Collection();\n\n\t\tfor (const entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\t\t\tconst activeEffects = actor.effects.contents;\n\n\t\t\tif (!activeEffects.length) continue;\n\n\t\t\tconst conditionEffects = activeEffects.filter((ae) => ae.getFlag(\"condition-lab-triggler\", \"conditionId\"));\n\n\t\t\tif (!conditionEffects.length) continue;\n\n\t\t\tresults.set(entity.id, conditionEffects.length > 1 ? conditionEffects : conditionEffects.shift());\n\t\t}\n\n\t\tif (!results.size) return null;\n\n\t\treturn results.size > 1 ? results : results.values().next().value;\n\t}\n\n\t/**\n\t * Checks if the provided Entity (Actor or Token) has the given condition\n\t * @param {string | Array} conditionName  the name/s of the condition or conditions to check for\n\t * @param {Actor | Token | Array} entities  the entity or entities to check (Actor/s or Token/s)\n\t * @param {object} [options]  options object\n\t * @param {boolean} [options.warn]  whether or not to output notifications\n\t * @returns {boolean} hasCondition  Returns true if one or more of the provided entities has one or more of the provided conditions\n\t * @example\n\t * // Check for the \"Blinded\" condition on Actor \"Bob\"\n\t * game.clt.hasCondition(\"Blinded\", game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Check for the \"Charmed\" and \"Deafened\" conditions on the controlled tokens\n\t * game.clt.hasCondition([\"Charmed\", \"Deafened\"]);\n\t */\n\tstatic hasCondition(conditionName, entities = null, { warn = true } = {}) {\n\t\tif (!conditionName) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoCondition\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoCondition\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\t// Then check if the user has an assigned character\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tlet conditions = EnhancedConditions._lookupConditionByName(conditionName);\n\n\t\tif (!conditions) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.HasCondition.Failed.NoMapping\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoMapping\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tconditions = EnhancedConditions._prepareStatusEffects(conditions);\n\t\tconditions = conditions instanceof Array ? conditions : [conditions];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tif (!actor.effects.size) continue;\n\n\t\t\tconst conditionEffect = actor.effects.contents.some((ae) => {\n\t\t\t\treturn conditions.some(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\te?.flags[\"condition-lab-triggler\"].conditionId\n\t\t\t\t\t\t=== ae.getFlag(\"condition-lab-triggler\", \"conditionId\")\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tif (conditionEffect) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes one or more named conditions from an Entity (Actor/Token)\n\t * @param {string} conditionName  the name of the Condition to remove\n\t * @param {Actor | Token} entities  One or more Actors or Tokens\n\t * @param {object} options  options for removal\n\t * @param {boolean} options.warn  whether or not to raise warnings on errors\n\t * @example\n\t * // Remove Condition named \"Blinded\" from an Actor named Bob\n\t * game.clt.removeCondition(\"Blinded\", game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Remove Condition named \"Charmed\" from the currently controlled Token, but don't show any warnings if it fails.\n\t * game.clt.removeCondition(\"Charmed\", {warn=false});\n\t */\n\tstatic async removeCondition(conditionName, entities = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t\telse entities = null;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(conditionName instanceof Array)) conditionName = [conditionName];\n\n\t\tconst conditions = EnhancedConditions._lookupConditionByName(conditionName);\n\n\t\tif (!conditions || (conditions instanceof Array && !conditions.length)) {\n\t\t\tif (warn) ui.notifications.error(\n\t\t\t\t`${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoCondition\"\n\t\t\t\t)} ${conditionName}`\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoCondition\"\n\t\t\t\t)}`,\n\t\t\t\tconditionName\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tlet effects = EnhancedConditions.getActiveEffects(conditions);\n\n\t\tif (!effects) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"ENHANCED_CONDTIONS.RemoveCondition.Failed.NoEffect\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Condition | ${game.i18n.localize(\n\t\t\t\t\t\"ENHANCED_CONDTIONS.RemoveCondition.Failed.NoEffect\"\n\t\t\t\t)}`,\n\t\t\t\tconditionName\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(effects instanceof Array)) effects = [effects];\n\n\t\tif (entities && !(entities instanceof Array)) entities = [entities];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\t\t\tconst toRemove = actor.appliedEffects?.filter((e) => effects.find((r) => e.statuses.has(r.id)));\n\n\t\t\tif (!toRemove || (toRemove && !toRemove.length)) {\n\t\t\t\tif (warn) ui.notifications.warn(\n\t\t\t\t\t`${conditionName} ${game.i18n.localize(\n\t\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NotActive\"\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t\tconsole.log(\n\t\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${conditionName} ${game.i18n.localize(\n\t\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NotActive\"\n\t\t\t\t\t)}\")`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait actor.deleteEmbeddedDocuments(\"ActiveEffect\", toRemove.map((e) => e.id));\n\t\t}\n\t}\n\n\t/**\n\t * Removes all conditions from the provided entities\n\t * @param {Actors | Tokens} entities  One or more Actors or Tokens to remove Conditions from\n\t * @param {object} options\n\t * @param {boolean} options.warn  output notifications\n\t * @example\n\t * // Remove all Conditions on an Actor named Bob\n\t * game.clt.removeAllConditions(game.actors.getName(\"Bob\"));\n\t * @example\n\t * // Remove all Conditions on the currently controlled Token\n\t * game.clt.removeAllConditions();\n\t */\n\tstatic async removeAllConditions(entities = null, { warn = true } = {}) {\n\t\tif (!entities) {\n\t\t\t// First check for any controlled tokens\n\t\t\tif (canvas?.tokens?.controlled.length) entities = canvas.tokens.controlled;\n\t\t\telse if (game.user.character) entities = game.user.character;\n\t\t}\n\n\t\tif (!entities) {\n\t\t\tif (warn) ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"));\n\t\t\tconsole.log(\n\t\t\t\t`Combat Utility Belt - Enhanced Conditions | ${game.i18n.localize(\n\t\t\t\t\t\"CLT.ENHANCED_CONDITIONS.RemoveCondition.Failed.NoToken\"\n\t\t\t\t)}`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tentities = entities instanceof Array ? entities : [entities];\n\n\t\tfor (let entity of entities) {\n\t\t\tconst actor =\n\t\t\t\tentity instanceof Actor\n\t\t\t\t\t? entity\n\t\t\t\t\t: entity instanceof Token || entity instanceof TokenDocument\n\t\t\t\t\t\t? entity.actor\n\t\t\t\t\t\t: null;\n\n\t\t\tlet actorConditionEffects = EnhancedConditions.getConditionEffects(actor, { warn: false });\n\n\t\t\tif (!actorConditionEffects) continue;\n\n\t\t\tactorConditionEffects =\n\t\t\t\tactorConditionEffects instanceof Array ? actorConditionEffects : [actorConditionEffects];\n\n\t\t\tconst effectIds = actorConditionEffects.map((ace) => ace.id);\n\n\t\t\tawait actor.deleteEmbeddedDocuments(\"ActiveEffect\", effectIds);\n\t\t}\n\t}\n}\n","import { EnhancedConditions } from \"../enhanced-conditions/enhanced-conditions.js\";\nimport { Sidekick } from \"../sidekick.js\";\n\n/**\n * Handles triggers for other gadgets in the module... or does it?!\n */\nexport class Triggler {\n\tstatic OPERATORS = {\n\t\teq: \"=\",\n\t\tne: \"â \",\n\t\tlt: \"<\",\n\t\tlteq: \"â¤\",\n\t\tgt: \">\",\n\t\tgteq: \"â¥\"\n\t};\n\n\t/**\n\t * Parses triggers JSON and returns triggers\n\t * @param {{}} json\n\t * @returns {Array}\n\t */\n\tstatic triggersFromJson(json) {\n\t\tif (json.system !== game.system.id) {\n\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.MapMismatch\"));\n\t\t}\n\t\tconst triggers = [];\n\t\tif (json.triggers) {\n\t\t\tfor (const trigger of json.triggers) {\n\t\t\t\tconst processedTrigger = Triggler._prepareTrigger(trigger);\n\t\t\t\tif (processedTrigger) {\n\t\t\t\t\ttriggers.push(processedTrigger);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn triggers;\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Parse the provided Condition Map and prepare it for storage, validating and correcting bad or missing data where possible\n\t * @param {*} trigger\n\t * @returns {boolean | object}\n\t */\n\tstatic _prepareTrigger(trigger) {\n\t\tconst { triggerType = \"simple\", id = null } = trigger;\n\n\t\t// const triggerType = formData?.triggerType;\n\n\t\tif (triggerType === \"advanced\" && !trigger.advancedName.length) {\n\t\t\tconsole.warn(\n\t\t\t\t`CLT | Trigger with ID \"${id} is defined as an Advanced Trigger but has no Trigger Name.`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tconst text = triggerType === \"simple\" ? Triggler._constructString(trigger) : trigger.advancedName;\n\n\t\tif (!text) return false;\n\n\t\tconst existingTrigger = triggers.find((t) => t.id === id);\n\t\tif (existingTrigger) {\n\t\t\tconsole.warn(`CLT | Trigger with ID \"${id} already exists.`);\n\t\t\treturn false;\n\t\t}\n\t\treturn {\n\t\t\tid,\n\t\t\t...foundry.utils.duplicate(trigger),\n\t\t\ttext\n\t\t};\n\t}\n\n\t/**\n\t * Construct a string based on trigger parts\n\t * @param {*} parts\n\t * @returns {string}\n\t */\n\tstatic _constructString(parts) {\n\t\tconst triggerType = parts.triggerType;\n\t\tconst operatorText = Triggler.OPERATORS[parts.operator];\n\t\tconst advancedOperatorText = Triggler.OPERATORS[parts.advancedOperator];\n\n\t\tconst pcOnly = parts.pcOnly ? \" (PCs Only)\" : \"\";\n\t\tconst npcOnly = parts.npcOnly ? \" (NPCs Only)\" : \"\";\n\t\tconst notZero = parts.notZero ? \" (Not 0)\" : \"\";\n\t\tif (triggerType === \"simple\") {\n\t\t\tconst property2 = parts.property2 ? ` ${parts.category}.${parts.attribute}.${parts.property2}` : \"\";\n\t\t\treturn `${parts.category}.${parts.attribute}.${parts.property1} ${operatorText} ${parts.value}${property2}${pcOnly}${npcOnly}${notZero}`;\n\t\t} else if (triggerType === \"advanced\") {\n\t\t\tconst advancedProperty2 = parts.advancedProperty2 ? ` ${parts.advancedProperty2}` : \"\";\n\t\t\treturn `${parts.advancedProperty} ${advancedOperatorText} ${parts.advancedValue}${advancedProperty2}${pcOnly}${npcOnly}${notZero}`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Executes a trigger calling predefined actions\n\t * @param {*} trigger\n\t * @param {*} target\n\t */\n\tstatic async _executeTrigger(trigger, target) {\n\t\tconst actor =\n\t\t\ttarget instanceof Actor\n\t\t\t\t? target\n\t\t\t\t: target instanceof TokenDocument || target instanceof Token\n\t\t\t\t\t? target.actor\n\t\t\t\t\t: null;\n\t\tconst token = target instanceof TokenDocument ? target : target instanceof Token ? target.document : null;\n\t\tconst conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tconst matchedApplyConditions = conditionMap.filter((m) => m.applyTrigger === trigger.id);\n\t\tconst matchedRemoveConditions = conditionMap.filter((m) => m.removeTrigger === trigger.id);\n\t\tconst matchedMacros = game.macros.contents.filter(\n\t\t\t(m) => m.getFlag(\"condition-lab-triggler\", \"macroTrigger\") === trigger.id\n\t\t);\n\t\tconst applyConditionNames = matchedApplyConditions.map((c) => c.name);\n\t\tconst removeConditionNames = matchedRemoveConditions.map((c) => c.name);\n\n\t\tif (applyConditionNames.length) {\n\t\t\tawait EnhancedConditions.addCondition(applyConditionNames, target, { warn: false });\n\t\t}\n\t\tif (removeConditionNames.length) {\n\t\t\tawait EnhancedConditions.removeCondition(removeConditionNames, target, { warn: false });\n\t\t}\n\n\t\tfor (const macro of matchedMacros) {\n\t\t\tawait macro.execute({ actor, token });\n\t\t}\n\t}\n\n\t/**\n\t * Processes an entity update and evaluates triggers\n\t * @param {*} entity\n\t * @param {*} update\n\t * @param {*} entryPoint1\n\t */\n\tstatic async _processUpdate(entity, update, entryPoint1) {\n\t\tif (!entity || !update) return;\n\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\n\t\t/**\n\t\t * Avoid issues with Multi-Level Tokens by ignoring clone tokens\n\t\t * @see Issue #491\n\t\t */\n\t\tif (foundry.utils.getProperty(entity, \"flags.multilevel-tokens.stoken\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasPlayerOwner = entity.hasPlayerOwner;\n\n\t\t/**\n\t\t * process each trigger in turn, checking for a match in the update payload,\n\t\t * if a match is found, then test the values using the appropriate operator,\n\t\t * if values match, apply any mapped conditions\n\t\t * @todo reduce this down to just mapped triggers at least\n\t\t */\n\t\tfor (let trigger of triggers) {\n\t\t\tconst triggerType = trigger.triggerType || \"simple\";\n\t\t\tconst pcOnly = trigger.pcOnly;\n\t\t\tconst npcOnly = trigger.npcOnly;\n\t\t\tconst notZero = trigger.notZero;\n\n\t\t\tif ((pcOnly && !hasPlayerOwner) || (npcOnly && hasPlayerOwner)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet matchString1;\n\t\t\tlet matchString2;\n\n\t\t\tif (triggerType === \"simple\") {\n\t\t\t\tconst baseMatchString = `${entryPoint1}${entryPoint1 ? \".\" : \"\"}${trigger.category}${\n\t\t\t\t\ttrigger.attribute ? `.${trigger.attribute}` : \"\"\n\t\t\t\t}`;\n\t\t\t\t// example : actor.system.attributes.hp.value or actor.data.status.isShaken\n\t\t\t\tmatchString1 = `${baseMatchString}${trigger.property1 ? `.${trigger.property1}` : \"\"}`;\n\n\t\t\t\t// example: actor.system.hp.max -- note this is unlikely to be in the update data\n\t\t\t\tmatchString2 = `${baseMatchString}${trigger.property2 ? `.${trigger.property2}` : \"\"}`;\n\t\t\t} else if (triggerType === \"advanced\") {\n\t\t\t\t// entry point differs based on actor vs token\n\t\t\t\tmatchString1 = trigger?.advancedActorProperty;\n\t\t\t\tmatchString2 = trigger?.advancedActorProperty2;\n\t\t\t\ttrigger.value = trigger.advancedValue;\n\t\t\t\ttrigger.operator = trigger.advancedOperator;\n\t\t\t}\n\n\t\t\t// If the update doesn't have a value that matches the 1st property this trigger should be skipped\n\t\t\tif (!foundry.utils.hasProperty(update, matchString1)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get a value from the update that matches the 1st property in the trigger\n\t\t\tconst updateValue = foundry.utils.getProperty(update, matchString1);\n\n\t\t\t// If the trigger is not allowed to run when value is zero, skip\n\t\t\tif (updateValue === 0 && notZero) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get a value from the entity that matches the 2nd property in the trigger (if any)\n\t\t\tconst property2Value = foundry.utils.getProperty(entity, matchString2);\n\n\t\t\t// We need the type later\n\t\t\tconst updateValueType = typeof updateValue;\n\n\t\t\t// example: \"=\"\n\t\t\tconst operator = Triggler.OPERATORS[trigger.operator];\n\n\t\t\t// percent requires whole different handling\n\t\t\tconst isPercent = trigger.value.endsWith(\"%\");\n\n\t\t\t// example: \"50\" -- check if the value can be converted to a number\n\t\t\tconst triggerValue = isPercent\n\t\t\t\t? Number(trigger.value.replace(\"%\", \"\"))\n\t\t\t\t: Sidekick.coerceType(trigger.value, updateValueType);\n\n\t\t\tconst triggers = [];\n\n\t\t\t/**\n\t\t\t * Switch on the operator checking it against the predefined operator choices\n\t\t\t * If it matches, then compare the values using the operator\n\t\t\t * @todo bulkify refactor this to add matched triggers to an array then execut the array at the end\n\t\t\t */\n\t\t\tswitch (operator) {\n\t\t\t\tcase Triggler.OPERATORS.eq:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue === property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue === triggerValue) {\n\t\t\t\t\t\t// execute the trigger's condition mappings\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.gt:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue > property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue > triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.gteq:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue >= property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue >= triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.lt:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue < property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue < triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.lteq:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue <= property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue <= triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Triggler.OPERATORS.ne:\n\t\t\t\t\tif (isPercent) {\n\t\t\t\t\t\t// example: (50 / 100) = 0.5;\n\t\t\t\t\t\tconst divisor = triggerValue / 100;\n\t\t\t\t\t\t// if property 1 update value = 50% of property 2 value\n\t\t\t\t\t\tif (updateValue !== property2Value * divisor) {\n\t\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (updateValue !== triggerValue) {\n\t\t\t\t\t\ttriggers.push({ trigger, entity });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { trigger, entity } of triggers) {\n\t\t\t\tawait Triggler._executeTrigger(trigger, entity);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\nimport { Triggler } from \"./triggler.js\";\n\nexport class TrigglerForm extends FormApplication {\n\tconstructor(object, options = { parent: null }) {\n\t\tsuper(object, options);\n\t\tthis.data = object || {};\n\t\tthis.parent = options.parent || null;\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-triggler-form\",\n\t\t\ttitle: \"Triggler\",\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/triggler-form.html\",\n\t\t\tclasses: [\"sheet\", \"triggler-form\"],\n\t\t\twidth: 780,\n\t\t\theight: \"auto\",\n\t\t\tresizable: true,\n\t\t\tcloseOnSubmit: false\n\t\t});\n\t}\n\n\tgetData() {\n\t\tconst id = this.data.id;\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\n\t\tif (this.noMerge) {\n\t\t\tthis.noMerge = false;\n\t\t} else if (id && triggers) {\n\t\t\tconst trigger = triggers.find((t) => t.id === id);\n\t\t\tfoundry.utils.mergeObject(this.data, trigger);\n\t\t}\n\n\t\tconst {\n\t\t\ttriggerType = \"simple\",\n\t\t\tcategory = null,\n\t\t\tattribute = null,\n\t\t\tproperty1 = null,\n\t\t\toperator = null,\n\t\t\tvalue = null,\n\t\t\tproperty2 = null,\n\t\t\tadvancedName = null,\n\t\t\tadvancedActorProperty = null,\n\t\t\tadvancedActorProperty2 = null,\n\t\t\tadvancedTokenProperty = null,\n\t\t\tadvancedTokenProperty2 = null,\n\t\t\tadvancedOperator = null,\n\t\t\tadvancedValue = null,\n\t\t\tpcOnly = null,\n\t\t\tnpcOnly = null,\n\t\t\tnotZero = null\n\t\t} = this.data || {};\n\t\tconst isSimpleTrigger = triggerType === \"simple\";\n\t\tconst isAdvancedTrigger = triggerType === \"advanced\";\n\t\tlet actorModel = game.model.Actor ?? {};\n\t\tconst isEmpty = Object.values(actorModel).every((obj) => Object.keys(obj).length === 0);\n\t\tlet mergedModel = null;\n\t\tif (isEmpty) {\n\t\t\tactorModel = CONFIG.Actor.dataModels ?? {};\n\t\t\tmergedModel = Object.keys(actorModel)\n\t\t\t\t.reduce((obj, key) =>\n\t\t\t\t\tfoundry.utils.mergeObject(obj, new CONFIG.Actor.documentClass({ name: \"CLT Actor\", type: key }).toObject().system), {});\n\t\t} else {\n\t\t\tmergedModel = Object.keys(actorModel)\n\t\t\t\t.reduce((accumulator, key) => foundry.utils.mergeObject(accumulator, actorModel[key]), {});\n\t\t}\n\t\tconst arrayToObj = (arr) => {\n\t\t\treturn arr.reduce((obj, key) => {\n\t\t\t\tobj[key] = key;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\t\t};\n\t\tconst categories = mergedModel ? arrayToObj(Object.keys(mergedModel).sort()) : {};\n\t\tconst attributes = category ? arrayToObj(Object.keys(mergedModel[category])) : {};\n\t\tconst properties = category && attribute ? arrayToObj(Object.keys(mergedModel[category][attribute])) : {};\n\t\tconst operators = Triggler.OPERATORS;\n\n\t\tconst triggerSelected = !!(id && triggers);\n\n\t\tif (!categories) {\n\t\t\tui.notifications.warn(\"Simple Trigger not supported. Try Advanced Trigger\");\n\t\t\t// return false;\n\t\t}\n\n\t\treturn {\n\t\t\tid,\n\t\t\ttriggerSelected,\n\t\t\ttriggers,\n\t\t\tisSimpleTrigger,\n\t\t\tisAdvancedTrigger,\n\t\t\tcategory,\n\t\t\tcategories,\n\t\t\tattribute,\n\t\t\tattributes,\n\t\t\tproperty1,\n\t\t\tproperties,\n\t\t\toperator,\n\t\t\toperators,\n\t\t\tvalue,\n\t\t\tproperty2,\n\t\t\tadvancedName,\n\t\t\tadvancedActorProperty,\n\t\t\tadvancedActorProperty2,\n\t\t\tadvancedTokenProperty,\n\t\t\tadvancedTokenProperty2,\n\t\t\tadvancedOperator,\n\t\t\tadvancedValue,\n\t\t\tpcOnly,\n\t\t\tnpcOnly,\n\t\t\tnotZero\n\t\t};\n\t}\n\n\tasync _render(force, options) {\n\t\tawait super._render(force, options);\n\t\tthis._originalTop = this.element[0].style.top;\n\t\tif (this._reposition && !this._repositioned) {\n\t\t\tthis._repositioned = true;\n\n\t\t\tconst el = this.element[0];\n\t\t\tconst scaledHeight = el.offsetHeight;\n\t\t\tconst tarT = (window.innerHeight - scaledHeight) / 2;\n\t\t\tconst maxT = Math.max(window.innerHeight - scaledHeight, 0);\n\t\t\tthis.setPosition({ top: Math.clamp(tarT, 0, maxT) });\n\t\t}\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\tconst triggerSelect = html.find(\"select[name='triggers']\");\n\t\tconst deleteTrigger = html.find(\"a.delete\");\n\n\t\t// Simple\n\t\tconst categorySelect = html.find(\"select[name='category']\");\n\t\tconst attributeSelect = html.find(\"select[name='attribute']\");\n\t\tconst property1Select = html.find(\"select[name='property1']\");\n\t\tconst operatorSelect = html.find(\"select[name='operator']\");\n\t\tconst valueInput = html.find(\"input[name='value']\");\n\t\tconst property2Select = html.find(\"select[name='property2']\");\n\n\t\t// Simple/Advanced Toggle\n\t\tconst triggerTypeRadio = html.find(\"input[name='triggerType']\");\n\n\t\t// Advanced\n\t\tconst advancedNameInput = html.find(\"input[name='advancedName']\");\n\t\tconst advancedActorPropertyInput = html.find(\"input[name='advancedActorProperty']\");\n\t\tconst advancedActorProperty2Input = html.find(\"input[name='advancedActorProperty2']\");\n\t\tconst advancedTokenPropertyInput = html.find(\"input[name='advancedTokenProperty']\");\n\t\tconst advancedTokenProperty2Input = html.find(\"input[name='advancedTokenProperty2']\");\n\t\tconst advancedOperatorSelect = html.find(\"select[name='advancedOperator']\");\n\t\tconst advancedValueInput = html.find(\"input[name='advancedValue']\");\n\n\t\t// Options\n\t\tconst pcOnlyCheckbox = html.find(\"input[name='pcOnly']\");\n\t\tconst npcsOnlyCheckbox = html.find(\"input[name='npcOnly']\");\n\t\tconst notZeroCheckbox = html.find(\"input[name='notZero']\");\n\t\tconst cancelButton = html.find(\"button[name='cancel']\");\n\n\t\tthis.noMerge = true;\n\n\t\ttriggerSelect.on(\"change\", (event) => {\n\t\t\tthis.data = {};\n\t\t\tthis.data.id = event.target.value;\n\t\t\tthis.noMerge = false;\n\t\t\tthis.render();\n\t\t});\n\t\tdeleteTrigger.on(\"click\", async (event) => {\n\t\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\t\tconst triggerIndex = triggers.findIndex((t) => t.id === this.data.id);\n\t\t\tif (triggerIndex === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst updatedTriggers = foundry.utils.duplicate(triggers);\n\n\t\t\tupdatedTriggers.splice(triggerIndex, 1);\n\n\t\t\tawait game.settings.set(\"condition-lab-triggler\", \"storedTriggers\", updatedTriggers);\n\t\t\tthis.data = {};\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Simple\n\t\tcategorySelect.on(\"change\", (event) => {\n\t\t\tthis.data.category = event.target.value;\n\t\t\tthis.data.attribute = null;\n\t\t\tthis.data.property1 = null;\n\t\t\tthis.data.property2 = null;\n\t\t\tthis.data.operator = null;\n\t\t\tthis.data.value = null;\n\n\t\t\tthis.render();\n\t\t});\n\t\tattributeSelect.on(\"change\", (event) => {\n\t\t\tthis.data.attribute = event.target.value;\n\t\t\tthis.data.property1 = null;\n\t\t\tthis.data.property2 = null;\n\t\t\tthis.data.operator = null;\n\t\t\tthis.data.value = null;\n\n\t\t\tthis.render();\n\t\t});\n\t\tproperty1Select.on(\"change\", (event) => {\n\t\t\tthis.data.property1 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tproperty2Select.on(\"change\", (event) => {\n\t\t\tthis.data.property2 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\toperatorSelect.on(\"change\", (event) => {\n\t\t\tthis.data.operator = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tvalueInput.on(\"change\", (event) => {\n\t\t\tthis.data.value = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Simple/Advanced Toggle\n\t\ttriggerTypeRadio.on(\"change\", (event) => {\n\t\t\tthis.data.triggerType = event.currentTarget.value;\n\t\t\tif (event.currentTarget.value === \"advanced\"\n\t\t\t\t&& this._originalTop === this.element[0].style.top\n\t\t\t\t&& !this._reposition) {\n\t\t\t\tthis._reposition = true;\n\t\t\t}\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Advanced\n\t\tadvancedNameInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedName = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedActorPropertyInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedActorProperty = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedActorProperty2Input.on(\"change\", (event) => {\n\t\t\tthis.data.advancedActorProperty2 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedTokenPropertyInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedTokenProperty = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedTokenProperty2Input.on(\"change\", (event) => {\n\t\t\tthis.data.advancedTokenProperty2 = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedOperatorSelect.on(\"change\", (event) => {\n\t\t\tthis.data.advancedOperator = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\t\tadvancedValueInput.on(\"change\", (event) => {\n\t\t\tthis.data.advancedValue = event.target.value;\n\t\t\tthis.render();\n\t\t});\n\n\t\t// Options\n\t\tpcOnlyCheckbox.on(\"click\", (event) => {\n\t\t\tthis.data.pcOnly = event.target.checked;\n\t\t\tthis.render();\n\t\t});\n\t\tnpcsOnlyCheckbox.on(\"click\", (event) => {\n\t\t\tthis.data.npcOnly = event.target.checked;\n\t\t\tthis.render();\n\t\t});\n\t\tnotZeroCheckbox.on(\"click\", (event) => {\n\t\t\tthis.data.notZero = event.target.checked;\n\t\t\tthis.render();\n\t\t});\n\n\t\tcancelButton.on(\"click\", (event) => {\n\t\t\tthis.close();\n\t\t});\n\t}\n\n\tasync _updateObject(event, formData) {\n\t\tif (!formData.category && !formData.advancedActorProperty && !formData.advancedTokenProperty) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst triggerType = formData?.triggerType;\n\n\t\tif (triggerType === \"advanced\" && !formData.advancedName.length) {\n\t\t\tui.notifications.warn(game.i18n.localize(\"CLT.TRIGGLER.App.AdvancedTrigger.Name.Warning\"));\n\t\t\treturn false;\n\t\t}\n\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tconst existingIds = triggers ? triggers.map((t) => t.id) : null;\n\t\tconst text = triggerType === \"simple\" ? Triggler._constructString(formData) : formData.advancedName;\n\n\t\tif (!text) return false;\n\n\t\tconst id = this.data.id;\n\t\tconst newData = foundry.utils.duplicate(formData);\n\t\tdelete newData.triggers;\n\n\t\tconst updatedTriggers = foundry.utils.duplicate(triggers);\n\t\tconst existingTrigger = triggers.find((t) => t.id === id);\n\t\tconst isNew = existingTrigger ? triggerType === \"simple\" || existingTrigger.advancedName !== text : true;\n\n\t\tif (!isNew) {\n\t\t\tconst updatedTrigger = foundry.utils.mergeObject(existingTrigger, newData);\n\t\t\tupdatedTrigger.text = text;\n\t\t\tupdatedTriggers[triggers.indexOf(existingTrigger)] = updatedTrigger;\n\t\t\tthis.data = updatedTrigger;\n\t\t} else {\n\t\t\tconst newTrigger = {\n\t\t\t\tid: Sidekick.createId(existingIds),\n\t\t\t\t...newData,\n\t\t\t\ttext\n\t\t\t};\n\t\t\tupdatedTriggers.push(newTrigger);\n\t\t\tthis.data = newTrigger;\n\t\t}\n\n\t\tconst setting = await game.settings.set(\"condition-lab-triggler\", \"storedTriggers\", updatedTriggers);\n\t\tif (!setting) ui.notifications.info(game.i18n.localize(\"CLT.TRIGGLER.App.SaveSuccessful\"));\n\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Exports the current map to JSON\n\t */\n\t_exportToJSON() {\n\t\tconst triggers = foundry.utils.duplicate(game.settings.get(\"condition-lab-triggler\", \"storedTriggers\"));\n\t\tconst data = {\n\t\t\tsystem: game.system.id,\n\t\t\ttriggers\n\t\t};\n\n\t\t// Trigger file save procedure\n\t\tconst filename = `cub-${game.world.id}-triggers.json`;\n\t\tsaveDataToFile(JSON.stringify(data, null, 2), \"text/json\", filename);\n\t}\n\n\t/**\n\t * Initiates an import via a dialog\n\t * Borrowed from foundry.js Entity class\n\t */\n\tasync _importFromJSONDialog() {\n\t\tnew Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.TRIGGLER.ImportTitle\"),\n\t\t\t// TODO change\n\t\t\tcontent: await renderTemplate(\"modules/condition-lab-triggler/templates/import-conditions.html\", {}),\n\t\t\tbuttons: {\n\t\t\t\timport: {\n\t\t\t\t\ticon: '<i class=\"fas fa-file-import\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\tthis._processImport(html);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Cancel\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"import\"\n\t\t}).render(true);\n\t}\n\n\t/**\n\t * Process a Condition Map Import\n\t * @param {*} html\n\t * @returns {*}\n\t */\n\tasync _processImport(html) {\n\t\tconst form = html.find(\"form\")[0];\n\n\t\tif (!form.data.files.length) {\n\t\t\treturn ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.Import.NoFile\"));\n\t\t}\n\n\t\tconst jsonFile = await readTextFromFile(form.data.files[0]);\n\t\tconst json = JSON.parse(jsonFile);\n\t\tconst triggers = Triggler.triggersFromJson(json);\n\n\t\tif (!triggers || !triggers?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalTriggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"storedTriggers\", originalTriggers.concat(triggers));\n\t\tthis.render();\n\t}\n\n\t/** @override */\n\t_getHeaderButtons() {\n\t\tlet buttons = super._getHeaderButtons();\n\n\t\tbuttons.unshift(\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\tclass: \"import\",\n\t\t\t\ticon: \"fas fa-file-import\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tawait this._importFromJSONDialog();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Export\"),\n\t\t\t\tclass: \"export\",\n\t\t\t\ticon: \"fas fa-file-export\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tthis._exportToJSON();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn buttons;\n\t}\n}\n","/**\n * Enhanced Condition Macro Config Application\n */\nexport default class EnhancedConditionMacroConfig extends FormApplication {\n\tconstructor(object, options) {\n\t\tsuper(object, options);\n\n\t\tthis.object = this.object ?? {};\n\t\tthis.object.macros = this.object.macros ?? [];\n\n\t\tthis.initialObject = foundry.utils.duplicate(this.object);\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-enhanced-condition-macro-config\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.MacroConfig.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/enhanced-condition-macro-config.hbs\",\n\t\t\tclasses: [\"sheet\"],\n\t\t\tcloseOnSubmit: false\n\t\t});\n\t}\n\n\tgetData() {\n\t\tconst conditionMacros = this.object.macros;\n\t\tconst applyMacroId = conditionMacros.find((m) => m.type === \"apply\")?.id;\n\t\tconst removeMacroId = conditionMacros.find((m) => m.type === \"remove\")?.id;\n\n\t\tconst macroChoices = game.macros?.contents\n\t\t\t?.map((m) => {\n\t\t\t\treturn { id: m.id, name: m.name };\n\t\t\t})\n\t\t\t.sort((a, b) => a.name.localeCompare(b.name));\n\n\t\treturn {\n\t\t\tcondition: this.object,\n\t\t\tapplyMacroId,\n\t\t\tremoveMacroId,\n\t\t\tmacroChoices\n\t\t};\n\t}\n\n\tasync _updateObject(event, formData) {\n\t\tthis.object.macros = [];\n\n\t\tfor (const field in formData) {\n\t\t\tconst type = field.split(\"-\").slice(-1)\n\t\t\t\t.pop() ?? \"\";\n\t\t\tconst tempMacro = { id: formData[field], type: type };\n\t\t\tthis.object.macros.push(tempMacro);\n\t\t}\n\n\t\tconst map = game.clt.conditions;\n\t\tconst newMap = foundry.utils.duplicate(map);\n\n\t\tlet conditionIndex = newMap.findIndex((c) => c.id === this.object.id);\n\t\tnewMap[conditionIndex] = this.object;\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t\tthis.close();\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\n\n/**\n * Enhanced Condition Trigger Config Application\n */\nexport default class EnhancedConditionOptionConfig extends FormApplication {\n\tconstructor(object, options) {\n\t\tsuper(object, options);\n\n\t\tthis.initialObject = foundry.utils.duplicate(this.object);\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-enhanced-condition-option-config\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OptionConfig.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/enhanced-condition-option-config.hbs\",\n\t\t\tclasses: [\"sheet\"],\n\t\t\tcloseOnSubmit: false,\n\t\t\twidth: 500\n\t\t});\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\tcondition: this.object,\n\t\t\toptionData: this.object.options,\n\t\t\tspecialStatus: CONFIG.specialStatusEffects\n\t\t};\n\t}\n\n\tactivateListeners(html) {\n\t\tconst checkboxes = html.find(\"input[type='checkbox']\");\n\n\t\t// for (const checkbox of checkboxes) {\n\t\tcheckboxes.on(\"change\", (event) => this._onCheckboxChange(event));\n\t\t// }\n\t}\n\n\t/**\n\t * Checkbox change event handler\n\t * @param {*} event\n\t * @returns {*}\n\t */\n\t_onCheckboxChange(event) {\n\t\tif (!event.target?.checked) return;\n\t\tconst targetName = event.target?.name;\n\t\tconst propertyName = Sidekick.toCamelCase(targetName, \"-\");\n\t\tconst specialStatusEffectsProps = Object.values({\n\t\t\tblinded: { optionProperty: \"blindToken\" },\n\t\t\tinvisible: { optionProperty: \"markInvisible\" }\n\t\t}).map((k) => k.optionProperty);\n\n\t\tif (!propertyName || !specialStatusEffectsProps) return;\n\n\t\tif (specialStatusEffectsProps.includes(propertyName)) {\n\t\t\tevent.detail = event.detail && event.detail instanceof Object ? event.detail : {};\n\t\t\tevent.detail.statusName = targetName;\n\t\t\tevent.detail.statusLabel = event.target.nextElementSibling?.innerText;\n\t\t\tevent.detail.conditionId = this.object.id;\n\t\t\treturn EnhancedConditionOptionConfig._onSpecialStatusEffectToggle(event);\n\t\t}\n\t}\n\n\t/**\n\t * Special Status Effect toggle handler\n\t * @param {*} event\n\t * @returns {*}\n\t */\n\tstatic async _onSpecialStatusEffectToggle(event) {\n\t\t// is another condition already using this special status effect?\n\t\tconst existingCondition = game.clt.conditions.find((c) => {\n\t\t\tconst optionValue = foundry.utils.getProperty(\n\t\t\t\tc,\n\t\t\t\t`options.${Sidekick.toCamelCase(event.detail.statusName, \"-\")}`\n\t\t\t);\n\t\t\treturn c.id !== event.detail.conditionId && optionValue;\n\t\t});\n\t\tif (existingCondition) {\n\t\t\tevent.preventDefault();\n\t\t\t// raise a dialog asking for override\n\t\t\tconst title = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OptionConfig.SpecialStatusEffectOverride.Title\");\n\t\t\tconst content = game.i18n.format(\n\t\t\t\t\"CLT.ENHANCED_CONDITIONS.OptionConfig.SpecialStatusEffectOverride.Content\",\n\t\t\t\t{\n\t\t\t\t\texistingCondition: existingCondition.name,\n\t\t\t\t\tstatusEffect: event.detail.statusLabel ?? event.detail.statusName\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst yes = () => { };\n\t\t\tconst no = () => {\n\t\t\t\treturn (event.target.checked = false);\n\t\t\t};\n\t\t\tconst defaultYes = false;\n\t\t\treturn Dialog.confirm({ title, content, yes, no, defaultYes }, {});\n\t\t}\n\n\t\treturn event;\n\t}\n\n\tasync _updateObject(event, formData) {\n\t\tthis.object.options = {};\n\t\tconst specialStatusEffectMapping = game.settings.get(\"condition-lab-triggler\",\n\t\t\t\"specialStatusEffectMapping\"\n\t\t);\n\t\tconst map = game.clt.conditionLab.map;\n\t\tconst newMap = foundry.utils.deepClone(map);\n\t\tlet conditionIndex = newMap.findIndex((c) => c.id === this.object.id);\n\n\t\tfor (const field in formData) {\n\t\t\tconst value = formData[field];\n\t\t\tconst propertyName = Sidekick.toCamelCase(field, \"-\");\n\t\t\tconst specialStatusEffect = this.getSpecialStatusEffectByField(field);\n\n\t\t\tif (specialStatusEffect) {\n\t\t\t\tconst existingMapping = foundry.utils.getProperty(specialStatusEffectMapping, specialStatusEffect);\n\t\t\t\tif (existingMapping === this.object.id && value === false) {\n\t\t\t\t\tthis.setSpecialStatusEffectMapping(specialStatusEffect);\n\t\t\t\t} else if (existingMapping !== this.object.id && value === true) {\n\t\t\t\t\tthis.setSpecialStatusEffectMapping(specialStatusEffect, this.object.id);\n\t\t\t\t\tif (existingMapping) {\n\t\t\t\t\t\tconst existingId = existingMapping.replace(\"condition-lab-triggler.\", \"\");\n\t\t\t\t\t\tconst existingConditionIndex = newMap.findIndex((c) => c.id === existingId);\n\t\t\t\t\t\tif (existingConditionIndex !== -1) {\n\t\t\t\t\t\t\tconst existingCondition = newMap[existingConditionIndex];\n\t\t\t\t\t\t\tconst options = existingCondition?.options;\n\t\t\t\t\t\t\toptions[propertyName] = false;\n\t\t\t\t\t\t\tnewMap[existingConditionIndex] = existingCondition;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.object.options[propertyName] = value;\n\t\t}\n\n\t\tnewMap[conditionIndex] = this.object;\n\t\tawait game.clt.conditionLab._saveMapping(newMap);\n\t\tawait this.close();\n\t}\n\n\t/**\n\t * Get the enum for a special status effect based on the field name\n\t * @param {string} field\n\t * @returns {string | undefined} BLIND, INVISIBLE, or DEFEATED\n\t */\n\tgetSpecialStatusEffectByField(field) {\n\t\tswitch (field) {\n\t\t\tcase \"blind-token\":\n\t\t\t\treturn \"BLIND\";\n\n\t\t\tcase \"mark-invisible\":\n\t\t\t\treturn \"INVISIBLE\";\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the special status effect to the provided condition Id\n\t * @param {string} effect\tEither BLIND, INVISIBLE, or DEFEATED\n\t * @param {string} conditionId\n\t */\n\tsetSpecialStatusEffectMapping(effect, conditionId = null) {\n\t\tif (!Object.prototype.hasOwnProperty.call(CONFIG.specialStatusEffects, effect)) return;\n\n\t\tCONFIG.specialStatusEffects[effect] = conditionId;\n\t\tgame.settings.set(\"condition-lab-triggler\",\n\t\t\t\"specialStatusEffectMapping\",\n\t\t\tCONFIG.specialStatusEffects\n\t\t);\n\t}\n}\n","/**\n * Enhanced Condition Trigger Config Application\n */\nexport default class EnhancedConditionTriggerConfig extends FormApplication {\n\tconstructor(object, options) {\n\t\tsuper(object, options);\n\n\t\tthis.object = this.object ?? {};\n\n\t\tthis.initialObject = foundry.utils.duplicate(this.object);\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-enhanced-condition-trigger-config\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.TriggerConfig.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/enhanced-condition-trigger-config.hbs\",\n\t\t\tclasses: [\"sheet\"],\n\t\t\tcloseOnSubmit: false,\n\t\t\twidth: 500\n\t\t});\n\t}\n\n\tgetData() {\n\t\treturn {\n\t\t\tcondition: this.object,\n\t\t\tapplyTriggerId: this.object.applyTrigger,\n\t\t\tremoveTriggerId: this.object.removeTrigger,\n\t\t\ttriggerChoices: game.settings.get(\"condition-lab-triggler\", \"storedTriggers\") ?? []\n\t\t};\n\t}\n\n\t/**\n\t * Update Object on Form Submission\n\t * @param {*} event\n\t * @param {*} formData\n\t */\n\tasync _updateObject(event, formData) {\n\t\tthis.object.macros = [];\n\n\t\tfor (const field in formData) {\n\t\t\tconst type = field.split(\"-\").slice(-1)\n\t\t\t\t.pop() ?? \"\";\n\t\t\tthis.object[`${type}Trigger`] = formData[field];\n\t\t}\n\n\t\tconst map = game.clt.conditions;\n\t\tconst newMap = foundry.utils.duplicate(map);\n\n\t\tlet conditionIndex = newMap.findIndex((c) => c.id === this.object.id);\n\t\tnewMap[conditionIndex] = this.object;\n\t\tgame.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t\tthis.close();\n\t}\n}\n","export default class EnhancedEffectConfig extends ActiveEffectConfig {\n\tget title() {\n\t\tconst reference = this.document.name ? ` ${game.i18n.localize(this.document.name)}` : \"\";\n\t\treturn `${game.i18n.localize(this.document.constructor.metadata.label)}${reference}`;\n\t}\n\n\t/** @override */\n\tasync getData(options = {}) {\n\t\tconst context = await DocumentSheet.prototype.getData.call(this, options);\n\t\tcontext.descriptionHTML = await TextEditor.enrichHTML(this.object.description, {\n\t\t\tasync: true,\n\t\t\tsecrets: this.object.isOwner\n\t\t});\n\t\tconst legacyTransfer = CONFIG.ActiveEffect.legacyTransferral;\n\t\tconst labels = {\n\t\t\ttransfer: {\n\t\t\t\tname: game.i18n.localize(`EFFECT.Transfer${legacyTransfer ? \"Legacy\" : \"\"}`),\n\t\t\t\thint: game.i18n.localize(`EFFECT.TransferHint${legacyTransfer ? \"Legacy\" : \"\"}`)\n\t\t\t}\n\t\t};\n\t\tconst data = {\n\t\t\tlabels,\n\t\t\teffect: this.object, // Backwards compatibility\n\t\t\tdata: this.object,\n\t\t\tisActorEffect: true,\n\t\t\tisItemEffect: false,\n\t\t\tsubmitText: \"EFFECT.Submit\",\n\t\t\tmodes: Object.entries(CONST.ACTIVE_EFFECT_MODES).reduce((obj, e) => {\n\t\t\t\tobj[e[1]] = game.i18n.localize(`EFFECT.MODE_${e[0]}`);\n\t\t\t\treturn obj;\n\t\t\t}, {})\n\t\t};\n\t\treturn foundry.utils.mergeObject(context, data);\n\t}\n\n\t/**\n\t * Override default update object behaviour\n\t * @param {*} event\n\t * @param {*} formData\n\t * @override\n\t */\n\tasync _updateObject(event, formData) {\n\t\tconst conditionIdFlag = foundry.utils.getProperty(\n\t\t\tthis.object.flags,\n\t\t\t`condition-lab-triggler.${\"conditionId\"}`\n\t\t);\n\t\tif (!conditionIdFlag) return;\n\n\t\t// find the matching condition row\n\t\tconst map = ui.clt?.conditionLab?.map;\n\n\t\tif (!map && !map.length) return;\n\n\t\tconst conditionId = conditionIdFlag.replace(\"condition-lab-triggler.\", \"\");\n\t\tconst condition = map.find((c) => c.id === conditionId);\n\n\t\tif (!condition) return;\n\n\t\t// update the effect data\n\n\t\tcondition.activeEffect = condition.activeEffect\n\t\t\t? foundry.utils.mergeObject(condition.activeEffect, formData)\n\t\t\t: formData;\n\n\t\tthis.object.updateSource(formData);\n\t\tif (this._state === 2) await this.render();\n\t\tif (ui.clt.conditionLab) {\n\t\t\tui.clt.conditionLab.map = ui.clt.conditionLab.updatedMap;\n\t\t\t// ui.clt.conditionLab.unsaved = true;\n\t\t\tui.clt.conditionLab.render();\n\t\t}\n\t}\n}\n","import { Sidekick } from \"../sidekick.js\";\nimport { TrigglerForm } from \"../triggler/triggler-form.js\";\nimport EnhancedConditionMacroConfig from \"./enhanced-condition-macro.js\";\nimport EnhancedConditionOptionConfig from \"./enhanced-condition-option.js\";\nimport EnhancedConditionTriggerConfig from \"./enhanced-condition-trigger.js\";\nimport { EnhancedConditions } from \"./enhanced-conditions.js\";\nimport EnhancedEffectConfig from \"./enhanced-effect-config.js\";\n\n/**\n * Form application for managing mapping of Conditions to Icons and JournalEntries\n */\nexport class ConditionLab extends FormApplication {\n\tconstructor(object, options = {}) {\n\t\tsuper(object, options);\n\t\tgame.clt.conditionLab = this;\n\t\tthis.data = (game.clt.conditionLab ? game.clt.conditionLab.data : object) ?? null;\n\t\tthis.system = game.system.id;\n\t\tthis.initialMapType = game.settings.get(\"condition-lab-triggler\", \"conditionMapType\");\n\t\tthis.mapType = null;\n\t\tthis.initialMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tthis.map = null;\n\t\tthis.displayedMap = null;\n\t\tthis.maps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\tthis.filterValue = \"\";\n\t\tthis.sortDirection = \"\";\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"cub-condition-lab\",\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.Title\"),\n\t\t\ttemplate: \"modules/condition-lab-triggler/templates/condition-lab.hbs\",\n\t\t\tclasses: [\"sheet\", \"condition-lab-form\"],\n\t\t\twidth: 780,\n\t\t\theight: 680,\n\t\t\tresizable: true,\n\t\t\tcloseOnSubmit: false,\n\t\t\tscrollY: [\"ol.condition-lab\"],\n\t\t\tdragDrop: [{ dropSelector: \"div.text-entry.reference\" }]\n\t\t});\n\t}\n\n\t/**\n\t * Get updated map by combining existing in-memory map with current formdata\n\t * @returns {object[]}\n\t */\n\tget updatedMap() {\n\t\tconst submitData = this._buildSubmitData();\n\t\tconst mergedMap = this._processFormData(submitData);\n\t\treturn EnhancedConditions._prepareMap(mergedMap);\n\t}\n\n\t/**\n\t * Gets data for the template render\n\t * @returns {object}\n\t */\n\tasync getData() {\n\t\tconst sortDirection = this.sortDirection;\n\t\tconst sortTitle = game.i18n.localize(\n\t\t\t`CLT.ENHANCED_CONDITIONS.ConditionLab.SortAnchorTitle.${sortDirection ? sortDirection : \"unsorted\"}`\n\t\t);\n\t\tconst filterTitle = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.FilterInputTitle\");\n\t\tconst filterValue = this.filterValue;\n\n\t\tconst defaultMaps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\t\t// const mappedSystems = Object.keys(defaultMaps) || [];\n\t\tconst mappedSystems = [];\n\t\tconst mapTypeChoices = game.settings.settings.get(\"condition-lab-triggler.conditionMapType\").choices;\n\n\t\t// If there's no default map for this system don't provide the \"default\" choice\n\t\tif (!mappedSystems.includes(game.system.id)) {\n\t\t\tif (this.initialMap.length) {\n\t\t\t\tmapTypeChoices.default = game.i18n.localize(\"CLT.SETTINGS.EnhancedConditions.MapType.Choices.inferred\");\n\t\t\t} else {\n\t\t\t\tdelete mapTypeChoices.default;\n\t\t\t}\n\t\t}\n\n\t\tthis.mapType ||= this.initialMapType || \"other\";\n\t\tconst conditionMap = (this.map ||= foundry.utils.duplicate(this.initialMap));\n\t\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\").map((t) => {\n\t\t\treturn [t.id, t.text];\n\t\t});\n\n\t\tconst isDefault = this.mapType === \"default\";\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\t\tconst disableChatOutput = isDefault || !outputChatSetting;\n\n\t\tfor (const condition of conditionMap) {\n\t\t\tcondition.name = game.i18n.localize(condition.name ?? condition.label);\n\t\t\tcondition.img ??= condition.icon;\n\t\t\t// Check if the row exists in the saved map\n\t\t\tconst existingEntry = this.initialMap.find((e) => e.id === condition.id) ?? null;\n\t\t\tcondition.isNew = !existingEntry;\n\t\t\tcondition.isChanged = condition.isNew || this._hasEntryChanged(condition, existingEntry);\n\n\t\t\t// Set the Output to Chat checkbox\n\t\t\tcondition.options = condition.options ?? {};\n\t\t\tcondition.enrichedReference = condition.reference\n\t\t\t\t? await TextEditor.enrichHTML(`@UUID[${condition.reference}]`, { documents: true })\n\t\t\t\t: \"\";\n\n\t\t\t// Default all entries to show\n\t\t\tcondition.hidden = condition.hidden ?? false;\n\t\t}\n\n\t\t// Pre-apply any filter value\n\t\tthis.displayedMap = filterValue\n\t\t\t? this._filterMapByName(conditionMap, filterValue)\n\t\t\t: foundry.utils.duplicate(conditionMap);\n\n\t\t// Sort the displayed map based on the sort direction\n\t\tif (sortDirection) {\n\t\t\tthis.displayedMap = this._sortMapByName(this.displayedMap, sortDirection);\n\t\t}\n\n\t\tconst displayedMap = this.displayedMap;\n\t\tconst conditionMapLength = displayedMap.length - 1;\n\n\t\tlet unsavedMap = false;\n\t\tif (\n\t\t\tthis.mapType !== this.initialMapType\n\t\t\t|| conditionMap?.length !== this.initialMap?.length\n\t\t\t|| conditionMap.some((c) => c.isNew || c.isChanged)\n\t\t) {\n\t\t\tunsavedMap = true;\n\t\t}\n\n\t\t// Prepare final data object for template\n\t\tconst data = {\n\t\t\tsortTitle,\n\t\t\tsortDirection,\n\t\t\tfilterTitle,\n\t\t\tfilterValue,\n\t\t\tmapTypeChoices,\n\t\t\tmapType: this.mapType,\n\t\t\tconditionMap,\n\t\t\tdisplayedMap,\n\t\t\tconditionMapLength,\n\t\t\ttriggers,\n\t\t\tisDefault,\n\t\t\tdisableChatOutput,\n\t\t\tunsavedMap\n\t\t};\n\n\t\tthis.data = data;\n\t\treturn data;\n\t}\n\n\t/**\n\t * Enriches submit data with existing map to ensure continuity\n\t * @returns {object}\n\t */\n\t_buildSubmitData() {\n\t\tconst map = this.sortDirection ? this._sortMapByName(this.map) : this.map;\n\t\tconst data =\n\t\t\tmap?.reduce((acc, entry, index) => {\n\t\t\t\tacc[`id-${index}`] = entry.id;\n\t\t\t\treturn acc;\n\t\t\t}, {}) ?? {};\n\t\treturn this._getSubmitData(data);\n\t}\n\n\t/**\n\t * Processes the Form Data and builds a usable Condition Map\n\t * @param {object} formData\n\t * @returns {object}\n\t */\n\t_processFormData(formData) {\n\t\tlet ids = [];\n\t\tlet conditions = [];\n\t\tlet icons = [];\n\t\tlet references = [];\n\t\tlet newMap = [];\n\t\tconst rows = [];\n\t\tconst existingMap = this.map ?? game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\t\t// need to tighten these up to check for the existence of digits after the word\n\t\tconst conditionRegex = /condition/i;\n\t\tconst idRegex = new RegExp(/^id/, \"i\");\n\t\tconst iconRegex = /icon/i;\n\t\tconst referenceRegex = /reference/i;\n\t\tconst rowRegex = new RegExp(/\\d+$/);\n\n\t\t// write it back to the relevant condition map\n\t\t// @todo: maybe switch to a switch\n\t\tfor (let e in formData) {\n\t\t\tconst rowMatch = e.match(rowRegex);\n\t\t\tconst row = rowMatch ? rowMatch[0] : null;\n\n\t\t\tif (!row) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trows.push(row);\n\n\t\t\tif (e.match(idRegex)) {\n\t\t\t\tids[row] = formData[e];\n\t\t\t} else if (e.match(conditionRegex)) {\n\t\t\t\tconditions[row] = formData[e];\n\t\t\t} else if (e.match(iconRegex)) {\n\t\t\t\ticons[row] = formData[e];\n\t\t\t} else if (e.match(referenceRegex)) {\n\t\t\t\treferences[row] = formData[e];\n\t\t\t}\n\t\t}\n\n\t\tconst uniqueRows = [...new Set(rows)];\n\n\t\tfor (let i = 0; i < uniqueRows.length; i++) {\n\t\t\tconst id = ids[i] ?? null;\n\t\t\tconst name = conditions[i];\n\t\t\tconst existingCondition = existingMap && id ? existingMap.find((c) => c.id === id) : null;\n\t\t\tconst {\n\t\t\t\tactiveEffect = null,\n\t\t\t\tapplyTrigger = null,\n\t\t\t\tremoveTrigger = null,\n\t\t\t\tmacros = null,\n\t\t\t\toptions = {}\n\t\t\t} = existingCondition || {};\n\n\t\t\tconst condition = {\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\timg: icons[i],\n\t\t\t\treference: references[i],\n\t\t\t\tapplyTrigger,\n\t\t\t\tremoveTrigger,\n\t\t\t\tactiveEffect,\n\t\t\t\tmacros,\n\t\t\t\toptions\n\t\t\t};\n\t\t\tfor (const [oldKey, newKey] of Object.entries({ label: \"name\", icon: \"img\" })) {\n\t\t\t\tconst msg = `StatusEffectConfig#${oldKey} has been deprecated in favor of StatusEffectConfig#${newKey}`;\n\t\t\t\tObject.defineProperty(condition, oldKey, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tfoundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n\t\t\t\t\t\treturn this[newKey];\n\t\t\t\t\t},\n\t\t\t\t\tset(value) {\n\t\t\t\t\t\tfoundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n\t\t\t\t\t\tthis[newKey] = value;\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tconfigurable: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tnewMap.push(condition);\n\t\t}\n\n\t\treturn newMap;\n\t}\n\n\t/**\n\t * Restore defaults for a mapping\n\t * @param {object} options\n\t * @param {boolean} options.clearCache\n\t */\n\tasync _restoreDefaults({ clearCache = false } = {}) {\n\t\tconst system = this.system;\n\t\tlet defaultMaps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\n\t\tif (clearCache) {\n\t\t\tdefaultMaps = await EnhancedConditions._loadDefaultMaps();\n\t\t\tgame.settings.set(\"condition-lab-triggler\", \"defaultConditionMaps\", defaultMaps);\n\t\t}\n\t\tconst tempMap = this.mapType !== \"other\" && defaultMaps && defaultMaps[system] ? defaultMaps[system] : [];\n\n\t\t// If the mapType is other then the map should be empty, otherwise it's the default map for the system\n\t\tthis.map = tempMap;\n\t\tthis.render(true);\n\t}\n\n\t/**\n\t * Take the new map and write it back to settings, overwriting existing\n\t * @param {object} event\n\t * @param {object} formData\n\t */\n\tasync _updateObject(event, formData) {\n\t\tconst showDialogSetting = game.settings.get(\"condition-lab-triggler\", \"showSortDirectionDialog\");\n\n\t\tif (this.sortDirection && showDialogSetting) {\n\t\t\tawait Dialog.confirm({\n\t\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.Title\"),\n\t\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.Content\"),\n\t\t\t\tyes: ($html) => {\n\t\t\t\t\tconst checkbox = $html[0].querySelector(\"input[name='dont-show-again']\");\n\t\t\t\t\tif (checkbox.checked) {\n\t\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"showSortDirectionDialog\", false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._processFormUpdate(formData);\n\t\t\t\t},\n\t\t\t\tno: () => {}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._processFormUpdate(formData);\n\t\t}\n\t}\n\n\t/**\n\t * Process Condition Lab formdata and then save changes\n\t * @param {*} formData\n\t */\n\tasync _processFormUpdate(formData) {\n\t\tconst mapType = formData[\"map-type\"];\n\t\tlet newMap = this.updatedMap;\n\n\t\tif (mapType === \"default\") {\n\t\t\tconst defaultMap = EnhancedConditions.getDefaultMap(this.system);\n\t\t\tnewMap = foundry.utils.mergeObject(newMap, defaultMap);\n\t\t}\n\n\t\tthis._saveMapping(newMap, mapType);\n\t}\n\n\t/**\n\t * Saves a given map and option map type to storage\n\t * @param {*} newMap\n\t * @param {*} mapType\n\t */\n\tasync _saveMapping(newMap, mapType = this.mapType) {\n\t\tthis.mapType = this.initialMapType = mapType;\n\t\tconst preparedMap = EnhancedConditions._prepareMap(newMap);\n\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"conditionMapType\", mapType);\n\t\tawait game.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", preparedMap);\n\n\t\tthis._finaliseSave(preparedMap);\n\t}\n\n\t/**\n\t * Performs final steps after saving mapping\n\t * @param {*} preparedMap\n\t */\n\tasync _finaliseSave(preparedMap) {\n\t\tthis.map = this.initialMap = preparedMap;\n\t\tthis.unsaved = false;\n\t\tthis.sortDirection = \"\";\n\n\t\tui.notifications.info(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.SaveSuccess\"));\n\t\tthis.render(true);\n\t}\n\n\t/**\n\t * Exports the current map to JSON\n\t */\n\t_exportToJSON() {\n\t\tconst map = foundry.utils.duplicate(this.map);\n\t\tconst data = {\n\t\t\tsystem: game.system.id,\n\t\t\tmap\n\t\t};\n\n\t\t// Trigger file save procedure\n\t\tconst filename = `cub-${game.system.id}-condition-map.json`;\n\t\tsaveDataToFile(JSON.stringify(data, null, 2), \"text/json\", filename);\n\t}\n\n\t/**\n\t * Initiates an import via a dialog\n\t * Borrowed from foundry.js Entity class\n\t */\n\tasync _importFromJSONDialog() {\n\t\tnew Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ImportTitle\"),\n\t\t\tcontent: await renderTemplate(\"modules/condition-lab-triggler/templates/import-conditions.html\", {}),\n\t\t\tbuttons: {\n\t\t\t\timport: {\n\t\t\t\t\ticon: '<i class=\"fas fa-file-import\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\tthis._processImport(html);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Cancel\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"import\"\n\t\t}).render(true);\n\t}\n\n\t/**\n\t * Process a Condition Map Import\n\t * @param {*} html\n\t * @returns {*}\n\t */\n\tasync _processImport(html) {\n\t\tconst form = html.find(\"form\")[0];\n\n\t\tif (!form.data.files.length) {\n\t\t\treturn ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.Import.NoFile\"));\n\t\t}\n\n\t\tconst jsonFile = await readTextFromFile(form.data.files[0]);\n\t\tconst json = JSON.parse(jsonFile);\n\t\tconst map = EnhancedConditions.mapFromJson(json);\n\n\t\tif (!map || !map?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mapType = \"other\";\n\t\tthis.map = map;\n\t\tthis.render();\n\t}\n\n\t/** @override */\n\t_getHeaderButtons() {\n\t\tlet buttons = super._getHeaderButtons();\n\n\t\tbuttons.unshift(\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Import\"),\n\t\t\t\tclass: \"import\",\n\t\t\t\ticon: \"fas fa-file-import\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tthis._importFromJSONDialog();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: game.i18n.localize(\"CLT.WORDS.Export\"),\n\t\t\t\tclass: \"export\",\n\t\t\t\ticon: \"fas fa-file-export\",\n\t\t\t\tonclick: async (ev) => {\n\t\t\t\t\tthis._exportToJSON();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn buttons;\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                 Hook Handlers                */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Condition Lab Render handler\n\t * @param {*} app\n\t * @param {*} html\n\t * @param {*} data\n\t */\n\tstatic _onRender(app, html, data) {\n\t\tui.clt.conditionLab = app;\n\t}\n\n\t/**\n\t * Render save dialog hook handler\n\t * @param {*} app\n\t * @param {jQuery} html\n\t * @param {*} data\n\t */\n\tstatic _onRenderSaveDialog(app, html, data) {\n\t\tconst contentDiv = html[0].querySelector(\"div.dialog-content\");\n\t\tconst checkbox = `<div class=\"form-group\"><label class=\"dont-show-again-checkbox\">${game.i18n.localize(\n\t\t\t\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.CheckboxText\"\n\t\t)}<input type=\"checkbox\" name=\"dont-show-again\"></label></div>`;\n\t\tcontentDiv.insertAdjacentHTML(\"beforeend\", checkbox);\n\t\tapp.setPosition({ height: app.position.height + 32 });\n\t}\n\n\t/**\n\t * Render restore defaults hook handler\n\t * @param {*} app\n\t * @param {*} html\n\t * @param {*} data\n\t */\n\tstatic _onRenderRestoreDefaultsDialog(app, html, data) {\n\t\tif (game.clt.conditionLab.mapType !== \"default\") return;\n\n\t\tconst contentDiv = html[0].querySelector(\"div.dialog-content\");\n\t\tconst checkbox = `<div class=\"form-group\">\n\t\t<label>${game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.RestoreDefaultClearCache.CheckboxText\")}</label>\n\t\t<input type=\"checkbox\" name=\"clear-cache\">\n\t\t</div>`;\n\t\tcontentDiv.insertAdjacentHTML(\"beforeend\", checkbox);\n\t\tapp.setPosition({ height: app.position.height + 32 });\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                Event Handlers                */\n\t/* -------------------------------------------- */\n\n\t/** @override */\n\tactivateListeners(html) {\n\t\tconst inputs = html.find(\"input\");\n\t\tconst mapTypeSelector = html.find(\"select[class='map-type']\");\n\t\tconst activeEffectButton = html.find(\"button.active-effect-config\");\n\t\tconst triggerAnchor = html.find(\"a[class='trigger']\");\n\t\tconst addRowAnchor = html.find(\"a[name='add-row']\");\n\t\tconst removeRowAnchor = html.find(\"a[class='remove-row']\");\n\t\tconst changeOrderAnchor = html.find(\".row-controls a.move-up, .row-controls a.move-down\");\n\t\tconst restoreDefaultsButton = html.find(\"button[class='restore-defaults']\");\n\t\tconst resetFormButton = html.find(\"button[name='reset']\");\n\t\tconst filterInput = html.find(\"input[name='filter-list']\");\n\t\tconst sortButton = html.find(\"a.sort-list\");\n\t\tconst macroConfigButton = html.find(\"button.macro-config\");\n\t\tconst triggerConfigButton = html.find(\"button.trigger-config\");\n\t\tconst optionConfigButton = html.find(\"button.option-config\");\n\n\t\tinputs.on(\"change\", (event) => this._onChangeInputs(event));\n\t\tmapTypeSelector.on(\"change\", (event) => this._onChangeMapType(event));\n\t\tactiveEffectButton.on(\"click\", (event) => this._onClickActiveEffectConfig(event));\n\t\ttriggerAnchor.on(\"click\", (event) => this._onOpenTrigglerForm(event));\n\t\taddRowAnchor.on(\"click\", async (event) => this._onAddRow(event));\n\t\tremoveRowAnchor.on(\"click\", async (event) => this._onRemoveRow(event));\n\t\tchangeOrderAnchor.on(\"click\", (event) => this._onChangeSortOrder(event));\n\t\trestoreDefaultsButton.on(\"click\", async (event) => this._onRestoreDefaults(event));\n\t\tresetFormButton.on(\"click\", (event) => this._onResetForm(event));\n\t\tfilterInput.on(\"input\", (event) => this._onChangeFilter(event));\n\t\tsortButton.on(\"click\", (event) => this._onClickSortButton(event));\n\t\tmacroConfigButton.on(\"click\", (event) => this._onClickMacroConfig(event));\n\t\ttriggerConfigButton.on(\"click\", (event) => this._onClickTriggerConfig(event));\n\t\toptionConfigButton.on(\"click\", (event) => this._onClickOptionConfig(event));\n\n\t\tsuper.activateListeners(html);\n\t}\n\n\t/** @override */\n\t_activateCoreListeners(html) {\n\t\tsuper._activateCoreListeners(html);\n\t\tif (this.isEditable) html.find(\"img[data-edit]\").on(\"click\", this._onEditImage.bind(this));\n\t}\n\n\t/**\n\t * Input change handler\n\t * @param {*} event\n\t * @returns {Application.render}\n\t */\n\tasync _onChangeInputs(event) {\n\t\tconst name = event.target.name;\n\t\tif (name.startsWith(\"filter-list\")) return;\n\t\tthis.map = this.updatedMap;\n\t\tif (!this.map.length) return;\n\t\tif (name.startsWith(\"reference\")) this._onChangeReferenceId(event);\n\t\tif (this._hasMapChanged()) return this.render();\n\t}\n\n\t/**\n\t * Filter input change handler\n\t * @param {*} event\n\t */\n\t_onChangeFilter(event) {\n\t\tconst input = event.target;\n\t\tconst inputValue = input?.value;\n\t\tthis.filterValue = inputValue ?? \"\";\n\t\tthis.displayedMap = this._filterMapByName(this.map, this.filterValue);\n\n\t\tthis.displayedRowIds = this.displayedMap.filter((r) => !r.hidden).map((r) => r.id);\n\n\t\tconst conditionRowEls = this._element[0].querySelectorAll(\"li.row\");\n\t\tfor (const el of conditionRowEls) {\n\t\t\tconst conditionId = el.dataset.conditionId;\n\t\t\tif (this.displayedRowIds.includes(conditionId)) {\n\t\t\t\tel.classList.remove(\"hidden\");\n\t\t\t} else {\n\t\t\t\tel.classList.add(\"hidden\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filter the given map by the name property using the supplied filter value, marking filtered entries as \"hidden\"\n\t * @param {Array} map\n\t * @param {string} filter\n\t * @returns {object[]} filteredMap\n\t */\n\t_filterMapByName(map, filter) {\n\t\treturn map.map((c) => ({ ...c, hidden: !c.name.toLowerCase().includes(filter.toLowerCase()) }));\n\t}\n\n\t/**\n\t * Change Map Type event handler\n\t * @param {*} event\n\t */\n\tasync _onChangeMapType(event) {\n\t\tevent.preventDefault();\n\t\tconst selection = $(event.target).find(\"option:selected\");\n\t\tconst newType = (this.mapType = selection.val());\n\n\t\tswitch (newType) {\n\t\t\tcase \"default\":\n\t\t\tcase \"custom\": {\n\t\t\t\tconst defaultMap = EnhancedConditions.getDefaultMap(this.system);\n\t\t\t\tthis.map = defaultMap?.length ? EnhancedConditions._prepareMap(defaultMap) : [];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase \"other\": {\n\t\t\t\tthis.map = this.initialMapType === \"other\" ? this.initialMap : [];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.data = null;\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Handle click Active Effect Config button\n\t * @param {*} event\n\t */\n\tasync _onClickActiveEffectConfig(event) {\n\t\tconst li = event.currentTarget.closest(\"li\");\n\t\tconst conditionId = li ? li.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst conditions = this.map ?? game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\t\tconst condition = conditions.length ? conditions.find((c) => c.id === conditionId) : null;\n\n\t\tif (!condition) return;\n\n\t\tconst conditionEffect = condition.activeEffect ?? EnhancedConditions.getActiveEffects(condition)[0];\n\n\t\tif (!conditionEffect) return;\n\n\t\tif (!foundry.utils.hasProperty(conditionEffect, \"flags.condition-lab-triggler.conditionId\")) {\n\t\t\tsetProperty(\n\t\t\t\tconditionEffect,\n\t\t\t\t\"flags.condition-lab-triggler.conditionId\",\n\t\t\t\tconditionId\n\t\t\t);\n\t\t}\n\n\t\t// Build a fake effect object for the ActiveEffectConfig sheet\n\t\t// @todo #544 make Conditions an ActiveEffect extension?\n\t\tdelete conditionEffect.id;\n\t\tconst effect = new ActiveEffect(conditionEffect);\n\t\teffect.testUserPermission = (...args) => {\n\t\t\treturn true;\n\t\t};\n\n\t\tnew EnhancedEffectConfig(effect).render(true);\n\t}\n\n\t/**\n\t * Reference Link change handler\n\t * @param {*} event\n\t */\n\tasync _onChangeReferenceId(event) {\n\t\tevent.preventDefault();\n\t\tconst input = event.currentTarget ?? event.target;\n\t\tinput.nextElementSibling.innerHTML = await TextEditor.enrichHTML(input.value, { documents: true });\n\t}\n\n\t/**\n\t * Open Triggler form event handler\n\t * @param {*} event\n\t */\n\t_onOpenTrigglerForm(event) {\n\t\tevent.preventDefault();\n\t\tconst anchor = event.currentTarget;\n\t\tconst select = anchor.parentElement.nextElementSibling;\n\t\tconst id = select.value;\n\t\tconst conditionLabRow = select.name.match(/\\d+$/)[0];\n\n\t\tconst data = {\n\t\t\tid,\n\t\t\tconditionLabRow\n\t\t};\n\n\t\tnew TrigglerForm(data, { parent: this }).render(true);\n\t}\n\n\t/**\n\t * Add Row event handler\n\t * @param {*} event\n\t */\n\t_onAddRow(event) {\n\t\tevent.preventDefault();\n\n\t\tconst existingNewConditions = this.map.filter((m) => m.name.match(/^New Condition \\d+$/));\n\t\tconst newConditionIndex = existingNewConditions.length\n\t\t\t? Math.max(...existingNewConditions.map((m) => Number(m.name.match(/\\d+$/g)[0]))) + 1\n\t\t\t: 1;\n\t\tconst newConditionName = `New Condition ${newConditionIndex}`;\n\t\tconst fdMap = this.updatedMap;\n\n\t\tif (this.mapType === \"default\") {\n\t\t\tconst defaultMap = EnhancedConditions.getDefaultMap(this.system);\n\t\t\tthis.map = foundry.utils.mergeObject(fdMap, defaultMap);\n\t\t} else {\n\t\t\tthis.map = fdMap;\n\t\t}\n\n\t\tconst newMap = foundry.utils.duplicate(this.map);\n\t\tconst exisitingIds = this.map.filter((c) => c.id).map((c) => c.id);\n\t\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\n\t\tnewMap.push({\n\t\t\tid: Sidekick.createId(exisitingIds),\n\t\t\tname: newConditionName,\n\t\t\timg: \"icons/svg/d20-black.svg\",\n\t\t\treference: \"\",\n\t\t\ttrigger: \"\",\n\t\t\toptions: {\n\t\t\t\toutputChat: outputChatSetting\n\t\t\t}\n\t\t});\n\n\t\tconst newMapType = this.mapType === \"default\" ? \"custom\" : this.mapType;\n\n\t\tthis.mapType = newMapType;\n\t\tthis.map = newMap;\n\t\tthis.data = null;\n\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Handler for remove row event\n\t * @param {*} event\n\t */\n\t_onRemoveRow(event) {\n\t\tevent.preventDefault();\n\n\t\tthis.map = this.updatedMap;\n\n\t\tconst row = event.currentTarget.name.match(/\\d+$/)[0];\n\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ConfirmDeleteTitle\"),\n\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ConfirmDeleteContent\"),\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fa fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\tcallback: async (event) => {\n\t\t\t\t\t\tconst newMap = foundry.utils.duplicate(this.map);\n\t\t\t\t\t\tnewMap.splice(row, 1);\n\t\t\t\t\t\tthis.map = newMap;\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fa fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\tcallback: (event) => {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\"\n\t\t});\n\n\t\tdialog.render(true);\n\t}\n\n\t/**\n\t * Handle a change sort order click\n\t * @param {*} event\n\t */\n\t_onChangeSortOrder(event) {\n\t\tevent.preventDefault();\n\n\t\tconst anchor = event.currentTarget;\n\t\tconst liRow = anchor?.closest(\"li\");\n\t\tconst rowNumber = parseInt(liRow?.dataset.mappingRow);\n\t\tconst type = anchor?.className;\n\t\tconst newMap = foundry.utils.deepClone(this.map);\n\t\tconst mappingRow = newMap?.splice(rowNumber, 1) ?? [];\n\t\tlet newIndex = -1;\n\n\t\tswitch (type) {\n\t\t\tcase \"move-up\":\n\t\t\t\tnewIndex = rowNumber - 1;\n\t\t\t\tbreak;\n\n\t\t\tcase \"move-down\":\n\t\t\t\tnewIndex = rowNumber + 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (newIndex <= -1) return;\n\n\t\tnewMap.splice(newIndex, 0, ...mappingRow);\n\t\tthis.map = newMap;\n\t\tthis.render();\n\t}\n\n\t/**\n\t * Sort button handler\n\t * @param {*} event\n\t * @returns {Application}                 The rendered Application instance\n\t */\n\t_onClickSortButton(event) {\n\t\tconst sortDirection = this.sortDirection;\n\t\t// const newSortDirection = sortDirection === \"asc\" ? \"desc\" : \"asc\";\n\t\tswitch (sortDirection) {\n\t\t\tcase \"\":\n\t\t\t\tthis.sortDirection = \"asc\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"asc\":\n\t\t\t\tthis.sortDirection = \"desc\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"desc\":\n\t\t\t\tthis.sortDirection = \"\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn this.render();\n\t}\n\n\t/**\n\t * Sorts the given map by the name property\n\t * @param {Array} map\n\t * @param {*} direction\n\t * @returns {Array}\n\t */\n\t_sortMapByName(map, direction) {\n\t\treturn map.sort((a, b) => {\n\t\t\tif (direction === \"desc\") return b.name.localeCompare(a.name);\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t});\n\t}\n\n\t/**\n\t * Opens dialog to reset to default values.\n\t * @param {*} event\n\t */\n\t_onRestoreDefaults(event) {\n\t\tevent.preventDefault();\n\t\tconst content = game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.RestoreDefaultsContent\");\n\n\t\tconst confirmationDialog = new Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.RestoreDefaultsTitle\"),\n\t\t\tcontent,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\tcallback: ($html) => {\n\t\t\t\t\t\tconst checkbox = $html[0].querySelector(\"input[name='clear-cache']\");\n\t\t\t\t\t\tconst clearCache = checkbox?.checked;\n\t\t\t\t\t\tthis._restoreDefaults({ clearCache });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\tcallback: () => {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\",\n\t\t\tclose: () => {}\n\t\t});\n\n\t\tconfirmationDialog.render(true);\n\t}\n\n\t/**\n\t * Reset form handler\n\t * @param {*} event\n\t */\n\t_onResetForm(event) {\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ResetFormTitle\"),\n\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.ResetFormContent\"),\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fa fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\tcallback: (event) => {\n\t\t\t\t\t\tthis.map = this.initialMap;\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fa fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\tcallback: (event) => {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\"\n\t\t});\n\t\tdialog.render(true);\n\t}\n\n\tasync _onDrop(event) {\n\t\tevent.preventDefault();\n\t\tconst eventData = TextEditor.getDragEventData(event);\n\t\tconst link = await TextEditor.getContentLink(eventData);\n\t\tif (link) {\n\t\t\tconst targetInput = event.currentTarget.querySelector(\"input\");\n\t\t\ttargetInput.value = eventData.uuid;\n\t\t\treturn targetInput.dispatchEvent(new Event(\"change\"));\n\t\t}\n\t\treturn ui.notifications.error(game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.BadReference\"));\n\t}\n\n\t/**\n\t * Macro Config button click handler\n\t * @param {*} event\n\t */\n\t_onClickMacroConfig(event) {\n\t\tconst rowLi = event.target.closest(\"li\");\n\t\tconst conditionId = rowLi ? rowLi.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst condition = this.map.find((c) => c.id === conditionId);\n\n\t\tnew EnhancedConditionMacroConfig(condition).render(true);\n\t}\n\n\t/**\n\t * Trigger Config button click handler\n\t * @param {*} event\n\t */\n\t_onClickTriggerConfig(event) {\n\t\tconst rowLi = event.target.closest(\"li\");\n\t\tconst conditionId = rowLi ? rowLi.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst condition = this.map.find((c) => c.id === conditionId);\n\n\t\tnew EnhancedConditionTriggerConfig(condition).render(true);\n\t}\n\n\t/**\n\t * Option Config button click handler\n\t * @param {*} event\n\t */\n\t_onClickOptionConfig(event) {\n\t\tconst rowLi = event.target.closest(\"li\");\n\t\tconst conditionId = rowLi ? rowLi.dataset.conditionId : null;\n\n\t\tif (!conditionId) return;\n\n\t\tconst condition = this.map.find((c) => c.id === conditionId);\n\n\t\tconst config = new EnhancedConditionOptionConfig(condition);\n\t\tconfig.parent = this;\n\t\tconfig.render(true);\n\t}\n\n\t// Checks the updatedMap property against the initial map\n\t_hasMapChanged() {\n\t\tlet hasChanged = false;\n\t\tconst conditionMap = this.updatedMap;\n\n\t\tconditionMap.forEach((entry, index, array) => {\n\t\t\t// Check if the row exists in the saved map\n\t\t\tconst existingEntry = this.initialMap.find((e) => e.id === entry.id) ?? null;\n\t\t\tentry.isNew = !existingEntry;\n\n\t\t\t// If row is new or if its index has changed, it is also changed\n\t\t\tentry.isChanged = entry.isNew || index !== this.initialMap?.indexOf(existingEntry);\n\n\t\t\t// If it's not changed, check if the compared entries are equal\n\t\t\tif (!entry.isChanged) {\n\t\t\t\tentry.isChanged = !foundry.utils.isEmpty(foundry.utils.diffObject(existingEntry, entry));\n\t\t\t\thasChanged ||= entry.isChanged;\n\t\t\t}\n\t\t});\n\n\t\treturn hasChanged;\n\t}\n\n\t_hasEntryChanged(entry, existingEntry) {\n\t\tconst propsToCheck = [\n\t\t\t\"name\",\n\t\t\t\"img\",\n\t\t\t\"options\",\n\t\t\t\"reference\",\n\t\t\t\"applyTrigger\",\n\t\t\t\"removeTrigger\",\n\t\t\t\"activeEffect\"\n\t\t];\n\t\treturn propsToCheck.some((p) => this._hasPropertyChanged(p, existingEntry, entry));\n\t}\n\n\t/**\n\t * Checks a given propertyName on an original and comparison object to see if it has changed\n\t * @param {*} propertyName\n\t * @param {*} original\n\t * @param {*} comparison\n\t * @returns {boolean}\n\t */\n\t_hasPropertyChanged(propertyName, original, comparison) {\n\t\tconst originalValue = original?.[propertyName];\n\t\tconst comparisonValue = comparison?.[propertyName];\n\t\treturn (originalValue && !comparisonValue)\n\t\t\t|| (original && JSON.stringify(originalValue) !== JSON.stringify(comparisonValue));\n\t}\n\n\t_onEditImage(event) {\n\t\tconst current = event.target.getAttribute(\"src\");\n\t\tconst fp = new FilePicker({\n\t\t\tcurrent,\n\t\t\ttype: \"image\",\n\t\t\tcallback: (path) => {\n\t\t\t\tevent.currentTarget.src = path;\n\t\t\t\tconst iconPath = event.target.closest(\".content1\").querySelector(\".icon-path\");\n\t\t\t\ticonPath.value = path;\n\t\t\t\tthis.map = this.updatedMap;\n\t\t\t\tif (this._hasMapChanged()) this.render();\n\t\t\t},\n\t\t\ttop: this.position.top + 40,\n\t\t\tleft: this.position.left + 10\n\t\t});\n\t\treturn fp.browse();\n\t}\n}\n","import { ConditionLab } from \"./enhanced-conditions/condition-lab.js\";\nimport { EnhancedConditions } from \"./enhanced-conditions/enhanced-conditions.js\";\nimport { TrigglerForm } from \"./triggler/triggler-form.js\";\n\n/**\n * Registers the module's settings.\n */\nexport function registerSettings() {\n\t/* -------------------------------------------- */\n\t/*            Setting Configuration             */\n\t/* -------------------------------------------- */\n\n\tgame.settings.register(\"condition-lab-triggler\", \"conditionsOutputToChat\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.OutputChatN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.OutputChatH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: (s) => {\n\t\t\tif (s === true) {\n\t\t\t\tDialog.confirm({\n\t\t\t\t\ttitle: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OutputChatConfirm.Title\"),\n\t\t\t\t\tcontent: game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.OutputChatConfirm.Content\"),\n\t\t\t\t\tyes: () => {\n\t\t\t\t\t\tconst newMap = foundry.utils.deepClone(game.clt.conditions);\n\t\t\t\t\t\tif (!newMap.length) return;\n\t\t\t\t\t\tnewMap.forEach((c) => (c.options.outputChat = true));\n\t\t\t\t\t\tgame.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", newMap);\n\t\t\t\t\t},\n\t\t\t\t\tno: () => { }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"conditionsOutputDuringCombat\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.OutputCombatN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.OutputCombatH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"removeDefaultEffects\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.RemoveDefaultEffectsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.RemoveDefaultEffectsH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false,\n\t\tonChange: () => {\n\t\t\tEnhancedConditions._updateStatusEffects();\n\t\t}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"defaultConditionsOutputToChat\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.DefaultOutputChatN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.DefaultOutputChatH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"enhancedConditionsMigrationVersion\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.MigrationVersionN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.MigrationVersionH\",\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tconfig: false,\n\t\tapiOnly: true,\n\t\tdefault: \"\"\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"showSortDirectionDialog\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.ShowSortDirectionDialogN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.ShowSortDirectionDialogH\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tconfig: true,\n\t\tdefault: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"defaultSpecialStatusEffects\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.DefaultSpecialStatusEffectsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.DefaultSpecialStatusEffectsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: CONFIG.specialStatusEffects,\n\t\tconfig: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"specialStatusEffectMapping\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.SpecialStatusEffectMappingN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.SpecialStatusEffectMappingH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: {},\n\t\tconfig: false\n\t});\n\n\t/* -------------------------------------------- */\n\t/*              EnhancedConditions              */\n\t/* -------------------------------------------- */\n\n\tgame.settings.registerMenu(\"condition-lab-triggler\", \"enchantedConditionsMenu\", {\n\t\tname: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\tlabel: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\thint: \"CLT.ENHANCED_CONDITIONS.Lab.Hint\",\n\t\ticon: \"fas fa-flask\",\n\t\ttype: ConditionLab,\n\t\trestricted: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"coreStatusIcons\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.CoreIconsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.CoreIconsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tconfig: false\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"conditionMapType\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.MapTypeN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.MapTypeH\",\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"\",\n\t\tchoices: {\n\t\t\tdefault: \"CLT.SETTINGS.EnhancedConditions.MapType.Choices.default\",\n\t\t\tcustom: \"CLT.SETTINGS.EnhancedConditions.MapType.Choices.custom\",\n\t\t\tother: \"CLT.SETTINGS.EnhancedConditions.MapType.Choices.other\"\n\t\t},\n\t\tconfig: false,\n\t\tapiOnly: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"defaultConditionMaps\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.DefaultMapsN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.DefaultMapsH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: {}\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"activeConditionMap\", {\n\t\tname: \"CLT.SETTINGS.EnhancedConditions.ActiveConditionMapN\",\n\t\thint: \"CLT.SETTINGS.EnhancedConditions.ActiveConditionMapH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tonChange: (conditionMap) => {\n\t\t\tEnhancedConditions._updateStatusEffects(conditionMap);\n\n\t\t\t// Save the active condition map to a convenience property\n\t\t\tif (game.clt) game.clt.conditions = conditionMap;\n\t\t}\n\t});\n\n\t/* -------------------------------------------- */\n\t/*                 TokenUtility                 */\n\t/* -------------------------------------------- */\n\n\tif (!game.modules.get(\"status-halo\")?.active && !game.modules.get(\"illandril-token-hud-scale\")?.active) {\n\t\tgame.settings.register(\"condition-lab-triggler\", \"effectSize\", {\n\t\t\tname: \"CLT.SETTINGS.TokenUtility.TokenEffectSizeN\",\n\t\t\thint: \"CLT.SETTINGS.TokenUtility.TokenEffectSizeH\",\n\t\t\tdefault: \"small\",\n\t\t\tscope: \"client\",\n\t\t\ttype: String,\n\t\t\tchoices: {\n\t\t\t\tsmall: \"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.small\",\n\t\t\t\tmedium: \"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.medium\",\n\t\t\t\tlarge: \"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.large\",\n\t\t\t\txLarge: \"CLT.SETTINGS.TokenUtility.TokenEffectSize.choices.xLarge\"\n\t\t\t},\n\t\t\tconfig: true,\n\t\t\tonChange: () => {\n\t\t\t\tcanvas.draw();\n\t\t\t}\n\t\t});\n\t}\n\n\t/* -------------------------------------------- */\n\t/*                    Triggler                  */\n\t/* -------------------------------------------- */\n\n\tgame.settings.registerMenu(\"condition-lab-triggler\", \"trigglerMenu\", {\n\t\tname: \"CLT.SETTINGS.Triggler.TriggersN\",\n\t\tlabel: \"CLT.SETTINGS.Triggler.TriggersN\",\n\t\thint: \"CLT.SETTINGS.Triggler.TriggersH\",\n\t\ticon: \"fas fa-exclamation\",\n\t\ttype: TrigglerForm,\n\t\trestricted: true\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"storedTriggers\", {\n\t\tname: \"CLT.SETTINGS.Triggler.TriggersN\",\n\t\thint: \"CLT.SETTINGS.Triggler.TriggersH\",\n\t\tscope: \"world\",\n\t\ttype: Object,\n\t\tdefault: [],\n\t\tonChange: () => { }\n\t});\n\n\tgame.settings.register(\"condition-lab-triggler\", \"hasRunMigration\", {\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false\n\t});\n\n\t/* -------------------------------------------- */\n\n\tgame.settings.register(\"condition-lab-triggler\", \"sceneControls\", {\n\t\tname: \"CLT.SETTINGS.SceneControls.Name\",\n\t\thint: \"CLT.SETTINGS.SceneControls.Hint\",\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: true,\n\t\trequiresReload: true\n\t});\n}\n","/* -------------------------------------------- */\n/*                    Imports                   */\n/* -------------------------------------------- */\nimport { libWrapper } from \"./libWrapper.js\";\nimport { registerSettings } from \"./settings.js\";\nimport { Sidekick } from \"./sidekick.js\";\n\n/* ------------------ Gadgets ----------------- */\n\nimport { EnhancedConditions } from \"./enhanced-conditions/enhanced-conditions.js\";\n\n/* ------------------- Utils ------------------ */\n\nimport { ConditionLab } from \"./enhanced-conditions/condition-lab.js\";\nimport { TrigglerForm } from \"./triggler/triggler-form.js\";\nimport { Triggler } from \"./triggler/triggler.js\";\n\n/* -------------------------------------------- */\n/*                    System                    */\n/* -------------------------------------------- */\n\n/* ------------------- Init ------------------- */\n\nHooks.on(\"i18nInit\", () => {\n\tregisterSettings();\n\n\t// Assign the namespace Object if it already exists or instantiate it as an object if not\n\tgame.clt = EnhancedConditions;\n\tui.clt = {};\n\n\t// Execute housekeeping\n\tSidekick.loadTemplates();\n\n\t// Keybinds\n\tgame.keybindings.register(\"condition-lab-triggler\", \"openConditionLab\", {\n\t\tname: \"CLT.KEYBINDINGS.openConditionLab.name\",\n\t\tonDown: () => {\n\t\t\tnew ConditionLab().render(true);\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL\n\t});\n\tgame.keybindings.register(\"condition-lab-triggler\", \"openTriggler\", {\n\t\tname: \"CLT.KEYBINDINGS.openTriggler.name\",\n\t\tonDown: () => {\n\t\t\tnew TrigglerForm().render(true);\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL\n\t});\n\n\t// Wrappers\n\tif (!game.modules.get(\"status-halo\")?.active && !game.modules.get(\"illandril-token-hud-scale\")?.active) {\n\t\tconst effectSizes = {\n\t\t\txLarge: {\n\t\t\t\tmultiplier: 5,\n\t\t\t\tdivisor: 2\n\t\t\t},\n\t\t\tlarge: {\n\t\t\t\tmultiplier: 3.3,\n\t\t\t\tdivisor: 3\n\t\t\t},\n\t\t\tmedium: {\n\t\t\t\tmultiplier: 2.5,\n\t\t\t\tdivisor: 4\n\t\t\t},\n\t\t\tsmall: {\n\t\t\t\tmultiplier: 2,\n\t\t\t\tdivisor: 5\n\t\t\t}\n\t\t};\n\t\tlibWrapper.register(\n\t\t\t\"condition-lab-triggler\",\n\t\t\t\"Token.prototype._refreshEffects\",\n\t\t\tfunction () {\n\t\t\t\tconst effectSize = game.settings.get(\"condition-lab-triggler\", \"effectSize\");\n\t\t\t\t// Use the default values if no setting found\n\t\t\t\tconst { multiplier = 2, divisor = 5 } = effectSizes[effectSize];\n\n\t\t\t\tlet i = 0;\n\t\t\t\tconst size = Math.round(canvas.dimensions.size / 2 / 5) * multiplier;\n\t\t\t\tconst rows = Math.floor(this.document.height * divisor);\n\n\t\t\t\t// Unchanged\n\t\t\t\tconst bg = this.effects.bg.clear().beginFill(0x000000, 0.4)\n\t\t\t\t\t.lineStyle(1.0, 0x000000);\n\t\t\t\tfor (const effect of this.effects.children) {\n\t\t\t\t\tif (effect === bg) continue;\n\n\t\t\t\t\tif (effect === this.effects.overlay) {\n\t\t\t\t\t\tconst { width, height } = this.getSize();\n\t\t\t\t\t\tconst size = Math.min(width * 0.6, height * 0.6);\n\t\t\t\t\t\teffect.width = effect.height = size;\n\t\t\t\t\t\teffect.position = this.getCenterPoint({ x: 0, y: 0 });\n\t\t\t\t\t\teffect.anchor.set(0.5, 0.5);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teffect.width = effect.height = size;\n\t\t\t\t\t\teffect.x = Math.floor(i / rows) * size;\n\t\t\t\t\t\teffect.y = (i % rows) * size;\n\t\t\t\t\t\tbg.drawRoundedRect(effect.x + 1, effect.y + 1, size - 2, size - 2, 2);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"OVERRIDE\"\n\t\t);\n\t}\n});\n\nHooks.on(\"ready\", async () => {\n\tgame.clt.CoreStatusEffects = foundry.utils.deepClone(CONFIG.statusEffects)\n\t\t.map((status) => {\n\t\t\t/** @deprecated since v12 */\n\t\t\tfor (const [oldKey, newKey] of Object.entries({ label: \"name\", icon: \"img\" })) {\n\t\t\t\tconst msg = `StatusEffectConfig#${oldKey} has been deprecated in favor of StatusEffectConfig#${newKey}`;\n\t\t\t\tObject.defineProperty(status, oldKey, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tfoundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n\t\t\t\t\t\treturn this[newKey];\n\t\t\t\t\t},\n\t\t\t\t\tset(value) {\n\t\t\t\t\t\tfoundry.utils.logCompatibilityWarning(msg, { since: 12, until: 14, once: true });\n\t\t\t\t\t\tthis[newKey] = value;\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tconfigurable: true\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn status;\n\t\t});\n\tgame.clt.CoreSpecialStatusEffects = foundry.utils.deepClone(CONFIG.specialStatusEffects);\n\tgame.clt.supported = false;\n\tlet defaultMaps = game.settings.get(\"condition-lab-triggler\", \"defaultConditionMaps\");\n\tlet conditionMap = game.settings.get(\"condition-lab-triggler\", \"activeConditionMap\");\n\n\tconst mapType = game.settings.get(\"condition-lab-triggler\", \"conditionMapType\");\n\n\t// If there's no defaultMaps or defaultMaps doesn't include game system, check storage then set appropriately\n\tif (\n\t\tgame.user.isGM\n\t\t&& (\n\t\t\t!defaultMaps\n\t\t\t|| Object.keys(defaultMaps).length === 0\n\t\t\t|| !Object.keys(defaultMaps).includes(game.system.id)\n\t\t)\n\t) {\n\t\tdefaultMaps = await EnhancedConditions._loadDefaultMaps();\n\t\tgame.settings.set(\"condition-lab-triggler\", \"defaultConditionMaps\", defaultMaps);\n\t}\n\n\t// If map type is not set and a default map exists for the system, set maptype to default\n\tif (!mapType && defaultMaps instanceof Object && Object.keys(defaultMaps).includes(game.system.id)) {\n\t\tgame.settings.set(\"condition-lab-triggler\", \"conditionMapType\", \"default\");\n\t}\n\n\t// If there's no condition map, get the default one\n\tif (!conditionMap.length) {\n\t\t// Pass over defaultMaps since the storage version is still empty\n\t\tconditionMap = EnhancedConditions.getDefaultMap(defaultMaps);\n\n\t\tif (game.user.isGM && conditionMap.length) {\n\t\t\tgame.settings.set(\"condition-lab-triggler\", \"activeConditionMap\", conditionMap);\n\t\t}\n\t}\n\n\t// If map type is not set, now set to default\n\tif (!mapType && conditionMap.length) {\n\t\tgame.settings.set(\"condition-lab-triggler\", \"conditionMapType\", \"default\");\n\t}\n\n\t// Update status icons accordingly\n\tif (game.user.isGM) {\n\t\t// CONFIG.statusEffects\n\t\t// CONFIG.specialStatusEffects\n\t}\n\t// const specialStatusEffectMap = game.settings.get(\"condition-lab-triggler\", \"specialStatusEffectMapping\");\n\tif (conditionMap.length) EnhancedConditions._updateStatusEffects(conditionMap);\n\tsetInterval(EnhancedConditions.updateConditionTimestamps, 15000);\n\n\t// Save the active condition map to a convenience property\n\tgame.clt.conditions = conditionMap;\n\n\tgame.clt.supported = true;\n});\n\n/* -------------------------------------------- */\n/*                    Entity                    */\n/* -------------------------------------------- */\n\n/* ------------------- Actor ------------------ */\n\nHooks.on(\"updateActor\", (actor, updateData, options, userId) => {\n\t// Workaround for actor array returned in hook for non triggering clients\n\tif (game.userId !== userId) return;\n\tTriggler._processUpdate(actor, updateData, \"system\");\n});\n\n/* --------------- Active Effect -------------- */\n\nHooks.on(\"createActiveEffect\", (effect, options, userId) => {\n\tif (!game.user.isGM || game.userId !== userId) return;\n\tEnhancedConditions._processActiveEffectChange(effect, \"create\");\n});\n\nHooks.on(\"deleteActiveEffect\", (effect, options, userId) => {\n\tif (!game.user.isGM || game.userId !== userId) return;\n\tEnhancedConditions._processActiveEffectChange(effect, \"delete\");\n});\n\n/* ------------------ Combat ------------------ */\n\nHooks.on(\"updateCombat\", (combat, update, options, userId) => {\n\tconst enableOutputCombat = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputDuringCombat\");\n\tconst outputChatSetting = game.settings.get(\"condition-lab-triggler\", \"conditionsOutputToChat\");\n\tconst combatant = combat.combatant;\n\n\tif (\n\t\t!foundry.utils.hasProperty(update, \"turn\")\n\t\t|| !combatant\n\t\t|| !outputChatSetting\n\t\t|| !enableOutputCombat\n\t\t|| !game.user.isGM\n\t) {\n\t\treturn;\n\t}\n\n\tconst token = combatant.token;\n\n\tif (!token) return;\n\n\tconst tokenConditions = EnhancedConditions.getConditions(token, { warn: false });\n\tlet conditions = tokenConditions && tokenConditions.conditions ? tokenConditions.conditions : [];\n\tconditions = conditions instanceof Array ? conditions : [conditions];\n\n\tif (!conditions.length) return;\n\n\tconst chatConditions = conditions.filter((c) => c.options?.outputChat);\n\n\tif (!chatConditions.length) return;\n\n\tEnhancedConditions.outputChatMessage(token, chatConditions, { type: \"active\" });\n});\n\n/* -------------- Scene Controls -------------- */\nHooks.on(\"getSceneControlButtons\", function (hudButtons) {\n\tif (game.user.isGM && game.settings.get(\"condition-lab-triggler\", \"sceneControls\")) {\n\t\tlet hud = hudButtons.find((val) => val.name === \"token\");\n\t\tif (hud) {\n\t\t\thud.tools.push({\n\t\t\t\tname: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\t\t\ttitle: \"CLT.ENHANCED_CONDITIONS.Lab.Title\",\n\t\t\t\ticon: \"fas fa-flask\",\n\t\t\t\tbutton: true,\n\t\t\t\tonClick: async () => new ConditionLab().render(true)\n\t\t\t});\n\t\t\thud.tools.push({\n\t\t\t\tname: \"Triggler\",\n\t\t\t\ttitle: \"Triggler\",\n\t\t\t\ticon: \"fas fa-exclamation\",\n\t\t\t\tbutton: true,\n\t\t\t\tonClick: async () => new TrigglerForm().render(true)\n\t\t\t});\n\t\t}\n\t}\n});\n\nHooks.on(\"renderSceneControls\", (app, html, data) => {\n\tconst trigglerButton = html.find('li[data-tool=\"Triggler\"]')[0];\n\tif (trigglerButton) {\n\t\ttrigglerButton.style.display = \"inline-block\";\n\t\tconst exclamationMark = trigglerButton.children[0];\n\t\texclamationMark.style.marginRight = \"0px\";\n\t\tconst rightChevron = document.createElement(\"i\");\n\t\trightChevron.classList.add(\"fas\", \"fa-angle-right\");\n\t\trightChevron.style.marginRight = \"0px\";\n\t\ttrigglerButton.insertBefore(rightChevron, exclamationMark);\n\t\tconst leftChevron = document.createElement(\"i\");\n\t\tleftChevron.classList.add(\"fas\", \"fa-angle-left\");\n\t\texclamationMark.after(leftChevron);\n\t}\n});\n\n/* ------------------- Misc ------------------- */\n\nHooks.on(\"renderSettingsConfig\", (app, html, data) => {\n\tconst trigglerMenu = html.find(\"button[data-key=\\\"condition-lab-triggler.trigglerMenu\\\"]\")[0];\n\tif (trigglerMenu) {\n\t\tconst exclamationMark = trigglerMenu.children[0];\n\t\texclamationMark.style.marginRight = \"0px\";\n\t\tconst rightChevron = document.createElement(\"i\");\n\t\trightChevron.classList.add(\"fas\", \"fa-angle-right\");\n\t\trightChevron.style.marginRight = \"0px\";\n\t\ttrigglerMenu.insertBefore(rightChevron, exclamationMark);\n\t\tconst leftChevron = document.createElement(\"i\");\n\t\tleftChevron.classList.add(\"fas\", \"fa-angle-left\");\n\t\texclamationMark.after(leftChevron);\n\t}\n});\n\nHooks.on(\"renderMacroConfig\", (app, html, data) => {\n\tconst typeSelect = html.find(\"select[name='type']\");\n\tconst typeSelectDiv = typeSelect.closest(\"div\");\n\tconst flag = app.object.getFlag(\"condition-lab-triggler\", \"macroTrigger\");\n\tconst triggers = game.settings.get(\"condition-lab-triggler\", \"storedTriggers\");\n\n\tconst select = foundry.applications.fields.createSelectInput({\n\t\tname: \"flags.condition-lab-triggler.macroTrigger\",\n\t\toptions: triggers,\n\t\tvalue: flag,\n\t\tblank: \"CLT.ENHANCED_CONDITIONS.MacroConfig.NoTriggerSet\",\n\t\tlocalize: true,\n\t\tsort: true,\n\t\tvalueAttr: \"id\",\n\t\tlabelAttr: \"text\"\n\t});\n\n\ttypeSelectDiv.after($(`\n\t\t<div class=\"form-group\">\n\t\t\t<label>${game.i18n.localize(\"CLT.Trigger\")}</label>\n\t\t\t${select.outerHTML}\n\t\t</div>\n\t`));\n});\n\n/* ------------------- Chat ------------------- */\n\nHooks.on(\"renderChatLog\", (app, html, data) => {\n\tEnhancedConditions.updateConditionTimestamps();\n});\n\nHooks.on(\"renderChatMessage\", (app, html, data) => {\n\tif (data.message.content && !data.message.content.match(\"enhanced-conditions\")) {\n\t\treturn;\n\t}\n\n\tconst speaker = data.message.speaker;\n\n\tif (!speaker) return;\n\n\tconst removeConditionAnchor = html.find(\"a[name='remove-row']\");\n\tconst undoRemoveAnchor = html.find(\"a[name='undo-remove']\");\n\n\t/**\n\t * @todo #284 move to chatlog listener instead\n\t */\n\tremoveConditionAnchor.on(\"click\", (event) => {\n\t\tconst conditionListItem = event.target.closest(\"li\");\n\t\tconst conditionName = conditionListItem.dataset.conditionName;\n\t\tconst messageListItem = conditionListItem?.parentElement?.closest(\"li\");\n\t\tconst messageId = messageListItem?.dataset?.messageId;\n\t\tconst message = messageId ? game.messages.get(messageId) : null;\n\n\t\tif (!message) return;\n\n\t\tconst token = canvas.tokens.get(speaker.token);\n\t\tconst actor = game.actors.get(speaker.actor);\n\t\tconst entity = token ?? actor;\n\n\t\tif (!entity) return;\n\n\t\tEnhancedConditions.removeCondition(conditionName, entity, { warn: false });\n\t});\n\n\tundoRemoveAnchor.on(\"click\", (event) => {\n\t\tconst conditionListItem = event.target.closest(\"li\");\n\t\tconst conditionName = conditionListItem.dataset.conditionName;\n\t\tconst messageListItem = conditionListItem?.parentElement?.closest(\"li\");\n\t\tconst messageId = messageListItem?.dataset?.messageId;\n\t\tconst message = messageId ? game.messages.get(messageId) : null;\n\n\t\tif (!message) return;\n\n\t\tconst speaker = message?.speaker;\n\n\t\tif (!speaker) return;\n\n\t\tconst token = canvas.tokens.get(speaker.token);\n\t\tconst actor = game.actors.get(speaker.actor);\n\t\tconst entity = token ?? actor;\n\n\t\tif (!entity) return;\n\n\t\tEnhancedConditions.addCondition(conditionName, entity);\n\t});\n});\n\nHooks.on(\"renderDialog\", (app, html, data) => {\n\tswitch (app.title) {\n\t\tcase game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.ConditionLab.SortDirectionSave.Title\"):\n\t\t\tConditionLab._onRenderSaveDialog(app, html, data);\n\t\t\tbreak;\n\n\t\tcase game.i18n.localize(\"CLT.ENHANCED_CONDITIONS.Lab.RestoreDefaultsTitle\"):\n\t\t\tConditionLab._onRenderRestoreDefaultsDialog(app, html, data);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n});\n\n/* -------------- Combat Tracker -------------- */\n\nHooks.on(\"renderCombatTracker\", (app, html, data) => {\n\thtml.find(\"img[class='token-effect']\").each((index, element) => {\n\t\tconst url = new URL(element.src);\n\t\tconst path = url?.pathname?.substring(1);\n\t\tconst conditions = EnhancedConditions.getConditionsByIcon(path);\n\t\tconst statusEffect = CONFIG.statusEffects.find((e) => e.img === path);\n\n\t\tif (conditions?.length) {\n\t\t\telement.title = conditions[0];\n\t\t} else if (statusEffect?.name) {\n\t\t\telement.title = game.i18n.localize(statusEffect.name);\n\t\t}\n\t});\n});\n\n/* ---------------- Custom Apps --------------- */\n\nHooks.on(\"renderConditionLab\", (app, html, data) => {\n\tConditionLab._onRender(app, html, data);\n});\n"],"names":[],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
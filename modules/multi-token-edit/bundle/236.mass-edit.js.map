{"version":3,"file":"236.mass-edit.js","mappings":"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","sources":["webpack://multi-token-edit/./multi-token-edit/scripts/randomizer/slider.js"],"sourcesContent":["import Color from '../color/color.js';\r\nimport '../jquery-ui/jquery-ui.js';\r\n\r\nexport class ColorSlider {\r\n  constructor(html, colors) {\r\n    this.slider = html.find('.slide');\r\n    this.colors = colors;\r\n    this.min = 0;\r\n    this.max = 100;\r\n    this._init();\r\n    this._activateListeners(html);\r\n  }\r\n\r\n  _activateListeners(html) {\r\n    this.hue = html.find('[name=\"hue\"]');\r\n    this.space = html.find('[name=\"space\"]');\r\n    const method = html.find('[name=\"method\"]');\r\n\r\n    this.hue.on('input', this.update.bind(this));\r\n    this.space.on('input', this.update.bind(this));\r\n    method.on('input', this.update.bind(this));\r\n  }\r\n\r\n  _init() {\r\n    this._createSlider();\r\n  }\r\n\r\n  update() {\r\n    clearTimeout(this.inputTimer);\r\n    this.inputTimer = setTimeout(() => this._updateSlider(), 500);\r\n  }\r\n\r\n  _updateSlider(event, ui) {\r\n    if (ui) this.colors[ui.handleIndex].offset = ui.value;\r\n    this.slider.find('.slide-back').remove();\r\n\r\n    let lVal = this.max + 1;\r\n    let lHandle;\r\n    let lIndex;\r\n\r\n    let handles = this.slider.find('span').toArray();\r\n\r\n    for (let i = 0; i < handles.length; i++) {\r\n      let sliderVal = this.slider.slider('values', i);\r\n      this.colors[i].offset = sliderVal;\r\n\r\n      if (sliderVal < lVal) {\r\n        lHandle = $(this);\r\n        lVal = sliderVal;\r\n        lIndex = i;\r\n      }\r\n\r\n      $(handles[i]).css('background', this.colors[i].hex);\r\n\r\n      if (sliderVal !== this.max) {\r\n        let [stripColor, stripColorVal] = this._getNextColor(this.colors[i].hex, sliderVal);\r\n        this._appendStrip(\r\n          this._genGradient(stripColor, this.colors[i].hex),\r\n          `${stripColorVal - sliderVal}%`,\r\n          `${sliderVal}%`\r\n        );\r\n      }\r\n    }\r\n\r\n    if (lVal !== this.min) {\r\n      this._appendStrip(\r\n        this._genGradient(this.colors[lIndex].hex, this.colors[lIndex].hex),\r\n        `${this.slider.slider('values', lIndex)}%`,\r\n        '0%'\r\n      );\r\n    }\r\n  }\r\n\r\n  _genGradient(color1, color2) {\r\n    const space = this.space?.val() || 'lch';\r\n\r\n    if (space === 'discrete') {\r\n      return 'rgba(0, 0, 0, 0)';\r\n    }\r\n\r\n    const hue = this.hue?.val() || 'shorter';\r\n    let r = Color.range(color2, color1, { space, hue });\r\n    let stops = Color.steps(r, { steps: 5, maxDeltaE: 3 });\r\n    return `linear-gradient(to right, ${stops.map((c) => c.display()).join(', ')})`;\r\n  }\r\n\r\n  _appendStrip(color, width, offset) {\r\n    this.slider.append(\r\n      $('<div></div>').addClass('slide-back').width(width).css('background', color).css('left', offset)\r\n    );\r\n  }\r\n\r\n  _getNextColor(currColor, val) {\r\n    let nextColor = currColor;\r\n    let nextColorVal = this.max + 1;\r\n    for (let i = 0; i < this.colors.length; i++) {\r\n      let cVal = this.slider.slider('values', i);\r\n      if (cVal > val && cVal < nextColorVal) {\r\n        nextColor = this.colors[i].hex;\r\n        nextColorVal = cVal;\r\n      }\r\n    }\r\n    return [nextColor, Math.min(nextColorVal, this.max)];\r\n  }\r\n\r\n  _onCreateSlider() {\r\n    let handles = this.slider.find('span').toArray();\r\n    for (let i = 0; i < handles.length; i++) {\r\n      let cPicker = $(\r\n        `<input type=\"color\" value=\"${this.colors[i].hex}\" style='opacity:0;width:100%;height:100%;position:absolute;pointer-events:none;'>`\r\n      );\r\n      const handle = $(handles[i]);\r\n      handle.attr('handleindex', i);\r\n      handle.append(cPicker);\r\n      handle.on('click', (event) => {\r\n        if (event.detail === 2) {\r\n          event.preventDefault();\r\n          cPicker.trigger('click');\r\n        }\r\n      });\r\n      cPicker.on('input', (event) => {\r\n        this.colors[i].hex = cPicker.val();\r\n        this.update();\r\n      });\r\n      handle.on('contextmenu', (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (this.colors.length > 2) {\r\n          let index = event.target.getAttribute('handleindex');\r\n          if (index) {\r\n            this.colors.splice(index, 1);\r\n            this._createSlider();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.slider.on('contextmenu', (event) => {\r\n      let offset = this.slider.offset();\r\n      var x = event.clientX - offset.left; //x position within the element.\r\n      let percentOffset = Math.round((x / this.slider.width()) * 100);\r\n\r\n      if (!this._percentExists(percentOffset)) {\r\n        let [col, _] = this._getNextColor(null, percentOffset);\r\n        if (!col) col = '#ff0000';\r\n        this.colors.push({ hex: col, offset: percentOffset });\r\n        this._createSlider();\r\n      }\r\n    });\r\n\r\n    this.update();\r\n  }\r\n\r\n  _percentExists(percent) {\r\n    return this.colors.some((c) => c.offset === percent);\r\n  }\r\n\r\n  getColors() {\r\n    return foundry.utils.deepClone(this.colors).sort((a, b) => a.offset - b.offset);\r\n  }\r\n\r\n  _createSlider = () => {\r\n    if (this.slider.slider('instance')) this.slider.slider('destroy');\r\n    this.slider.slider({\r\n      change: (event, ui) => this.update(event, ui),\r\n      create: () => this._onCreateSlider(),\r\n      min: this.min,\r\n      max: this.max,\r\n      values: this.colors.map((c) => c.offset),\r\n    });\r\n  };\r\n}\r\n"],"names":["ColorSlider","constructor","html","colors","this","slider","find","min","max","_init","_activateListeners","hue","space","method","on","update","bind","_createSlider","clearTimeout","inputTimer","setTimeout","_updateSlider","event","ui","handleIndex","offset","value","remove","lHandle","lIndex","lVal","handles","toArray","i","length","sliderVal","$","css","hex","stripColor","stripColorVal","_getNextColor","_appendStrip","_genGradient","color1","color2","val","r","range","steps","maxDeltaE","map","c","display","join","color","width","append","addClass","currColor","nextColor","nextColorVal","cVal","Math","_onCreateSlider","cPicker","handle","attr","detail","preventDefault","trigger","stopPropagation","index","target","getAttribute","splice","x","clientX","left","percentOffset","round","_percentExists","col","_","push","percent","some","getColors","foundry","utils","deepClone","sort","a","b","change","create","values"],"sourceRoot":""}